/* Minification failed. Returning unminified contents.
(2944,9-10): run-time error JS1005: Expected '(': {
(2947,5-6): run-time error JS1006: Expected ')': }
(2947,5-6): run-time error JS1008: Expected '{': }
(13559,5-6): run-time error JS1005: Expected '(': {
(13562,5-11): run-time error JS1006: Expected ')': return
(13562,5-11): run-time error JS1008: Expected '{': return
(13547,1-45): run-time error JS1301: End of file encountered before function is properly closed: function ValidateUploadingFileName(fileName)
(13891,1): run-time error JS1107: Expecting more source characters
(2937,19-37): run-time error JS1301: End of file encountered before function is properly closed: function (control)
(13891,1): run-time error JS1107: Expecting more source characters
(13891,1): run-time error JS1009: Expected '}'
 */
var CommonFunc = CommonFunc || {};

var QDMS = QDMS || {};
var rootUrl = '';
var viewMode = '';
var bookmarks = [];
var bookmarkBegin = [];
var bookmarkStart = [];
var newBookmark = [];
var Bookmarkflag = false;
var PublishedDoc = false;
var contextMenu = false;
var pinnedArray = [];
var UserId = '';
var AppId = '';
var notification = '';
var docPrintMode = "normal";
var tags = [];
var docSkipCount = 0;
var draftSkipCount = 0;
var homeDraftSkipCount = 0;
var homeDocSkipCount = 0;
var articleSkipCount = 0;
var articleDraftSkipCount = 0;
var articleTab = "publised";
var documentTab = "publised";
var notificationInterval = "";
var _articlesLoderHtmlTiny = "<tr><td><div class=\"tiny-loader\"><div class=\"loadernew loader--style3\" title=\"Loading\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\"><path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\" transform=\"rotate(300 25 25)\">";
_articlesLoderHtmlTiny = _articlesLoderHtmlTiny + "<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div></div></td></tr>";
var RemoveFileList = [];
var fileDelOrder = 1;
var isArticleDefaultHide = true;
var toggledArticles = [];

$(document).ready(function () {


    if ($("#CatListNewTab").val != null && $("#CatListNewTab").val() != "") {
        $("#categoryTitle").show();
        $("#categoryTitle").attr({ 'data-original-title': window.sessionStorage.CatTabName, 'title': window.sessionStorage.CatTabName});
        $('.categoryToolbarTitle').html(window.sessionStorage.CatTabName);
    }


    $(".loader10").show();
    $(".preloader-wrap").hide();

    $("#indexSearchFeild").keydown(function (event) {
        if (event.which === 32 && event.target.selectionStart === 0) {
            return false;
        }
    });
    //$('#PublishedTab').hide();
    //$('#DraftedTab').hide();

    $('.popup-close').click(function (event) {
        $(".pop-overlay").hide();
    });

    $(document).bind("paste", function (e) {
        var pastedData = e.originalEvent.clipboardData.getData('text');
        e.originalEvent.clipboardData.setData('text/plain', pastedData.trim());
        var theElem = $(getSelection().getRangeAt(0).startContainer).parent();
        if ($(theElem).is('div') && $(theElem).parents('.textDragger').length) {
            if (theElem.find('.link-box').length > 0)
                return;
            newElem = document.createElement('p');
            $(newElem).addClass('toc-text');
            $(newElem)[0].innerHTML = pastedData;
            $(theElem)[0].innerHTML = "";
            $(newElem).append('</br>');
            $(theElem).append(newElem);
            pos = $(newElem).text().length;
            setCaret($(newElem), pos);
        }
    });

    $(document).keydown(function (e) {

        if (getSelection().rangeCount > 0) {
            var theNode = $(getSelection().getRangeAt(0).endContainer);

            if ($(theNode)[0].nodeType == 3) {
                theNode = $(theNode).parent();
            }

            if ($(theNode).parents('blockquote').length && e.keyCode == 13) {
                if ($(theNode).text() == "") {

                    if ($(theNode).parents('blockquote').first().children().not('br').last().text() == "") {

                        e.preventDefault();
                        var tag = document.createElement('p');
                        $(tag).addClass("toc-text");
                        $(tag).append("<br>");

                        $(theNode).parents('blockquote').first().after(tag);
                        $(theNode).parents('blockquote').first().children().last().remove();

                    }
                    else {
                        e.preventDefault();
                        var tag = document.createElement('p');
                        $(tag).addClass("toc-text");
                        $(tag).append("<br>");

                        var stag = document.createElement('blockquote');
                        $(stag).attr("style", "margin:0 0 0 40px;border: none;padding: 0px;");
                        while (theNode.nextAll().length == 0) {
                            theNode = $(theNode).parent();
                        }
                        $(theNode).nextAll().each(function () {
                            $(stag).append(this);
                        });

                        $(theNode).parents('blockquote').first().after(stag);
                        $(theNode).parents('blockquote').first().after(tag);
                        $(theNode).nextAll().remove();
                        $(theNode).remove();

                    }

                    var newNode = $(getSelection().getRangeAt(0).endContainer);
                    if ($(newNode)[0].nodeType == 3) {
                        newNode = $(newNode).parent();
                    }
                    var bqNext = $(newNode).next();
                    setCaret(bqNext);
                }
            }

            else if ($(theNode).parents('blockquote').length && e.keyCode == 8) {
                if (getSelection().getRangeAt(0).endOffset == 0) {
                    var bkFlag = 0;
                    var pos = null;
                    e.preventDefault();

                    if ($(theNode).prev().length) {
                        if ($(theNode).text() == "") {
                            bqPrev = $(theNode).prev();
                            $(theNode).remove();
                            bkFlag = 1;
                        }
                        else {
                            bqPrev = $(theNode).prev();
                            pos = $(bqPrev).text().length;
                            $(bqPrev)[0].textContent += $(theNode)[0].textContent;
                            $(theNode).remove();
                            bkFlag = 1;
                        }
                    }
                    else if ($(theNode).prev().length == 0) {

                        if ($(theNode).parent().text() == "" && !$(theItem).is('tr,td,table,div')) {
                            var theItem = $(theNode).parent();
                            while ($(theItem).prev().length == 0) {
                                theItem = theItem.parent();
                            }
                        }
                        else {
                            var theItem = $(theNode).parent();
                            while ($(theItem).prev().length == 0 && !$(theItem).is('tr,td,table,div')) {
                                theItem = theItem.parent();
                            }
                        }
                    }

                    if (!bkFlag) {
                        if (theItem.prev().children().not('br').length) {
                            newItem = theItem.prev().children().not('br').last();
                            while ($(newItem).children().not('br').length) {
                                newItem = $(newItem).children().not('br').last();
                            }
                            pos = $(newItem).text().length;
                            $(newItem)[0].textContent += $(theItem)[0].textContent;
                            $(theItem).remove();
                            if (pos != null) {
                                setCaret(newItem, pos);
                            }
                            else {
                                setCaret(newItem);
                            }
                        }
                        else {
                            newItem = $(theItem).prev();
                            pos = $(newItem).text().length;
                            newItem[0].textContent += $(theItem)[0].textContent;
                            $(theItem).remove();
                            if (pos != null) {
                                setCaret(newItem, pos);
                            }
                            else {
                                setCaret(newItem);
                            }
                        }
                    }
                    else {
                        if (pos != null) {
                            setCaret(bqPrev, pos);
                        }
                        else {
                            setCaret(bqPrev);
                        }
                    }


                }
            }
            else if ($(theNode).parents('blockquote').length && e.keyCode == 46) {

                if (getSelection().getRangeAt(0).startOffset >= $(getSelection().getRangeAt(0).endContainer).text().length) {
                    e.preventDefault();

                    var theItem = $(theNode);
                    while ($(theItem).next().length == 0) {
                        theItem = $(theItem).parent();
                        if ($(theItem).is('td,tr,table,div')) {
                            break;
                        }
                    }
                    var nextItem = $(theItem).next();
                    if ($(nextItem).length != 0) {
                        pos = $(theNode).text().length;
                        $(theNode).text($(theNode).text() + $(nextItem).text());
                        $(nextItem).remove();
                        setCaret(theNode, pos);
                    }
                }
            }
        }
    });

    //do not change the setCaret function...modify your input parameter if required
    function setCaret(node, pos) {
        var el = node;
        var range = document.createRange();
        var sel = window.getSelection();

        if (pos != null) {

            if ($(el)[0].nodeType != 3) {

                if (pos > $(el)[0].childNodes[0].length) {
                    pos = $(el)[0].childNodes[0].length;
                }

                range.setStart($(el)[0].childNodes[0], pos);
                range.collapse(true);
            }
            else if ($(el)[0].nodeType == 3) {

                if (pos > $(el)[0].length) {
                    pos = $(el)[0].length;
                }

                range.setStart($(el)[0], pos);
                range.collapse(true);
            }
        }
        else {
            range.setStart(el[0], 1);
            range.collapse(true);
        }

        sel.removeAllRanges();
        sel.addRange(range);
    }

    $(document).keyup(function (e) {
        
        if (getSelection().rangeCount > 0) {

            if ($(e.target).parents('.textDragger').length) {
                if ($(e.target).find('p.medium-insert-active').length) {
                    var q = $(e.target).find('p.medium-insert-active');
                    q.each(function () {
                        $(this).removeClass("medium-insert-active");
                    });
                }
                if ($('.textDragger p:not(.toc-text)').length) {
                    $('.textDragger p:not(.toc-text)').removeAttr('class');
                    $('.textDragger p:not(.toc-text)').addClass('toc-text');
                }
            }

            if ($(e.target).hasClass('text-editor') && $(e.target)[0].innerHTML.includes("<br") && $(e.target).text() == "" && ($(e.target).find('ol').length == 0 || $(e.target).find('ul').length == 0))
                $(e.target).empty();


            if ($(e.target).is('ol,ul') || $(e.target).find('ol,ul').length > 0) {
                if (e.keyCode == 13 || e.keyCode == 8 || e.keyCode == 46) {

                    var theNode = $(getSelection().getRangeAt(0).endContainer);

                    if ($(theNode)[0].nodeType == 3) {
                        theNode = $(theNode).parent();
                    }

                    if (e.keyCode == 8) {

                        if ($(theNode).is('ul,ol') && $(theNode).parents('ul,ol').length == 0 && $(theNode).hasClass('sub-disc-list')) {
                            tabindexId = $(theNode).attr("tabindex");
                            tag = $(theNode)[0].tagName;
                            mainClass = $(theNode).attr("class");
                            type = $("#pageSize").val() == "A4" ? "guidlisce" : "Procedure";
                            mainClass = mainClass.replace(/\level.*$/, "").replace("sub-disc-list", "").replace("sub-list", "");
                            liClass = $(theNode).find('li').first().attr("class");
                            liText = $(theNode).find('li').first().html();
                            newElem = document.createElement(tag);
                            liElem = document.createElement('li');
                            $(liElem).addClass(liClass);
                            $(liElem)[0].innerHTML = liText;
                            $(newElem).attr("tabindex", tabindexId);
                            $(newElem).attr("id", tabindexId);
                            $(newElem).addClass(mainClass);
                            $(newElem).addClass(type);
                            $(newElem).append(liElem);
                            $(theNode).after(newElm);
                            $(theNode).remove();
                            setCaret(liElem, liText.length);
                        }
                        else {
                            theNode = $(theNode).parents('ul,ol').first();
                            if ($(theNode).is('ul,ol') && $(theNode).parents('ul,ol').length == 0 && $(theNode).hasClass('sub-disc-list')) {
                                tabindexId = uniqueObjectId();
                                tag = $(theNode)[0].tagName;
                                type = $("#pageSize").val() == "A4" ? "guidlisce" : "Procedure";
                                mainClass = $(theNode).attr("class");
                                tabindexId = $(theNode).attr("tabindex");
                                mainClass = mainClass.replace(/\level.*$/, "").replace("sub-disc-list", "").replace("sub-list", "");
                                liClass = $(theNode).find('li').first().attr("class");
                                liText = $(theNode).find('li').first().html();
                                newElem = document.createElement(tag);
                                liElem = document.createElement('li');
                                $(liElem).addClass(liClass);
                                $(liElem)[0].innerHTML = liText;
                                $(newElem).attr("tabindex", tabindexId);
                                $(newElem).attr("id", tabindexId);
                                $(newElem).addClass(mainClass);
                                $(newElem).addClass(type);
                                $(newElem).append(liElem);
                                $(theNode).after(newElem);
                                $(theNode).remove();
                                setCaret(liElem, liText.length);
                            }
                        }

                        if ($(theNode).is('li') && $(theNode).next('li').length) {
                            if ($(theNode).next('li').text() == "") {
                                $(theNode).next('li').remove();
                            }
                        }
                        else if ($(theNode).is('ul,ol') && $(theNode).find('li').last().length) {
                            var a = $(theNode).parent();
                            if ($(theNode).text() == "") {
                                $(theNode).remove();
                                if (a.html() == "" && a.parents('.resizeCol').length > 0) {
                                    a.html("&nbsp;");
                                }
                            }
                            else if ($(theNode).find('li').last().text() == "") {
                                $(theNode).find('li').last().remove();
                            }
                        }

                    }

                    init = getSelection().getRangeAt(0).startOffset;
                    if ($(e.target).find('li:contains("\u00a0")').length) {
                        spList = $(e.target).find('li:contains("\u00a0")');
                        $.each(spList, function () {
                            var actHtml = $(this).html().replace(/&nbsp;/g, "");
                            $(this).html(actHtml);
                        });
                        setCaret(getSelection().getRangeAt(0).startContainer, init);
                    }

                    $(e.target).find('li>p').each(function () {
                        const $this = $(this);
                        if ($this.html().replace(/<br>/g, '').length === 0)
                            $this.remove();
                    });

                    var key = e.keyCode;
                    AutomateNumbering(e.target, key);

                }

                else if (e.keyCode == 9) {
                    
                    var sel = getSelection().getRangeAt(0).commonAncestorContainer;
                    if ($(sel).is('ol[id],ul[id]')) {                        
                        return false;
                    }
                    if ($(sel).is('ol,ul')) {
                        $(sel).parents('[id]').first().find('ol,ul:not([id])').replaceWith($(sel).parents('[id]').first().find('ol,ul:not([id])').find('li'))
                        return false;
                    }
                    var range = getSelection().getRangeAt(0);

                    var html = getCurrentSelection();

                    var linkid = uniqueObjectId();
                    var tabindexId = uniqueObjectId();
                    var ItemID = "NaN";

                    var sal = "";
                    if ($(sel).is('li')) {
                        sal = sel;
                        if ($(sal).prop("class") == "") {
                            var parItem = $(sel).parents('ol[id],ul[id]').first();
                            var liClass = $(parItem).is('.ol-box') ? "ol-box2" : $(parItem).is('.ul-box') ? "ul-box" : $(parItem).is('.ul-alpha-box') ? "ul-box2" : $(parItem).is('.ul-hyp-box') ? "ul-hyp-box" : "ul-chk-box";
                            $(sal).addClass(liClass);
                        }
                    }
                    else {
                        sal = $(sel).parents('li.ol-box2, li.ul-box2, li.ul-box, li.ul-hyp-box,li.ul-chk-box').first()[0];
                        if (sal == null && $(sel).parents('li').length) {
                            var parItem = $(sel).parents('ol[id],ul[id]').first();
                            var liClass = $(parItem).is('.ol-box') ? "ol-box2" : $(parItem).is('.ul-box') ? "ul-box" : $(parItem).is('.ul-alpha-box') ? "ul-box2" : $(parItem).is('.ul-hyp-box') ? "ul-hyp-box" : "ul-chk-box";
                            sal = $(sel).parents('li').first().addClass(liClass);
                        }
                    }



                    var level = $(sal).parents('ul.ul-alpha-box').length + $(sal).parents('ol.ol-box').length + $(sal).parents('ul.ul-box').length + $(sal).parents('ul.ul-hyp-box').length + $(sal).parents('ul.ul-chk-box').length;
                                       
                    blocked = false;
                    theParent = $(sal).parents('[tabindex]').first();

                    if (level > 6 && (level != 7 || theParent.children('ul:not([tabindex])').length != 0 || theParent.children('ol:not([tabindex])').length != 0) || $(sal).children('ul[tabindex]').length > 0 || $(sal).children('ol[tabindex]').length > 0) {

                        if ($(sal).children('[tabindex]').length > 0) {
                            if ($(sal).index() == 0) {
                                if ($(sal).parents('ul[tabindex]').length)
                                    $(sal).parents('ul[tabindex]').children('ul:not([tabindex])').replaceWith(sal);
                                else if ($(sal).parents('ol[tabindex]').length)
                                    $(sal).parents('ol[tabindex]').children('ol:not([tabindex])').replaceWith(sal);
                            }
                            else {
                                tparent = $(sal).parent();
                                indx = $(tparent).index();
                                theParent = $(sal).parents('[tabindex]').first();
                                $(sal).remove();
                                retHtml = tparent[0].innerHTML;
                                returnHtml = unorderedlist(theParent, retHtml, level);
                                theParent.children()[indx].insertAdjacentHTML('beforebegin', returnHtml);
                                theParent.children()[indx + 1].insertAdjacentElement('beforebegin', sal);
                                tparent.remove();
                            }
                            blocked = true;
                        }
                        else {

                            item1 = $(sel).closest('.ol-box,.ul-alpha-box,ul.ul-hyp-box,ul.ul-box,ul.ul-chk-box,li.ol-box2,li.ul-box2,li.ul-box');

                            if (item1.is('li') && (item1.hasClass('ol-box2') || item1.hasClass('ul-box2') || item1.hasClass('ul-box') || item1.hasClass('ul-hyp-box'))) {
                                if ($(sel).parents('[tabindex]').first().is('ol'))
                                    $(item1).parents('ol:not([tabindex])').last().replaceWith(sal);
                                else if ($(sel).parents('[tabindex]').first().is('ul'))
                                    $(item1).parents('ul:not([tabindex])').last().replaceWith(sal);
                            }
                            else if (item1.hasClass('ol-box')) {
                                ind = $(item1).children('ol').not('[tabindex]').index();
                                retHtml = "";
                                if ($(sel).parents('ol[tabindex]').find('ol').not('[tabindex]').length) {
                                    tempList = $(sel).parents('ol[tabindex]').children('ol').not('[tabindex]').children('li');

                                    otherHtml = $(sel).closest('li')[0].outerHTML;

                                    if (tempList.length && $(sel).parents('ol[tabindex]').find('ol').not('[tabindex]').length > 1) {
                                        $.each(tempList, function (i) {
                                            retHtml += tempList[i].outerHTML;
                                        });

                                        if (level != null)
                                            retHtml = '<ol class="ol-box sub-disc-list level"' + (level - 1) + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + retHtml + '</ol>' + otherHtml;
                                        else
                                            retHtml = '<ol class="ol-box sub-disc-list"' + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + retHtml + '</ol>' + otherHtml;

                                        $(theParent).children()[ind].insertAdjacentHTML('beforebegin', retHtml);
                                        $(sel).parents('ol[tabindex]').find('ol').not('[tabindex]').remove();
                                    }
                                    else if ($(sel).parents('ol[tabindex]').length && $(sel).parents('ol[tabindex]').first().parent().children('ol').first().index() == 0) {
                                        d = $(sel).parents('ol[tabindex]').first().children('ol').not('[tabindex]').find('li');
                                        pilr = $(sel).parents('ol[tabindex]').first().parent();
                                        $(sel).parents('ol[tabindex]').first().children('ol').not('[tabindex]').remove();
                                        pilr.children('ol')[0].insertAdjacentHTML('beforebegin', d[0].outerHTML);
                                    }
                                    else {
                                        $(sal).parents('ol[tabindex]').first().children()[ind].replaceWith(sal);
                                    }

                                }
                                else {
                                    $(item1).children()[ind].replaceWith(sal);
                                }

                            }
                            else if (item1.hasClass('ul-box') || item1.hasClass('ul-alpha-box') || item1.hasClass('ul-hyp-box') || item1.hasClass('ul-chk-box')) {
                                if ($(sel).parents('ul[tabindex]').length && $(sel).parents('ul[tabindex]').first().parent().children('ul').first().index() == 0) {
                                    d = $(sel).parents('ul[tabindex]').first().children('ul').not('[tabindex]').find('li');
                                    pilr = $(sel).parents('ul[tabindex]').first().parent();
                                    $(sel).parents('ul[tabindex]').first().children('ul').not('[tabindex]').remove();
                                    pilr.children('ul')[0].insertAdjacentHTML('beforebegin', d[0].outerHTML);
                                }
                                else {
                                    ind = $(item1).children('ul').index();
                                    $(item1).children()[ind].replaceWith(sal);
                                }
                            }

                            blocked = true;
                        }
                    }

                    if (($(sel).is('li') || $(sal).is('li')) && blocked == false) {

                        if ($(sel).is('li')) {
                            sal = sel;
                            if ($(sal).prop("class") == "") {
                                var parItem = $(sel).parents('ol[id],ul[id]').first();
                                var liClass = $(parItem).is('.ol-box') ? "ol-box2" : $(parItem).is('.ul-box') ? "ul-box" : $(parItem).is('.ul-alpha-box') ? "ul-box2" : $(parItem).is('.ul-hyp-box') ? "ul-hyp-box" :"ul-chk-box";
                                $(sal).addClass(liClass);
                            }
                        }
                        else {
                            sal = $(sel).parents('li.ol-box2, li.ul-box2, li.ul-box, li.ul-hyp-box,li.ul-chk-box').first()[0];
                            if (sal == null && $(sel).parents('li').length) {
                                var parItem = $(sel).parents('ol[id],ul[id]').first();
                                var liClass = $(parItem).is('.ol-box') ? "ol-box2" : $(parItem).is('.ul-box') ? "ul-box" : $(parItem).is('.ul-alpha-box') ? "ul-box2" : $(parItem).is('.ul-hyp-box') ? "ul-hyp-box" : "ul-chk-box";
                                sal = $(sel).parents('li').first().addClass(liClass);
                            }
                        }

                        theParent = $(sal).parents('[tabindex]').first();

                        if (theParent.hasClass('ol-box'))
                            theSibling = theParent.children()[theParent.find('ol:not([tabindex])').first().index() - 1];
                        else
                            theSibling = theParent.children()[theParent.find('ul:not([tabindex])').first().index() - 1];


                        if (theParent != "") {
                            wflag = 0;

                            if (theParent.hasClass('ol-box')) {

                                var indx = $(sal).parents('[tabindex]').first().children('ol:not([tabindex])').first().index();

                                //if (indx == 0)
                                //    level = level - 1;

                                brkList = $(sal).parents('ol[tabindex]').first().find('ol').not('[tabindex]');
                                bkb = $(sal).parents('ol[tabindex]').first();
                                retHtml = "";
                                if ($(brkList).find('ol li').length > 1) {
                                    $.each(brkList, function (i) {
                                        if (i == brkList.length - 1) {
                                            tk = $(brkList[i]).find('li').last();
                                            $(brkList[i]).find('li').last().remove();

                                            cnt = brkList[i].innerHTML.split('<ol>')[0];
                                            retHtml += '<ol class="ol-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt + '</ol>' + tk[0].outerHTML + '</ol >';
                                        }
                                        else {
                                            cnt = brkList[i].innerHTML.split('<ol>')[0];
                                            retHtml += '<ol class="ol-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt;
                                            level++;

                                        }
                                    });
                                    brkList[0].insertAdjacentHTML('beforebegin', retHtml);
                                    brkList.remove();
                                    wflag = 1;
                                }

                                htmlList = d = $(sal).parents('ol[tabindex]').first().find('ol').not('[tabindex]').find('li');

                                if (htmlList.length > 1) {
                                    html = "";

                                    var theIndx = htmlList.index(sal);

                                    $.each(htmlList, function (i) {
                                        html += htmlList[i].outerHTML;
                                    });
                                    ind = $(sal).parents('ol[tabindex]').first().children('ol').not('[tabindex]').index();
                                    retHtml = '<ol class="ol-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ol>';
                                    $(sal).parents('ol[tabindex]').first().children()[ind].replaceWith($.parseHTML(retHtml)[0]);

                                    setCaret($('#' + linkid).children('li')[theIndx], 0)

                                    wflag = 1;
                                }
                            }
                            else if (theParent.hasClass('ul-box')) {

                                var indx = $(sal).parents('[tabindex]').first().children('ul:not([tabindex])').first().index();

                                //if (indx == 0)
                                //    level = level - 1;

                                brkList = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]');
                                bkb = $(sal).parents('ul[tabindex]').first();
                                retHtml = "";
                                if ($(brkList).find('ul>li').length > 1) {
                                    $.each(brkList, function (i) {
                                        if (i == brkList.length - 1) {
                                            tk = $(brkList[i]).find('li').last();
                                            $(brkList[i]).find('li').last().remove();

                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt + '</ul>' + tk[0].outerHTML + '</ul >';
                                        }
                                        else {
                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt;
                                            level++;

                                        }
                                    });
                                    brkList[0].insertAdjacentHTML('beforebegin', retHtml);
                                    brkList.remove();
                                    wflag = 1;
                                }

                                htmlList = d = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]').find('li');

                                if (htmlList.length > 1) {
                                    html = "";

                                    var theIndx = htmlList.index(sal);

                                    $.each(htmlList, function (i) {
                                        html += htmlList[i].outerHTML;
                                    });
                                    ind = $(sal).parents('ul[tabindex]').first().children('ul').not('[tabindex]').index();
                                    retHtml = '<ul class="ul-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
                                    $(sal).parents('ul[tabindex]').first().children()[ind].replaceWith($.parseHTML(retHtml)[0]);

                                    setCaret($('#' + linkid).children('li')[theIndx], 0);

                                    wflag = 1;
                                }
                            }
                            else if (theParent.hasClass('ul-alpha-box')) {

                                var indx = $(sal).parents('[tabindex]').first().children('ul:not([tabindex])').first().index();

                                //if (indx == 0)
                                //    level = level - 1;

                                brkList = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]');
                                bkb = $(sal).parents('ul[tabindex]').first();
                                retHtml = "";
                                if ($(brkList).find('ul>li').length > 1) {
                                    $.each(brkList, function (i) {
                                        if (i == brkList.length - 1) {
                                            tk = $(brkList[i]).find('li').last();
                                            $(brkList[i]).find('li').last().remove();

                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-alpha-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt + '</ul>' + tk[0].outerHTML + '</ul >';
                                        }
                                        else {
                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-alpha-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt;
                                            level++;

                                        }
                                    });
                                    brkList[0].insertAdjacentHTML('beforebegin', retHtml);
                                    brkList.remove();
                                    wflag = 1;
                                }

                                htmlList = d = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]').find('li');

                                if (htmlList.length > 1) {
                                    html = "";

                                    var theIndx = htmlList.index(sal);

                                    $.each(htmlList, function (i) {
                                        html += htmlList[i].outerHTML;
                                    });
                                    ind = $(sal).parents('ul[tabindex]').first().children('ul').not('[tabindex]').index();
                                    retHtml = '<ul class="ul-alpha-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
                                    $(sal).parents('ul[tabindex]').first().children()[ind].replaceWith($.parseHTML(retHtml)[0]);

                                    setCaret($('#' + linkid).children('li')[theIndx], 0);

                                    wflag = 1;
                                }
                            }
                            else if (theParent.hasClass('ul-hyp-box')) {

                                var indx = $(sal).parents('[tabindex]').first().children('ul:not([tabindex])').first().index();

                                //if (indx == 0)
                                //    level = level - 1;

                                brkList = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]');
                                bkb = $(sal).parents('ul[tabindex]').first();
                                retHtml = "";
                                if ($(brkList).find('ul>li').length > 1) {
                                    $.each(brkList, function (i) {
                                        if (i == brkList.length - 1) {
                                            tk = $(brkList[i]).find('li').last();
                                            $(brkList[i]).find('li').last().remove();

                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-hyp-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt + '</ul>' + tk[0].outerHTML + '</ul >';
                                        }
                                        else {
                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-hyp-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt;
                                            level++;

                                        }
                                    });
                                    brkList[0].insertAdjacentHTML('beforebegin', retHtml);
                                    brkList.remove();
                                    wflag = 1;
                                }

                                htmlList = d = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]').find('li');

                                if (htmlList.length > 1) {

                                    var theIndx = htmlList.index(sal);

                                    html = "";
                                    $.each(htmlList, function (i) {
                                        html += htmlList[i].outerHTML;
                                    });
                                    ind = $(sal).parents('ul[tabindex]').first().children('ul').not('[tabindex]').index();
                                    retHtml = '<ul class="ul-hyp-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
                                    $(sal).parents('ul[tabindex]').first().children()[ind].replaceWith($.parseHTML(retHtml)[0]);

                                    setCaret($('#' + linkid).children('li')[theIndx], 0);

                                    wflag = 1;
                                }
                            }
                            else if (theParent.hasClass('ul-chk-box')) {

                                var indx = $(sal).parents('[tabindex]').first().children('ul:not([tabindex])').first().index();

                                brkList = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]');
                                bkb = $(sal).parents('ul[tabindex]').first();
                                retHtml = "";
                                if ($(brkList).find('ul>li').length > 1) {
                                    $.each(brkList, function (i) {
                                        if (i == brkList.length - 1) {
                                            tk = $(brkList[i]).find('li').last();
                                            $(brkList[i]).find('li').last().remove();

                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-chk-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt + '</ul>' + tk[0].outerHTML + '</ul >';
                                        }
                                        else {
                                            cnt = brkList[i].innerHTML.split('<ul>')[0];
                                            retHtml += '<ul class="ul-chk-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + cnt;
                                            level++;

                                        }
                                    });
                                    brkList[0].insertAdjacentHTML('beforebegin', retHtml);
                                    brkList.remove();
                                    wflag = 1;
                                }

                                htmlList = d = $(sal).parents('ul[tabindex]').first().find('ul').not('[tabindex]').find('li');

                                if (htmlList.length > 1) {
                                    html = "";

                                    var theIndx = htmlList.index(sal);

                                    $.each(htmlList, function (i) {
                                        html += htmlList[i].outerHTML;
                                    });
                                    ind = $(sal).parents('ul[tabindex]').first().children('ul').not('[tabindex]').index();
                                    retHtml = '<ul class="ul-chk-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
                                    $(sal).parents('ul[tabindex]').first().children()[ind].replaceWith($.parseHTML(retHtml)[0]);

                                    setCaret($('#' + linkid).children('li')[theIndx], 0);

                                    wflag = 1;
                                }
                            }

                            if (wflag == 0) {
                                if ($(theSibling).attr('class') != "" && $(theSibling).attr('class') != null)
                                    returnHtml = unorderedlist(theSibling, $(sal).html(), level);
                                else
                                    returnHtml = unorderedlist(theParent, $(sal).html(), level);
                                orgLength = theParent.children().length;
                                if (theParent.children('ul:not([tabindex])').length > 0) {

                                    var indx = $(sal).parents('[tabindex]').first().children('ul:not([tabindex])').first().index();

                                    //if (indx == 0)
                                    //    level = level - 1;

                                    //if (indx == 0) {
                                    //    if ($(sel).parents('ul[tabindex]').length > 1 && $(sel).parents('ul[tabindex]').first().parent().children('ul').first().index() == 0) {
                                    //        var d = $(sel).parents('ul[tabindex]').first().children('ul').not('[tabindex]').find('li');
                                    //        var pilr = $(sel).parents('ul[id]').first().parent();
                                    //        $(sel).parents('ul[tabindex]').first().children('ul').not('[tabindex]').remove();
                                    //        pilr.children('ul')[0].insertAdjacentHTML('beforebegin', d[0].outerHTML);
                                    //    }
                                    //    else
                                    //        $(sal).parents('ul[id]').first().children()[indx].replaceWith(sal);
                                    //}
                                    //else {
                                    if (indx == orgLength - 1)
                                        theParent.children().last().replaceWith(returnHtml);
                                    else {
                                        theParent.children('ul:not([tabindex])').remove();
                                        theParent.children()[indx].insertAdjacentHTML('beforebegin', returnHtml);
                                    }                                    
                                }
                                else if (theParent.children('ol:not([tabindex])').length > 0) {

                                    var indx = $(sal).parents('[tabindex]').first().children('ol:not([tabindex])').first().index();

                                    //if (indx == 0)
                                    //    level = level - 1;

                                    //if (indx == 0) {
                                    //    if ($(sel).parents('ol[tabindex]').length > 1 && $(sel).parents('ol[tabindex]').first().parent().children('ol').first().index() == 0) {
                                    //        var d = $(sel).parents('ol[tabindex]').first().children('ol').not('[tabindex]').find('li');
                                    //        var pilr = $(sel).parents('ol[tabindex]').first().parent();
                                    //        $(sel).parents('ol[tabindex]').first().children('ol').not('[id]').remove();
                                    //        pilr.children('ol')[0].insertAdjacentHTML('beforebegin', d[0].outerHTML);
                                    //        //}                                       

                                    //    }
                                    //    else
                                    //        $(sal).parents('ol[id]').first().children()[indx].replaceWith(sal);
                                    //}
                                    //else {
                                    if (indx == orgLength - 1)
                                        theParent.children().last().replaceWith(returnHtml);                                  
                                    else {                                        
                                        theParent.children('ol:not([id])').remove();
                                        theParent.children()[indx].insertAdjacentHTML('beforebegin', returnHtml);                                        
                                    }
                                    
                                }
                            }

                        }

                        rectifySequence(theParent);
                        AutomateNumbering(theParent[0], 13);
                    }
                }


            }
        }
    });

    rootUrl = $("#hfdUrlPath").val();

    $("#pageTab-container").on("click", ".pageTab-item-close", function (event) {
        $(event.target).closest(".pageTab-item").remove();
    });
    $('.closepopup').click(function () {
        $('.custompopup').hide().removeClass('popup-open');
    });
    $('.custompopup input[type="number"]').on("keyup", function (e) {
        if ($(this).val().trim() == "") {
            $(this).val("");
        }
        if (parseFloat($(this).val()) > 36) {
            $(this).val(36.0);
            return false;
        }
        if (!/^\d*(.\d{0,1})?$/.test($(this).val())) {
            var number = $(this).val().split('.')[0].length;
            $(this).val($(this).val().substring(0, number + 2));
            return false;
        }
        else if ($(this).val().indexOf('.') != -1 && e.which == 190) {
            var number = $(this).val().split('.')[0].length;
            var prev = $(this).val().substring(0, number + 2);
            $(this).val("");
            $(this).val(prev);
            return false;
        }
    });
    if ($("#hfdViewDocId").val() != "" && $("#hfdFileType").val() == "" && $("#fromBulkDownload").val() != "BD" && $("#IsFileDelete").val() == "false")
        RenderDocView($("#hfdViewDocId").val());

    if ($("#hfdViewDocId").val() != "" && $("#IsFileDelete").val() == "true") {
        var ourVal = $("#hfdViewDocId").val();
        var fileID = $("#DeleteFileId").val();
        RemoveFileList = []
        if ($("#hfdFileType").val() == "D") {
            RemoveFileList.push(fileID);
            OpenDocEditView(ourVal);
        }
        else if ($("#hfdFileType").val() == "DD") {
            RemoveFileList.push(fileID);
            RenderIsDraftView(ourVal);
        }
        else if ($("#hfdFileType").val() == "A") {
            RemoveFileList.push(fileID);
            RenderArticleEditView(ourVal);
        }
        else if ($("#hfdFileType").val() == "AD") {
            RemoveFileList.push(fileID);
            RenderIsArticleDraftView(ourVal);
        }
    }
    //if ($("#hfdFileType").val() == "U") {
    //    QDMS.Menu.GetManageArticles();
    //}

    //if ($("#hfdViewDocId").val() != "" && $("#hfdFileType").val() == "DD" && $("#IsFileDelete").val() == "true") {
    //    var ourVal = $("#hfdViewDocId").val();
    //    RenderIsDraftView(ourVal);
    //}

    if ($("#fromBulkDownload").val() == "BD")
        BulkDownload();
    // Open files in new tab from search and Manage Doc/Article page
    // 0 -> Document
    // 1 -> Article
    // 2 -> Edit Doc from manage document page
    // 3 -> View pending article from manage article page 
    // 4 -> Edit article from manage article page
    if ($("#CatListNewTab").val() == "1") {

        var catlist = sessionStorage.getItem("CatListNewTabAll");
        RenderCategorisedDocListSec(catlist);
    }
    if ($("#hfdFileType").val() != "") {
        ////to remove query string from Url
        //window.history.replaceState(null, null, window.location.pathname);
        if ($("#hfdFileType").val() == "0")
            RenderDocView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "1")
            RenderArticleView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "2")
            DocEditView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "3")
            RenderArticleReviewView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "4")
            RenderArticleReviewEditView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "5")
            RenderManageEditView($("#hfdViewDocId").val());
        if ($("#hfdFileType").val() == "6")
            RenderHistoryView($("#hfdViewDocId").val(), "Y");
    }

    $('#CloseButtonAttach').click(function () {
        $(".popup-dcrlcommentZ").css("display", "none");
        $("#Popup_Comment_Id").val("");
        $('.fileattachbtnsec .displayName').text("No file chosen");
        $('.dcrl-comment-contentZ').val("");
        $('#fileAttachment').val("");
        InputFile = [];
    });
  
});

$(window).on('load', function () {
    if ($("#hfdViewDocId").val() == "" && $("#hfdFileType").val() == "" && $("#IsFileDelete").val() != "true" && $("#fromBulkDownload").val() != "BD" && $('#hdndcrlCommentid').val() == "") {
        resetPercentageloader();
        percentageLoader();
    }
});

$(document).on('click', "#tableWrapper", function () {
    if ($('.list-numbering-box').length) {
        $('.list-numbering-box').find('ul').css('display', 'block');
        return false;
    }
});

CommonFunc.Pin = {
    template: "<span class=\"pageTab-item\"><span id=\"@id\" title=\"@title\" class=\"pageTab-item-text text-ellipsis\" @event>@name</span><span class=\"pageTab-item-close\" title=\"Close\" onclick=\"CommonFunc.Pin._Remove('@itemId','@searchMode')\">x</span></span>",
    name: "",
    event: "",
    para: "",
    isEabled: true,
    _Add: function () {
        var html = "";
        html = this.template.replace("@name", this.name);
        html = html.replace("@id", this.para);
        html = html.replace("@title", this.name);

        if (this.event == "RenderDocView")
            html = html.replace("@event", "onclick=RenderDocView(\"" + this.para + "\")");
        else if (this.event == "RenderCategorisedDocList")
            html = html.replace("@event", "onclick=RenderCategorisedDocList(\"" + this.para + "\")");
        $("#pageTab-container").append(html);

    },

    _Remove: function (id, searchMode) {

        var tabItem = $("#pageTab-container").find("#" + id);
        if ($(tabItem) != undefined) {
            $(tabItem).closest(".pageTab-item").remove();
            pinnedArray.filter(function (item) {
                if (item.event == "searchDocument") {
                    if (item.Id == id && item.searchMode == searchMode) {
                        var index = pinnedArray.indexOf(item);
                        pinnedArray.splice(index, 1);
                    }
                } else {
                    if (item.Id == id) {
                        var index = pinnedArray.indexOf(item);
                        pinnedArray.splice(index, 1);
                    }
                }
            });
            //CommonFunc.Pin._CurrentPinnedItems(id);
            if ($("#pageTab-container").find(".pageTab-item").length == 0) {
                pinnedArray = [];
                $("#pageTab-container").find('.morepins').remove();
            }

            if (!$('#overflowPins .pageTab-item').length) {
                $('.morepins').css('display', 'none');
            }

        }
    },

    _AllPinnedItems: function (id) {

        var html = "";
        var itemExist = false;
        if (this.event == "searchDocument")
            html = this.template.replace("@name", (this.searchMode == "1" ? "Search by title " : this.searchMode == "2" ? "Search by document/article Number " : this.searchMode == "3" ? "Search by title/content " : "Search by title/content highlight ") + this.searchKey);
        else html = this.template.replace("@name", this.name);
        html = html.replace("@id", this.para);
        if (this.event == "searchDocument")
            html = html.replace("@title", (this.searchMode == "1" ? "Search by title " : this.searchMode == "2" ? "Search by document/article Number " : this.searchMode == "3" ? "Search by title/content " : "Search by title/content highlight ") + this.searchKey);
        else html = html.replace("@title", this.name);
        html = html.replace("@itemId", this.para);
        if (this.event == "RenderDocView")
            html = html.replace("@event", "onclick=RenderDocView(\"" + this.para + "\")");
        else if (this.event == "RenderCategorisedDocList")
            html = html.replace("@event", "onclick=RenderCategorisedDocList(\"" + this.para + "\")");
        else if (this.event == "RenderArticleView")
            html = html.replace("@event", "onclick=RenderArticleView(\"" + this.para + "\")");
        else if (this.event == "searchDocument")
            html = html.replace("@event", "onclick=\"searchPreviousDocument('" + this.para + "','" + this.searchMode + "')\"");
        html = html.replace("@searchMode", this.searchMode);

        var searchMode = this.searchMode;
        $.each(pinnedArray, function (i, item) {
            if (item.event == "searchDocument") {
                if (item.Id == id && item.searchMode == searchMode)
                    itemExist = true;
            }
            else if (item.Id == id) {
                itemExist = true;
            }
        });

        if (pinnedArray.length == 0 || !itemExist) {
            if (this.event == "searchDocument")
                pinnedArray.push({ Template: html, Id: id, event: "searchDocument", searchMode: this.searchMode });
            else pinnedArray.push({ Template: html, Id: id });

        }
    },

    _CurrentPinnedItems: function (id) {
        if (pinnedArray.length > 1) {
            var itemString = "";
            var collapseditemString = "";
            $('.wrapper').addClass('pinView');
            pinnedArray.filter(function (item) {
                if (item.Id == undefined) {

                    var index = pinnedArray.indexOf(item);
                    pinnedArray.splice(index, 1);
                }
            });

            var currentSerachMode = this.searchMode;
            $.each(pinnedArray, function (i, item) {
                if (item.event == "searchDocument") {
                    if (item.Id != id || item.searchMode != currentSerachMode) {
                        if (i < 7) {
                            itemString = itemString + item.Template;
                        } else {
                            collapseditemString = collapseditemString + item.Template;
                        }
                    }
                }
                else {
                    if (item.Id != id) {
                        if (i < 7) {
                            itemString = itemString + item.Template;
                        } else {
                            collapseditemString = collapseditemString + item.Template;
                        }
                    }
                }

            });
            if (collapseditemString.length == 0) {
                $("#pageTab-container").html("<span class=\"morepins\"><i class=\"fa fa-caret-square-o-down\" aria-hidden=\"true\"></i><span id=\"overflowPins\"></span></span>" + itemString);
                $(".morepins").click(function () {
                    $('#overflowPins').toggle();
                });
            } else {
                $('.morepins').css('display', 'block');
                $("#overflowPins").html(collapseditemString);

            }
        }
        else {
            $('.wrapper').removeClass('pinView'); $("#pageTab-container").html('')
        }
    },

    _IsMoreItemExist: function () {
        $(".pageTab-item").each(function () {
            var tagpos = $(this).offset().top;
            if (tagpos > 63) {
                $('.morepins').css('display', 'block');
            }
        });
    }
};


QDMS.Menu = {
    ContentManagement: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        TemplateFunction.ContentTemplate._renderTemplate();
    },
    HeaderManagement: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        TemplateFunction.HeaderTemplate._renderTemplate();
    },
    FooterManagement: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        TemplateFunction.FooterTemplate._renderTemplate();
    },
    UserTemplateManagement: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        TemplateFunction.UserTemplateManagement._renderTemplate();
    },
    DocumentManagement: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        TemplateFunction.DocumentTemplate._renderTemplate();
    },
    CategoryManagement: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $("#search-category-inputtext").val('');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        TemplateFunction.CategoryTemplate._renderCategoryMenu();

        setTimeout(function () {
            QDMS.QuickTour.initializeQuickTour('ManageDocumentcategories');


        }, 1000);



    },
    FlagCategoryManagement: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $("#search-category-inputtext").val('');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $(".loader10").show();
        var url = $("#hfdUrlPath").val() + "/FlagCategories/Index";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");


                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FlagCategoryManagement');
                }, 1000);

            }
        });
        if (!$('body').hasClass('sidebar-collapse')) {
            $('body').addClass('sidebar-collapse');
        }

    },
    FileManagement: function (eventId, notficationStatus) {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/File/Index';
        $.ajax({
            url: url,
            data: { 'notificationId': eventId, 'notficationStatus': notficationStatus },
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#categoryMenu").show();
                $("#containerDcrl_link").hide();
                $("#contentWindow").html(result);
                WikiFiles.Initializer.FileTreeViewList();
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FileManagement');
                }, 1000);

            }
        });
    },
    FileBulkUpload: function (eventId, notficationStatus) {
        window.stop();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/File/BulkuploadIndex';
        $.ajax({
            url: url,
            data: { 'notificationId': eventId, 'notficationStatus': notficationStatus },
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#categoryMenu").show();
                $("#containerDcrl_link").hide();
                $("#contentWindow").html(result);
                WikiFiles.Initializer.FileTreeViewList();
            }
        });
    },
    ShipPlanTemplateManagement: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/ShipPlanTemplate/Index';
        $.ajax({
            url: url,
            //data: { 'notificationId': eventId, 'notficationStatus': notficationStatus },
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#categoryMenu").show();
                $("#containerDcrl_link").hide();
                $("#contentWindow").html(result);
                FileTreeViewList();
            }
        });
    },

    FlagManagement: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/FlagManagement/Index';
        $.ajax({
            url: url,
            data: { Keyword: "", CategoryID: "" },
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#categoryMenu").show();
                $("#containerDcrl_link").hide();
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FlagManagement');
                }, 2000);
            }
        });
    },
    ImageManagement: function (eventId, status) {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/ImageManagement/CommonImageView';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
                if (eventId != undefined && eventId != "" && eventId.length) {
                    if (status == "publish")
                        LoadPublishedImages(eventId);
                    else if (status == "ApprovalCycle")
                        LoadPendingImages(eventId);
                    else LoadImageStatus(eventId);
                } else {
                    LoadPublishedImages();
                }
            }
        });
        setTimeout(function () {
            QDMS.QuickTour.initializeQuickTour('ImageManagement');
        }, 3000);
    },
    GetReviewerDocuments: function () {
        QDMS.QuickTour.resetQuickTour();
        //$(this).attr('edOAD').disabled = true;
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Document/GetDocumentsForReview';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');

                $("#contentWindow").html(result);
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();


                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('ManageDocuments');

                }, 1000);




            }
        });
        SetTabTitle("Manage Documents | QDMS | PAL");
    },
    GetManageArticles: function () {
        QDMS.QuickTour.resetQuickTour();
        //this.event.target.disabled = true;
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Article/GetArticlesForReview';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
        SetTabTitle('Manage Articles | QDMS | PAL');
    },
    GetApproverDocuments: function () {
        QDMS.QuickTour.resetQuickTour();

        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();

        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/GetDocumentsForApprove';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#contentWindow").html(result);

            }
        });
    },
    GetBSMVesselList: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Vessel/Index';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
            }
        });
    },
    RestrictedAccessArticles: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $("#contentWindow").html('');
        var url = $("#hfdUrlPath").val() + '/RestrictedArticles/Index';
        $.ajax({
            url: url,
            type: 'POST',
            //data: { 'isDelete': isDelete },
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
            }
        });
    },

    RestrictedAccessDocuments: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $("#contentWindow").html('');
        var url = $("#hfdUrlPath").val() + '/RestrictedDocuments/IndexDoc';
        $.ajax({
            url: url,
            type: 'POST',
            //data: { 'isDelete': isDelete },
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
            }
        });
    },

    DeleteDocumentArticleForm: function (isDelete) {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $("#contentWindow").html('');
        var url = $("#hfdUrlPath").val() + '/Delete/Index';
        $.ajax({
            url: url,
            type: 'POST',
            data: { 'isDelete': isDelete },
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
            }
        });
    },
    GetRequestChangeDocList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/RequestChange/GetDocChangeRequest';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
        setTimeout(function () {
            QDMS.QuickTour.initializeQuickTour('DocumentChangeRequestLedger');
        }, 3000);
    },
    GetDocumentMasterList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/DocumentMasterList/DocumentMasterList';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FormsMasterList');
                }, 3000);



            }
        });
    },
    GetDocumentChangeSummary: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/DocumentChangeSummary/DocumentChangeSummary';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('DocumentChangeSummary');
                }, 3000);
            }
        });
    },
    GetUserRequestChangeDocList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/RequestChange/GetUserDocChangeRequest';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('DCRList');
                }, 3000);

            }
        });
    },

    ShowDraftRecommendedMenu: function () {
        QDMS.QuickTour.resetQuickTour();
        $(".control-sidebar-tabs2").removeClass("show-approvel-data");
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#MenuItems").removeClass("open");
        $("#PendingTab").hide();
        $("#RejectedTab").hide();
        $("#EditedTab").hide();
        if ($("#IsViewer").val() == "true") { $("#RecommentedTab").show(); $("#DraftedTab").hide(); }
        else { $("#RecommentedTab").hide(); $("#DraftedTab").show(); }

        $(".doc-list-buttons").show();
    },
    DocumentVersionManage: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/ManageDocumentVersion';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });

    },
    WorkFlowRecall: function () {

        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/GetWorkFlowCallforActionDocuments';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('WorkFlowRecall');
                }, 1000);

            }
        });


    },


    // new addition @1121 goes here
    UnlcokDocumentArticle: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/UnlcokDocumentArticle';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });


    },


    StatusManage: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/StatusmanageDocumentArticle';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('StatusManagement');
                }, 3000);

            }
        });


    },

    StatusManageArticle: function () {
        QDMS.QuickTour.resetQuickTour();

        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();

        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/StatusmanageDocumentArticle';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

                //var tabs = document.querySelector('#scrolltab');
                //var tabNavigation = tabs.querySelector(".c-tabs-navnew");
                //var tabNavigationLinks = tabs.querySelectorAll(".c-tabs-nav__link");
                //var tabContentContainers = tabs.querySelectorAll(".c-tabnew");
                //var left = tabNavigationLinks[1].offsetLeft + "px";
                //$(".c-tab-nav-marker:eq(1)").css('left', left);
                //var width = tabNavigationLinks[1].offsetWidth + "px";
                //$(".c-tab-nav-marker:eq(1)").css('width', width);           

                //tabNavigationLinks[0].classList.remove('is-active');
                //tabNavigationLinks[1].classList.add('is-active');

                //tabContentContainers[0].classList.remove('is-active');
                //tabContentContainers[1].classList.add('is-active');            

                //$("#ArtSecTab").trigger("click");
                //$(".c-tab-nav-marker:eq(1)").trigger("click");

                //if ($('#DocSecTab').hasClass('is_active')) {
                $('#DocSecTab').removeClass('is_active');
                $('#ArtSecTab').addClass('is_active');
                $('.c-tab-nav-marker').removeProp("left");
                $('.c-tab-nav-marker').removeProp("width");
                $('.c-tab-nav-marker').css({ 'left': '104px', 'width': '47px' });
                $('#docsecTab').removeClass('is-active');
                $('#artsecTab').addClass('is-active');
                $("#ArtSecTab").trigger("click");
                //}

            }
        });



    },

    GetAcknowledgeList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/OfficeAcknowledgement';
        if (clientName === "BP") {
            url = $("#hfdUrlPath").val() + '/File/FileAcknowledgementOffice';
        }
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);


                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('AcknowledgementReport');

                }, 1000);


            }
        });

    },
    GetFileAcknowledgeList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/File/FileAcknowledgementOffice';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);

            }
        });

    },
    ShowSerachButton: function () {
        //if ($("#hdnAppEnv").val()=="O")
        //{
        //    $(".search-form").removeClass("hidden");
        //    $(".search-form #SearchTypeMode option:selected").removeAttr("selected");
        //    $(".search-form #SearchTypeMode option[value='1']").prop('selected', 'selected');
        //    $(".search-form .selected-text").text("Title");
        //}

    },
    PDFSettings: function () {
        window.stop();
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".loader10").show();
        var url = $("#hfdUrlPath").val() + '/PDFSettings/Index';
        if (!$('body').hasClass('sidebar-collapse')) {
            $('body').addClass('sidebar-collapse');
        }

        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $("#contentWindow").html(result);
                $(".categoryToolbarTitle").text("");
                $(".loader10").hide();
            }
        });
    },
    GetUserRequestChangeFormList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/File/GetUserFCRLListView';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FCRList');

                }, 1000);



            }
        });
    },
    GetFormRequestChangeList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/File/GetFileChangeRequest';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
        setTimeout(function () {
            QDMS.QuickTour.initializeQuickTour('FormChangeRequestLedger');
        }, 3000);
    },
    GetArticleChangeSummary: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/ArticleChangeSummary/ArticleChangeSummary';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },

    ImportData: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Vessel/ImportData';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },
    GetFormChangeSummary: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/FormChangeSummary/FormChangeSummary';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },



    LandingPage: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Document/LandingPage';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },

    ExtractDb: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $.ajax({
            url: $("#hfdUrlPath").val() + '/ExportDatabase/GetDbData',
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);
            }
        });
    },
    GetDocumentsPendingApprovalReport: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Document/GetDocumentsPendingApprovalReport';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },
    MapNewVesselToDocumentArticleFile: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        //resetPercentageloader();
        //percentageLoader();
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Vessel/MapNewVesselToDocumentArticleFile';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },
    DocMappingToTablet: function () {
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        $.ajax({
            url: $("#hfdUrlPath").val() + '/Mobile/Index',
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#contentWindow").html(result);
            }
        });
    },
    CompanyNameInHeader: function () {
        $(".loader10").show();
        $(".loader10").css('z-index', '999');

        $.ajax({
            url: $("#hfdUrlPath").val() + '/HeaderTemplate/ManageHeaderCompany',
            success: function (result) {
                $("#contentWindow").html(result);
                LoadHeadersForCompany();
            }
        });
    },
    VesselDashboardGroupEmailAlert: function () {
        $("#MenuItems").removeClass("open");
        QDMS.Menu.ShowDraftRecommendedMenu();
        QDMS.Menu.ShowSerachButton();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/Vessel/VesselDashboardGroupEmailAlert';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },
};

QDMS.VesselMenu = {
    GetRequestChangeDocList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/RequestChange/GetUserDocChangeRequest';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('DCRList');
                }, 3000);
            }
        });
    },
    GetAcknowledgeList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Vessel/VesselAcknowledgement';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('AcknowledgementReport');

                }, 1000);
            }
        });

    },
    GetFileAcknowledgeList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Vessel/VesselFileAcknowledgement';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('AcknowledgementReport');

                }, 1000);
            }
        });

    },
    VeselDashboard: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/Vessel/VesselDashboardMenu';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);

            }
        });

    },
    GetDocumentMasterList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        $(".search-form").removeClass("hidden");
        $(".Searchexactphrase").removeClass("hidden");
        var url = $("#hfdUrlPath").val() + '/DocumentMasterList/DocumentMasterList';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $("#contentWindow").html(result);

            }
        });
    },
    GetUserRequestChangeFormList: function () {
        QDMS.QuickTour.resetQuickTour();
        $("#MenuItems").removeClass("open");
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        $(".loader10").show();
        $(".loader10").css('z-index', '999');
        var url = $("#hfdUrlPath").val() + '/File/GetUserFCRLListView';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $(".loader10").css('z-index', '');
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                $(".search-form").removeClass("hidden");
                $(".Searchexactphrase").removeClass("hidden");
                $("#contentWindow").html(result);
                setTimeout(function () {
                    QDMS.QuickTour.initializeQuickTour('FCRList');
                }, 3000);
            }
        });
    },
};

QDMS.FileDelete = {
    GetAssociatedFiles: function () {
        var url = $("#hfdUrlPath").val() + '/File/GetAssociatedNonLockedFiles';
        $.ajax({
            url: url,
            data: { 'fileTab': $("#DeleteFileTab").val() },
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                if (result.Success) {
                    if (result.Files != null && result.Files.length > 0) {
                        $("#contentWindow").html(QDMS.FileDelete.EmptyEditView());

                        if (RemoveFileList.length == 0) {
                            $.each(result.FileIDList, function (i, fileID) {
                                RemoveFileList.push(fileID);
                            });
                        }

                        var text = "<ul>";
                        $.each(result.Files, function (i, item) {

                            text += '<li class="history-item">' +
                                '<a onclick=' + QDMS.FileDelete.OpenEditor(item.RecordType, item.Id) + '>' +
                                '<div class="history-title" title="' + item.Name + '">' +
                                '<i class="' + (item.RecordType == "0" || item.RecordType == "1" ? 'fa fa-book' : 'fa fa-file-pdf-o') + ' history-icon"></i>' + item.Name +
                                '</div><small>' + QDMS.FileDelete.GetFileType(item.RecordType) + '</small>' +
                                '</a>'
                            '</li>';
                        });
                        $("#file_container_link #file-list").html(text + "</ul>");
                        $("#file_container_link").show();
                        $(".preloader-wrap").hide();
                        $("body").addClass("expand-file-history");
                    }
                    else {
                        opener.NotifyFileDeletetion($("#DeleteFileTab").val()); // call parent window function;
                        opener.focus(); //return focus to parent window
                        window.close();
                    }
                }
            }
        });
    },
    OpenEditor: function (type, id) {
        var text = '';
        if (type == "0")
            text = "OpenDocEditView('" + id + "')";
        if (type == "1")
            text = 'RenderDraftView("' + id + '")';
        if (type == "2")
            text = 'RenderArticleEditView("' + id + '")';
        if (type == "3")
            text = 'RenderDraftArticleView("' + id + '")';
        return text;
    },
    GetFileType: function (type) {
        var text = '';
        if (type == "0")
            text = 'Document';
        if (type == "1")
            text = 'Draft';
        if (type == "2")
            text = 'Article';
        if (type == "3")
            text = 'Article Draft';
        return text;
    },
    EmptyEditView: function () {
        return '<div class="file-delete-banner">' +
            '<div>' +
            '<center class="nodoc-message"><span class="noRecommendedDoc"></span><img src="../Content/Images/no_document.png"><br><br><h3>Please click to update the documents or articles from the file tab !!</h3></center></div>' +
            '</div>' +
            '</div>';
    },
    IsFileDelete: function (IsDiscard = false) {
        if ($("#IsFileDelete").val() == "true") {
            _StepLodermode(6); // complete the step
            $(".loader10").hide();
            if (RemoveFileList != null && RemoveFileList.length > 0) {
                try {
                    QDMS.FileDelete.RemoveFileFromListing(RemoveFileList[0]);
                }
                catch (ex) {

                }
            }

            return true;
        }
        return false;
    },
    CheckFileDeleteInEdit: function () {
        if ($("#IsFileDelete").val() == "true") {
            ////;
            var id = $("#Id").val();
            $(".tableDetails-wrapper").addClass("fileDel-tableDetails-wrapper");
            $("#tableWrapper").addClass("fileDel-tableWrapper");
            $("#ReleaseDocCycle").hide();
            $("#makeTemplate").hide();
            $("#downloadTemplate").hide();
            $(".search-file-del").show();
            $(".paper-area").prepend('<div class="alert alert-warning">' +
                '<strong> <b>Please click on highlighted <span class="highlite-file">file name</span> to remove if it occurs.</b><br/><br/>' +
                'And remove the file name with red <span class="highlite-file-control-table">File Control</span> border if it occurs.' +
                '</div>');
            $(".toggle-article").removeClass("opentoggle");
            $("#tableDragger table.article-table").addClass("hide-state");
            // hide content of article except first 3 articles
            $('.toggle-article').each(function () {
                if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                    var columnType = $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").attr("data-column");
                    var text = $(this).closest("tr.draggable-item").find(".article-table").find(">tbody>tr:first").find(":header:first").text();
                    text = $(this).closest("tr.draggable-item").attr("toc-title") || text;

                    $(this).closest("tr.draggable-item").find(".article-table").addClass("hide-state");
                    $(this).closest("tr.draggable-item").find(".article-table>tbody>tr").addClass("hide-article");

                    if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout") {
                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
                    }

                    else {
                        $(this).closest("tr.draggable-item").attr("toc-title", $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").text().trim());
                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").removeClass("hide-article");
                    }
                }
            });
            $(".toggle-article:not('.opentoggle'):lt(2)").each(function () {
                var loaderNew = $('body').find('.loadernew')[0]
                if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                    $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id, true);
            });
            $.each(RemoveFileList, function (i, fileId) {
                $("#tableDragger>tr:not([data-column='articlecolumn-one-layout'])").find('.filetext[onclick*="' + fileId + '"]').each(function () {
                    $(this).attr("data-del-Order", "DelFile_" + fileDelOrder);
                    $(this).attr("sel-Order", fileDelOrder);
                    $(this).addClass("highlite-file remove_File");
                    $(this).attr("id", fileId);
                    $(this).attr("tabindex", fileId);
                    $(this).attr("title", "Click to remove");
                    $(this).removeAttr("onclick");
                    $(this).off("click");
                    $(this).on("click", function () {
                        $(this).remove();
                    });
                    fileDelOrder++;
                });
                $("#tableDragger>tr:not([data-column='articlecolumn-one-layout'])").find('.fileresource[onclick*="' + fileId + '"]').each(function () {
                    $(this).attr("data-del-Order", "DelFile_" + fileDelOrder);
                    $(this).attr("sel-Order", fileDelOrder);
                    $(this).addClass("highlite-file-control remove_File");
                    $(this).attr("tabindex", fileId);
                    $(this).attr("id", fileId);
                    $(this).closest("td").closest(".draggable-item").addClass("highlite-file-control-table");
                    $(this).removeAttr("onclick");
                    $(this).off("click");
                    fileDelOrder++;
                });

            });
            var i = 0;
            $(".next_h").click(function () {
                $("#tableWrapper").find("[sel-Order]").each(function (indx) {
                    $(this).attr("sel-Order", indx + 1);
                });
                if ($(".toggle-article:not('.opentoggle'):eq(" + i + ")").length)
                    $(".toggle-article:not('.opentoggle'):eq(" + i + ")").each(function () {
                        var loaderNew = $('body').find('.loadernew')[0]
                        if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                            $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                        DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id, true);
                    });
                var viewRangeStart = $("#tableWrapper").offset().top;
                var viewRangeEnd = viewRangeStart + $("#tableWrapper").height();
                //var eleTop = $("#tableWrapper").offset().top;
                //var eleBottom = eleTop + $("#tableWrapper").height();

                $("#tableWrapper").find("[data-del-Order]").each(function (indxval) {
                    var eleTop = $(this).offset().top;
                    var eleBottom = eleTop + $(this).height();
                    if ((eleBottom <= viewRangeEnd) && (eleTop >= viewRangeStart)) {

                        var fileID = $(this).attr("id");
                        var fileOrder = $(this).attr("sel-Order");
                        var PostionIndex = parseInt(fileOrder);
                        var NextPositionIndex = PostionIndex;

                        var _result = QDMS.FileDelete.checkRangeinViewMode(NextPositionIndex)
                        if (_result == false) {

                            i = NextPositionIndex;
                            $("[sel-Order='" + NextPositionIndex + "']").focus();
                            return false;

                        }
                        else {
                            NextPositionIndex = NextPositionIndex + 1;
                            i = NextPositionIndex;
                        }


                    }
                    else {


                        var _result = QDMS.FileDelete.checkRangeinViewMode(i)
                        if (_result == false) {

                            $("[sel-Order='" + i + "']").focus();
                            return false;

                        }
                        else {
                            i = i + 1;
                        }



                    }

                });

            });


            $(".previous_h").click(function () {
                var _totlaLnth = $("#tableWrapper").find("[sel-Order]").length;
                var _PrevVal = parseInt(_totlaLnth)
                if (i >= parseInt(_totlaLnth)) {
                    i = _PrevVal - 1;
                } else if (i > 1) {
                    i = i - 1;
                }
                var fileID = $("[sel-Order]").eq(i - 1).attr("id");
                var fileOrder = $("[sel-Order]").eq(i - 1).attr("sel-Order");
                var fileOrder = $("[sel-Order]").eq(i - 1).attr("sel-Order");

                if ($(".toggle-article:not('.opentoggle'):eq(" + i + ")").length)
                    $(".toggle-article:not('.opentoggle'):eq(" + i + ")").each(function () {
                        var loaderNew = $('body').find('.loadernew')[0]
                        if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                            $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                        DocEditDCRLArticleDataArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id, true);
                    });

                if (i <= 0) i = 1;
                $("[sel-Order='" + fileOrder + "']").focus();

            });
        }
    },
    IsAllFileRemovedInEdit: function () {
        if ($("#IsFileDelete").val() == "true") {
            if ($('#tableDragger .highlite-file').length > 0 || $('#tableDragger .highlite-file-control').length > 0) {
                return false;
            }
        }
        return true;
    },
    ArticleDisableMessage: function () {
        criticalNotify("Edit the document first, beacuse most of the article are updated along with document update. <b>It will enable until all documents are updated</b>", "", "Warning");
    },

    RemoveFileFromListing: function (fileId) {
        $.ajax({
            url: $("#hfdUrlPath").val() + '/File/GetItemRefOnFileID',
            data: { 'FileID': fileId },
            type: 'GET',
            crossDomain: true,
            success: function (result) {

            }
        })
    },
    checkRangeinViewMode: function (Idx) {
        var viewRangeStart = $("#tableWrapper").offset().top;
        var viewRangeEnd = viewRangeStart + $("#tableWrapper").height();
        var _CurItem = $("#tableWrapper").find("[sel-Order='" + Idx + "']");

        try {
            if (_CurItem != undefined) {
                var eleTop = _CurItem.offset().top;
                var eleBottom = eleTop + _CurItem.height();
                if ((eleBottom <= viewRangeEnd) && (eleTop >= viewRangeStart)) {

                    return true;
                }
                else {

                    return false;
                }
            }
        }
        catch (ex) {

        }
        return false;

    }

}

QDMS.FlowChart = {
    SaveSvgImage: function (control) {
        try {
            var svg = window['myDiagram_' + control.attr("id")].makeSvg({ scale: 1.2 });
            control.parent().closest("tr.flowchartDragger").find(".flow-svg").html(svg);
            control.parent().closest("tr.flowchartDragger").find("svg clipPath").remove();
        }
        catch
        {

        }
    }
}

QDMS.Email = {
    SendMail: function (id) {
        $("#header_search_field").val("");
        $(".loader10").show();
        //$("#contentWindow").html("");
        $(".contextMenu").hide();
        $(".categoryToolbarTitle").text('');
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr('id', '');
        contextMenu = true;
        var url = $("#hfdUrlPath").val() + '/Email/SendMail?id=' + id;
        $.ajax({
            url: url,
            type: 'GET',
            success: function (result) {
                $(".loader10").hide();
                resetHistoryListView();
                resetBookmarkListView();
                $("#emailPopUp").html(result);
                $("#listUserEmailIds").hide();
            }
        });
    }
}
function ReneneratePDFDOC(id, type) {
    $(".loader10").show();
    var url = $("#hfdUrlPath").val() + '/RegeneratePDF/RegenerateEditViewDoc?id=' + id + '&type=' + type;
    if (!$('body').hasClass('sidebar-collapse')) {
        $('body').addClass('sidebar-collapse');
    }

    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#contentWindow").html(result);
            $(".categoryToolbarTitle").text("");
            $(".loader10").hide();
        }
    });
}
function invokeTOCGeneration() {
    if ($(".toc") != undefined) {

        _tocPrefix = $(".toc").attr("toc-prefix");
        _tocPrefixLevelTwo = $(".toc").attr("toc-prefix-level-two");
        _tocPrefixLevelThree = $(".toc").attr("toc-prefix-type-level-three");
        _tocPrefixLevelFour = $(".toc").attr("toc-prefix-type-level-four");

        generateTOC();
    }
}

function DownloadFlagDashboard(fileId, fileExtension) {
    if ($("#hdnViewFileOnline").val() == 'true') {
        ShowFileOnline(fileId, 'FLG', fileExtension);
        return;
    }

    if (fileExtension === null || fileExtension === undefined) {
        fileExtension = ".pdf"; //default
    }
    var dlURL = $("#hfdUrlPath").val() + "/FlagManagement/DownloadFile/" + fileId;
    if (fileExtension && fileExtension.toLowerCase().endsWith("pdf")) {
        if (isPDFPopUp == "True") {
            showPDFEmbeddedBlob(dlURL, displayName);
            return;
        } else {
            var anchor = document.createElement('a');
            anchor.href = dlURL;
            anchor.target = '_blank';
            anchor.click();
            anchor.remove();

            return;
        }
    }

    $(".progressing-loader").show();
    StopIntervel();
    setTimeout(function () {
        gauge.update(0);
    }, 100);
    percentageUpdate();

    var formData = new FormData();
    formData.append('id', fileId || 0);
    var xhttp;
    if (window.XMLHttpRequest) { xhttp = new XMLHttpRequest(); }//code for modern browsers} 
    else { xhttp = new ActiveXObject("Microsoft.XMLHTTP"); }// code for IE6, IE5

    xhttp.open("POST", $("#hfdUrlPath").val() + "/FlagManagement/DownloadFile", true);
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4) {
            if (xhttp.status == 200) {
                StopIntervel();
                var d = $.Deferred();
                setTimeout(function () {
                    gauge.update(100);
                    d.resolve(true);
                }, 1000);

                d.promise();
                d.then(function () {
                    var fileName = xhttp.getResponseHeader('File-Name');
                    var fileextn = fileName.split(".");
                    var blob = new Blob();
                    if (fileextn[fileextn.length - 1] != null && fileextn[fileextn.length - 1] != "") {
                        if ((fileextn[fileextn.length - 1]).toLowerCase() != "pdf") {
                            blob = new Blob([xhttp.response], { type: "octet/stream" });
                            saveAs(blob, fileName);
                        }
                        else {
                            blob = new Blob([xhttp.response], { type: "application/pdf" });
                            var fileURL = URL.createObjectURL(blob);
                            // window.open(fileURL, fileName, "", "toolbar=0");
                            if (isPDFPopUp == "True") {
                                showPDFEmbeddedBlob(fileURL, fileName);
                            } else {
                                window.open(fileURL, fileName);
                            }
                        }
                    }
                    else {
                        blob = new Blob([xhttp.response], { type: "octet/stream" });
                        saveAs(blob, fileName);
                    }
                    setTimeout(function () {
                        $(".progressing-loader").hide();
                        gauge.update(0);
                    }, 1000);
                });
            }
            else {
                StopIntervel();
                $(".progressing-loader").hide();
                var win = window.open($("#hfdUrlPath").val() + "/Error/FileNotFound");
                setTimeout(function () {
                    win.close();
                    gauge.update(0);
                }, 1000);
            }
        }

    };
    xhttp.responseType = "arraybuffer";
    xhttp.send(formData);
}
function DownloadFlagFileObject(fileId, fileExtension) {
    if ($("#hdnViewFileOnline").val() == 'true') {
        ShowFileOnline(fileId, 'FLG', fileExtension);
        return;
    }

    if (fileExtension == null || fileExtension == undefined) {
        fileExtension = ".pdf"; //default
    }

    var dlURL = $("#hfdUrlPath").val() + "/FlagManagement/DownloadFile/" + fileId;

    if (fileExtension && fileExtension.toLowerCase().endsWith("pdf")) {
        if (isPDFPopUp == "True") {
            showPDFEmbeddedBlob(dlURL, displayName);
            return;
        } else {
            var anchor = document.createElement('a');
            anchor.href = dlURL;
            anchor.target = '_blank';
            anchor.click();
            anchor.remove();

            return;
        }
    }

    $(".progressing-loader").show();
    StopIntervel();
    setTimeout(function () {
        gauge.update(0);
    }, 100);
    percentageUpdate();

    var formData = new FormData();
    formData.append('id', fileId || 0);
    var xhttp;
    if (window.XMLHttpRequest) { xhttp = new XMLHttpRequest(); }//code for modern browsers} 
    else { xhttp = new ActiveXObject("Microsoft.XMLHTTP"); }// code for IE6, IE5

    xhttp.open("POST", $("#hfdUrlPath").val() + "/FlagManagement/DownloadFile", true);
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4) {
            if (xhttp.status == 200) {
                StopIntervel();
                var d = $.Deferred();
                setTimeout(function () {
                    gauge.update(100);
                    d.resolve(true);
                }, 1000);

                d.promise();
                d.then(function () {
                    var fileName = xhttp.getResponseHeader('File-Name');
                    var fileextn = fileName.split(".");
                    var blob = new Blob();
                    if (fileextn[fileextn.length - 1] != null && fileextn[fileextn.length - 1] != "") {
                        if ((fileextn[fileextn.length - 1]).toLowerCase() != "pdf") {
                            blob = new Blob([xhttp.response], { type: "octet/stream" });
                            saveAs(blob, fileName);
                        }
                        else {
                            blob = new Blob([xhttp.response], { type: "application/pdf" });
                            var fileURL = URL.createObjectURL(blob);
                            // window.open(fileURL, fileName, "", "toolbar=0");
                            if (isPDFPopUp == "True") {
                                showPDFEmbeddedBlob(fileURL, fileName);
                            } else {
                                window.open(fileURL, fileName);
                            }
                        }
                    }
                    else {
                        blob = new Blob([xhttp.response], { type: "octet/stream" });
                        saveAs(blob, fileName);
                    }
                    setTimeout(function () {
                        $(".progressing-loader").hide();
                        gauge.update(0);
                    }, 1000);
                });
            }
            else {
                StopIntervel();
                $(".progressing-loader").hide();
                var win = window.open($("#hfdUrlPath").val() + "/Error/FileNotFound");
                setTimeout(function () {
                    win.close();
                    gauge.update(0);
                }, 1000);
            }
        }

    };
    xhttp.responseType = "arraybuffer";
    xhttp.send(formData);
}

function downloadFileObject(fileId, fileExtension) {
    if ($("#hdnViewFileOnline").val() == 'true') {
        ShowFileOnline(fileId, 'FLS', fileExtension);
        return;
    }

    if (fileExtension == null || fileExtension == undefined) {
        fileExtension = ".pdf"; //default
    }
    var dlURL = $("#hfdUrlPath").val() + "/File/DownloadShowfile/" + fileId;
    if (clientName === "BP") {
        var thisURL = encodeURI(window.location.href);
        dlURL = $("#hfdUrlPath").val() + "/File/DownloadShowfile?id=" + fileId + "&currURL=" + thisURL;
    }
    if (fileExtension && fileExtension.toLowerCase().endsWith("pdf")) {
        if (isPDFPopUp == "True") {
            showPDFEmbeddedBlob(dlURL, displayName);
            return;
        } else {
            var anchor = document.createElement('a');
            anchor.href = dlURL;
            anchor.target = '_blank';
            anchor.click();
            anchor.remove();

            return;
        }
    }

    $(".progressing-loader").show();
    StopIntervel();
    setTimeout(function () {
        gauge.update(0);
    }, 100);
    percentageUpdate();

    var formData = new FormData();
    formData.append('id', fileId || 0);
    var xhttp;
    if (window.XMLHttpRequest) { xhttp = new XMLHttpRequest(); }//code for modern browsers} 
    else { xhttp = new ActiveXObject("Microsoft.XMLHTTP"); }// code for IE6, IE5

    xhttp.onprogress = function (event) {
        //var percent = Math.round( event.loaded * 100 / event.total);
        //gauge.update(percent);
    };

    xhttp.open("POST", dlURL, true);
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4) {
            if (xhttp.status == 200) {
                StopIntervel();
                var d = $.Deferred();
                setTimeout(function () {
                    gauge.update(100);
                    d.resolve(true);
                }, 1000);

                d.promise();
                d.then(function () {
                    var fileName = decodeURI(xhttp.getResponseHeader('File-Name'));
                    var fileextn = fileName.split(".");
                    var blob = new Blob();
                    if (fileextn[fileextn.length - 1] != null && fileextn[fileextn.length - 1] != "") {
                        if ((fileextn[fileextn.length - 1]).toLowerCase() != "pdf") {
                            blob = new Blob([xhttp.response], { type: "octet/stream" });
                            saveAs(blob, fileName);
                        }
                        else {
                            blob = new Blob([xhttp.response], { type: "application/pdf" });
                            var fileURL = URL.createObjectURL(blob);
                            // window.open(fileURL, fileName, "", "toolbar=0");
                            if (isPDFPopUp == "True") {
                                showPDFEmbeddedBlob(fileURL, fileName);
                            } else {
                                window.open(fileURL, fileName);
                            }
                        }
                    }
                    else {
                        blob = new Blob([xhttp.response], { type: "octet/stream" });
                        saveAs(blob, fileName);
                    }
                    setTimeout(function () {
                        $(".progressing-loader").hide();
                        gauge.update(0);
                    }, 1000);
                });
            }
            else {
                StopIntervel();
                $(".progressing-loader").hide();
                var win = window.open($("#hfdUrlPath").val() + "/Error/FileNotFound");
                setTimeout(function () {
                    win.close();
                    gauge.update(0);
                }, 1000);
            }
        }

    };
    xhttp.responseType = "arraybuffer";
    xhttp.send(formData);
}
//function RenderCategorisedDocList(categories) {
//    $("#header_search_field").val("");
//    $(".loader10").show();
//    $("#contentWindow").html("");
//    $("#container_link").hide();
//    $('#Acknlwdge').fadeOut();
//    $("#containerbookmark_link").hide();
//    $("#containerDcrl_link").hide();

//    var url = $("#hfdUrlPath").val() + '/Categories/CategoryDocList';
//    resetHistoryListView();
//    resetBookmarkListView();
//    $.ajax({
//        url: url,
//        type: 'POST',
//        data: { "categoryIds": categories },
//        crossDomain: true,
//        success: function (result) {
//            

//            $("#contentWindow").html(result);
//            if (CommonFunc.Pin.isEabled === true && parseInt($("#catCount").val()) > 0) {
//                CommonFunc.Pin.para = id;
//                CommonFunc.Pin.name = $("#categoryList-heading").text().trim();
//                CommonFunc.Pin.event = "RenderCategorisedDocList";
//                CommonFunc.Pin._AllPinnedItems(id);
//                CommonFunc.Pin._CurrentPinnedItems(id);
//                CommonFunc.Pin._IsMoreItemExist();
//                $(".categoryToolbarTitle").text($("#content-middle #catgnameOnly").html());
//                $("#categoryMenu").show();
//                $('.categoryToolbarTitle').attr('title', $("#content-middle #catgnameOnly").html());
//                $(".categoryToolbarTitle").attr('id', id);
//            }
//        }
//    });
//    AppendContentWindowXY();
//}



function RenderCategorisedDocList(categories) {


    var catlist = [];
    catlist = categories;


    $("#CatListNewTab").val("1");
    window.sessionStorage.setItem("CatListNewTabAll", catlist);
    var url = $("#hfdUrlPath").val() + '/document/index?CatTab=' + "1";
    window.open(url);
}
//'/document/index?filetype=' + "U";
function RenderCategorisedDocListSec(categories) {

    $("#header_search_field").val("");
    $(".loader10").show();
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();

    var url = $("#hfdUrlPath").val() + '/Categories/CategoryDocList';
    resetHistoryListView();
    resetBookmarkListView();
    $.ajax({
        url: url,
        type: 'POST',
        data: { "categoryIds": categories },
        crossDomain: true,
        success: function (result) {


            $("#contentWindow").html(result);

            if (CommonFunc.Pin.isEabled === true && parseInt($("#catCount").val()) > 0) {
                CommonFunc.Pin.para = id;
                CommonFunc.Pin.name = $("#categoryList-heading").text().trim();
                CommonFunc.Pin.event = "RenderCategorisedDocList";
                CommonFunc.Pin._AllPinnedItems(id);
                CommonFunc.Pin._CurrentPinnedItems(id);
                CommonFunc.Pin._IsMoreItemExist();
                $(".categoryToolbarTitle").text($("#content-middle #catgnameOnly").html());
                $("#categoryMenu").show();
                $('.categoryToolbarTitle').attr('title', $("#content-middle #catgnameOnly").html());
                $(".categoryToolbarTitle").attr('id', id);
            }
        }
    });
    AppendContentWindowXY();
}
function ProfileViewById(Id) {
    $("#profile-slide-details").addClass("open");
    //$(".loader10").show();
    var url = $("#hfdUrlPath").val() + '/Profile/ViewProfileById?userId=' + Id;
    if (!$('body').hasClass('sidebar-collapse')) {
        $('body').addClass('sidebar-collapse');
    }

    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            //$("#contentWindow").html(result);
            $("#profile-slide-details .profile-slide-inner").html(result);
            $("#profile-slide-details").addClass("open");
            //$(".categoryToolbarTitle").text("");
            //$(".search-form").removeClass("hidden");
            //$("#header_search_field").val("");
            //$("#container_link").hide();
            //$("#containerbookmark_link").hide();
            //$(".loader10").hide();
        }
    });
}

//Docs
function RenderAddView() {
    $("#IsFileDelete").val("false");

    QDMS.Menu.ShowDraftRecommendedMenu();
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    window.stop();
    //resetPercentageloader();
    //percentageLoader();
    resetHistoryListView();
    hideControlBar();
    $(".categoryToolbarTitle").text('');
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr('id', '');
    $("#categoryTitle").hide();
    var url = $("#hfdUrlPath").val() + '/draft/ViewDraft';
    $("#breadcrum").text(">> New");
    //$("body").removeClass("docInfo-panel-close");
    if (!$('body').hasClass('sidebar-collapse')) {

        $('body').addClass('sidebar-collapse');
    }
    $.ajax({
        url: url,
        contentType: "application/html; charset=utf-8",
        type: 'GET',
        //cache: !0,
        datatype: "html",
        crossDomain: true,
        success: function (result) {


            $(".loader10").hide();
            $(".loader10").css('z-index', '');
            $("body").removeClass();
            collapseSideBar();
            $("#contentWindow").html(result);
            $("#categoryMenu").hide();
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $(".search-form").addClass("hidden");
            $(".Searchexactphrase").addClass("hidden");//to hide exact phrase check box
            $("#header_search_field").val("");
            SetDocMode("new");
            PublishedDoc = false;
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            $("#tableDragger").children("p").remove();

            ///////unwanted file remove(while undo hyperlink)
            $('#tableDragger .filetext').each(function () {
                if ($(this).text().trim() == '') {
                    $(this).remove();
                }
            });
            setTimeout(function () {
                HideAllValidationMsg();
                //BindApproverList();
                HighlighAreaSection();

            }, 2000);
            setTimeout(function () {
                QDMS.QuickTour.initializeQuickTour('CreateDocument');
            }, 3000);

        }

    });

}
function BulkDownload() {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".loader10").show();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    var url = $("#hfdUrlPath").val() + '/BulkDownload/ListAllPublishedFiles';
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $("#contentWindow").html(result);
            $(".loader10").hide();
        }
    });

}

function BulkShareLocationMapping() {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    var url = $("#hfdUrlPath").val() + '/Document/BulkShareLocationMapping';
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $(".search-form").removeClass("hidden");
    $(".Searchexactphrase").removeClass("hidden");
    $("#header_search_field").val('');
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $("#contentWindow").html(result);
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
        }
    });

}
function DocumentRoleMapping() {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    var url = $("#hfdUrlPath").val() + '/Document/DocumentRoleMapping';
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $(".search-form").removeClass("hidden");
    $(".Searchexactphrase").removeClass("hidden");
    $("#header_search_field").val('');
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $("#contentWindow").html(result);
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
        }
    });

}
function RoleMappedDocuments() {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    var url = $("#hfdUrlPath").val() + '/Document/RoleMappedDocuments';
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $(".search-form").removeClass("hidden");
    $(".Searchexactphrase").removeClass("hidden");
    $("#header_search_field").val('');
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $("#contentWindow").html(result);
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
        }
    });

}
function RenderDraftView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    $(".control-sidebar-tabs2").addClass("show-approvel-data");
    $(".show-approvel-data #RejectedTab").show();
    $(".show-approvel-data #PendingTab").show();
    $(".show-approvel-data #EditedTab").show();
    $(".loader10").show();

    //resetPercentageloader();
    //percentageLoader();
    resetHistoryListView();
    resetBookmarkListView();
    hideControlBar();
    var url = $("#hfdUrlPath").val() + '/draft/viewdraft?id=' + id;
    $.ajax({
        url: url,
        type: 'GET',
        cache: !0,
        datatype: "html",
        crossDomain: true,
        success: function (result) {
            $(".progress").hide();
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();//Remove table settings layout inside table
            $('#tableDragger').find('.imgthspan').remove();//Remove add new column span 
            $("#categoryMenu").hide();
            AppendContentWindowXY();
            $(".search-form").addClass("hidden");
            $(".Searchexactphrase").addClass("hidden");
            $("body").removeClass();
            SetDocMode("edit");
            collapseSideBar();
            PublishedDoc = false;
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");

            ///////unwanted file remove(while undo hyperlink)
            $('#tableDragger .filetext').each(function () {
                if ($(this).text().trim() == '') {
                    $(this).remove();
                }
            });
            //setGlobalApprover();
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");

                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }


            setTimeout(function () {
                HideAllValidationMsg();
                BindApproverList();
                HighlighAreaSection();
                $.ajax({
                    url: $("#hfdUrlPath").val() + '/Draft/TagGroupList',
                    data: { "id": $("#Id").val() },
                    type: 'GET',
                    crossDomain: true,
                    success: function (result) {
                        $("#grptaglist").addClass("IsLoad");
                        $("#grptaglist").html(result)
                    }

                });

            }, 3000)
            setTimeout(function () {

                $('img').on('dragstart', function (event) { event.preventDefault(); });

                //$(".article-table").each(
                //    function (index) {
                //        ArticleData($(this));
                //    });
                if ($("#hdnAppEnv").val() == "O") {

                    RefreshResize();
                }
                $(".bookmark-settings").hide();
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#categoryMenu").hide();
                $("#containerDcrl_link").hide();
                if (!isArticleDefaultHide) {
                    var Artlcnt = $(".article-table").length;
                    if (Artlcnt > 3) {
                        for (var i = 0; i <= 2; i++) {
                            DocEditDCRLArticleData($(".article-table").eq(i), false, true, id);

                        }
                    }
                    else {
                        if (Artlcnt > 0) {
                            for (var i = 0; i <= Artlcnt - 1; i++) {
                                DocEditDCRLArticleData($(".article-table").eq(i), false, true, id);
                            }
                        }
                    }
                }

                $("#tableWrapper").find('table').removeClass('NewDataArt');
                $(".toggle-article").click(function () {
                    $(this).toggleClass('opentoggle');
                    if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                        var loaderNew = $('body').find('.loadernew')[0]
                        if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                            $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                        DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), false, true, id)
                    }

                });
                // remove Temp tr on article toggle
                $("#tableDragger").find(".article-table>tbody>tr.temp-tr.hide-article").remove();
            }, 100);
            if ($("#tableDragger .SubHeader1").length > 0) {
                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }



            if ($("#tableDragger").find(".article-table").find(".SubHeader1").length > 0) {
                debugger
                $("#tableDragger").find(".article-table").find(".SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }
        }
    });

}

function RenderIsDraftView(id) {
    $(".loader10").show();
    $("#docDraftListView").hide();
    collapseSideBar();
    QDMS.Menu.ShowDraftRecommendedMenu();
    window.stop();
    var url = $("#hfdUrlPath").val() + '/draft/CheckDraftEditMode?id=' + id;
    $.ajax({
        url: url,
        data: { 'DraftID': id },
        type: 'Get',
        crossDomain: true,
        success: function (result) {

            if (result == "True") {
                RenderDraftView(id)
            }
            else {
                $(".loader10").hide();
                $("#docDraftListView").show();
                criticalNotify("You Can't edit this draft ", '', "Warning");
                return false;
            }

        }
    });
}
function RenderDocView(id, IsViewerRole = false) {
    $(".preloader-wrap").hide();
    if (!IsViewerRole) {
        QDMS.Menu.ShowDraftRecommendedMenu();
    }
    QDMS.Menu.ShowSerachButton();
    window.stop();

    //resetPercentageloader();
    //percentageLoader();

    $(".loader10").show();
    $(".loader10").css('z-index', '999');

    $("body").removeClass();
    collapseSideBar();

    hideControlBar();
    $("#header_search_field").val("");
    $("#history-list").html("");
    $("#contentWindow").html("");
    $("#DCRLComments-list ul").html("");
    $("#container_link").hide();
    $("#containerDcrl_link").hide();
    $("#containerbookmark_link").hide();
    var url = $("#hfdUrlPath").val() + '/document/ViewDoc?id=' + id;
    //$("body").removeClass();
    //collapseSideBar();

    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        async: true,
        success: function (result) {
            
            $("#contentWindow").html(result);
            $("#tableDetails tr").each(function () {
                if ($(this).attr('data-column') === "column-TOC-layout") {
                    $(this).css("visibility", "collapse");
                    if ($(this).prev().hasClass('headerTemplate'))
                        $(this).prev().css("visibility", "collapse");
                    if ($(this).next().hasClass('footerTemplate'))
                        $(this).next().css("visibility", "collapse");
                    if ($(this).next().next().hasClass('pagebreak'))
                        $(this).next().next().remove();
                }
            });
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();//Remove table settings layout inside table
            $('#tableDragger').find('.imgthspan').remove();//Remove add new column span 
            $(".loader10").hide();
            $(".loader10").css('z-index', '');

            resetHistoryListView();
            resetBookmarkListView();
            //check here
            //$('#Acknlwdge').fadeOut();
            //$('#Acknlwdge').fadeIn();
            //$("#Acknlwdge").css("pointer-events", "none");

            // $("#containerbookmark_link").hide();
            $("#categoryMenu").show();
            //$("#container_link").show();
            //  $("#containerbookmark_link").show();
            SetDocMode("view");
            PublishedDoc = true;

            ///////unwanted file remove(while undo hyperlink)
            $('#tableDragger .filetext').each(function () {
                if ($(this).text().trim() == '') {
                    $(this).remove();
                }
            });

            var k = $(".headerTemplate").length;
            if (clientName !== null && clientName === "MOL") {

                var approvename = $("#approverName").text();
                var doc = {
                    'DocumentNumber': $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $.trim(approvename),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()
                };
                $(".footerTemplate").find("#approver").text($("#approverName").text())
                //var WikiApproverList = $("#hdnWikiApproverList").val();
                //for (i = 0; i <= k; i++) {

                //    // $("#tableDragger").find(".headerTemplate").eq(i).find("#docNumb").text(result.DocumentNumber);
                //    if (WikiApproverList.includes(doc.ApprovedBy) ) {
                //        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                //    }
                //    else {
                //        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text(result.ApprovedBy);
                //    }
                //}
                setGlobalApprover();
                setReleasebyName();
            }

            // load Flowchart Content from Docuemnt data not if its in article , if any chart in article then it will be load from method ArticleData/DocEditArticleData

            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartViewPanel(TrID);

                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }
            if ($("#tableDragger .SubHeader1").length > 0)
            {
                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }

            if (clientName !== null && clientName === "hellespont") {
            $(".footerTemplate").find("#approver").text($("#approverName").text());
            }

            // remove Temp tr on article toggle
            $("#tableDragger").find(".article-table>tbody>tr.temp-tr.hide-article").remove();
            if ($('#hdnTOCIndexTab').val() !== undefined && $('#hdnTOCIndexTab').val() == 'True')
            {
                setTimeout(function () {
                    var flag = 0
                    $("#tableDetails tr").each(function () {
                        if ($(this).attr('data-column') === "column-TOC-layout") {
                            flag = 1
                        }
                    });

                    if (flag == 1) {
                        $("body").removeClass("docInfo-panel-close");
                        HideDocumentDetailsContainer();
                        ShowDocumentIndexContainer();
                    }

                }, 3000);
            }
        }
    });
}
function setGlobalApprover() {
    if (clientName !== null && clientName === "MOL" && $('#hdnGlobalApprover').val() !== '' && $('#hdnGlobalApprover').val() !== undefined) {
        //if (new Date($("#Date").val().split(' ')[0].toString("dd/mm/yyyy")) >= new Date($('#hdnGloblApprvrEffectiveDate').val().split(' ')[0].toString("dd/mm/yyyy")))
        $('#tableDragger').find('.headerTemplate').find('#approver').text($('#hdnGlobalApprover').val());
    }
}
function setReleasebyName() {
    if (clientName !== null && clientName === "MOL" && $('#hdnReleaseByName').val() !== '' && $('#hdnReleaseByName').val() !== undefined) {
        //if (new Date($("#Date").val().split(' ')[0].toString("dd/mm/yyyy")) >= new Date($('#hdnGloblApprvrEffectiveDate').val().split(' ')[0].toString("dd/mm/yyyy")))
        $('#tableDragger').find('.headerTemplate').find('#approver').text($('#hdnReleaseByName').val());
    }
}
function OpenDocEditView(id) {
    //Rember same  this functon declared in Reuestchange.js "ProceedDocument"s please make any chaghes also their
    // same function definitin in index.js "RenderManageEditView" Method fro approval cycle functionality "Mnage document draft click"
    QDMS.Menu.ShowDraftRecommendedMenu();
    window.stop();
    //resetPercentageloader();
    //percentageLoader();
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").hide();
    $(".search-form").addClass("hidden");
    $(".Searchexactphrase").addClass("hidden");
    if ($("#pageTab-container").find(".pageTab-item").length) {
        $("#pageTab-container").find(".pageTab-item").remove();
    }

    var url = $("#hfdUrlPath").val() + '/document/EditViewDoc?id=' + id;
    resetHistoryListView();
    resetBookmarkListView();
    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        async: false,
        success: function (result) {
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
            $("#contentWindow").html(result);
            //$(".progress").hide();
            SetDocMode("edit");
            PublishedDoc = false;
            $("body").removeClass();
            $("body").addClass("expand-file-history");
            collapseSideBar();
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            $("#IsDcrlReview").val("Y");

            var k = $(".headerTemplate").length;
            if (clientName === "MOL") {
                var WikiApproverList = $("#hdnWikiApproverList").val();
                for (i = 0; i <= k; i++) {

                    // $("#tableDragger").find(".headerTemplate").eq(i).find("#docNumb").text(result.DocumentNumber);
                    if (WikiApproverList.includes(result.ApprovedBy)) {

                        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                    }
                    else {
                        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text(result.ApprovedBy);
                    }
                }
            }



            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }

            // reload article on scroll
            $(".tableDetails-wrapper").find(".article-table").attr("data-visible", false);

            setTimeout(function () {

                var doc = {
                    'DocumentNumber': $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

                $('img').on('dragstart', function (event) { event.preventDefault(); });

                $("#tableWrapper").find('table').removeClass('NewDataArt');

                $(".toggle-article").click(function () {
                    $(this).toggleClass('opentoggle');
                    $(this).closest("tr.draggable-item").find(".article-table").toggleClass('hide-state');

                    if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("hide-state")) {
                        var control = $(this).closest("tr.draggable-item");
                        control.find(".article-table").find(">tbody>tr.temp-tr").remove();
                        var columnType = control.find(".article-table>tbody>tr:first").attr("data-column");

                        var text = control.find(".article-table").find(">tbody>tr:first").find(":header:first").text();
                        text = $(this).closest("tr.draggable-item").attr("toc-title") || text;

                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr").addClass("hide-article");

                        if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout") {
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
                        }

                        else {
                            $(this).closest("tr.draggable-item").attr("toc-title", control.find(".article-table>tbody>tr:first").text().trim());
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").removeClass("hide-article");
                        }

                    }
                    else {
                        var loaderNew = $('body').find('.loadernew')[0]
                        if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                            $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                        DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id, true)
                    }

                });

                $(".article-table").each(function (coloumn, table) {
                    var Id = table.getAttribute("id");
                    $("#" + Id).each(function () {
                        $("#" + Id + " tr:not(:first-child)").find("tr").each(function (coloumn, tr) {
                            $(tr).find(".drg-rmv").html("");
                            $(tr).find(".drg-rmv-settings").html("");
                            $(tr).find(".bookmark-settings").hide();
                        });

                    });


                });

                // remove Temp tr on article toggle
                $("#tableDragger").find(".article-table>tbody>tr.temp-tr.hide-article").remove();
            }, 100);

            setTimeout(function () {
                $('#tableDragger').find(".bookmark-settings").html("");
                $('#tableDragger').find(".bookmark-settings").hide();
                $('#tableDragger').find("#bookmark-list").find('.remove-bookmark').hide();

                RefreshResize();
            });

        }
    });
}
function RenderFromEditView(id, action, mode) {
    if (mode == "edit") {
        ConfirmAlert("Are you sure want to navigate from this page, if yes then the changes will be lost?").then(function (answer) {
            if (answer) {
                if (action == "view")
                    RenderDocView(id, true);
                else RenderManageEditView(id, true);
            } else {
                return false;
            }
        });
    }
    else {
        if (action == "view")
            RenderDocView(id, true);
        else RenderManageEditView(id, true);
    }
}

function RenderLinkDocView(Id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + 0;
    window.open(url);
}
//function RenderLinkDocView(id) {
//    QDMS.Menu.ShowDraftRecommendedMenu();
//    QDMS.Menu.ShowSerachButton();
//    var FlgVal = "0";

//    FlgVal = $("#HdnModeDirct").val();

//    if (FlgVal == "1") {
//        ConfirmAlert("Do you want to navigated to linked document. if yes changes will be lose!").then(function (answer) {
//            if (answer) {
//                hideControlBar();
//                $("#header_search_field").val("")
//                $(".loader10").show();
//                $("#contentWindow").html("");
//                RenderDocView(id);
//            } else {

//                $(".save_Draft").removeAttr("disabled");
//                $(".save_Document").removeAttr("disabled");
//                $(".saveDraftarticle").removeAttr("disabled");


//            }
//        });
//    }
//    else {
//        hideControlBar();
//        $("#header_search_field").val("")
//        //$(".loader10").show();
//        $("#contentWindow").html("");

//        RenderDocView(id);
//    }

//}
function RenderManageEditView(id, IsViewerRole = false) {
    collapseSideBar();
    //Rember same  this functon declared in Reuestchange.js "ProceedDocument"s please make any chaghes also their
    // same function definitin in ViewDocument.js "RenderDocEditView" Document normal view pages functional"
    if (!IsViewerRole) {
        QDMS.Menu.ShowDraftRecommendedMenu();
    }
    window.stop()
    //resetPercentageloader();
    //percentageLoader();
    $(".loader10").show();
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").hide();
    $(".search-form").addClass("hidden");
    $(".Searchexactphrase").addClass("hidden");
    if ($("#pageTab-container").find(".pageTab-item").length) {
        $("#pageTab-container").find(".pageTab-item").remove();
    }
    var url = $("#hfdUrlPath").val() + '/document/EditManageDoc?id=' + id;
    //resetHistoryListView();
    //resetBookmarkListView();
    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        async: false,
        success: function (result) {
            $(".progress").hide();
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();//Remove table settings layout inside table
            $('#tableDragger').find('.imgthspan').remove();//Remove add new column span 
            $(".control-sidebar-tabs2").addClass("show-approvel-data");
            $(".show-approvel-data #RejectedTab").show();
            $(".show-approvel-data #PendingTab").show();
            $(".show-approvel-data #EditedTab").show();

            SetDocMode("edit");
            PublishedDoc = false;
            $("body").removeClass();
            collapseSideBar();
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            $(".toggle-article").removeClass("opentoggle");
            $("#IsDcrlReview").val("Y");

            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }

            $('.toggle-article').each(function () {
                var ID = $(this).closest("tr.draggable-item").find(".article-table").attr("id");
                $(this).closest("tr.draggable-item").find(".article-table").removeClass("islockarticle");
                $("#" + ID).find('tr:not(.temp-tr)').remove();
                //$("#" + ID).find('tbody').html(_articlesLoderHtmlTiny);
            });

            setTimeout(function () {
                var doc = {
                    'DocumentNumber': $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#docDate").val()
                };
                if (clientName !== null && clientName === "MOL") {
                    //var WikiApproverList = $("#hdnWikiApproverList").val();
                    var k = $(".headerTemplate").length;
                    for (i = 0; i <= k; i++) {
                        $("#tableDragger").find(".headerTemplate").eq(i).find("#docDate").text(doc.date);

                        //if (WikiApproverList.includes(doc.ApprovedBy)) {
                        //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                        //}
                        //else {
                        //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text(doc.ApprovedBy);
                        //}
                        $("#tableDragger").find(".headerTemplate").eq(i).find("#docNumb").text(doc.DocumentNumber);

                    }
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);
                //setGlobalApprover();
                $('img').on('dragstart', function (event) { event.preventDefault(); });

                if ($("#IsDCRLCycle").val() == "True") {

                    if ($("#IsDCRLonChange").val() == "True") {
                        $("#containerDcrl_link").show();

                        $(".dcrl-tab-strip ").show()
                        $("#DCRLComments-list ul").html("");
                        $("#dcrltableDragger").html("");
                        showrequestDCRLUsersList($("#ParentDocID").val());
                        $("#DcrlModeCheckbx").removeClass("hide");
                        $("#IsNormalEdit").val("N");
                    }
                    //$("#IsDcrlReview").val("Y");
                    var Artlcnt = $("#tableDragger").find(".article-table").length;
                    var Artlcnt = $("#tableDragger").find(".article-table").length;
                    if (Artlcnt > 0) {
                        for (var i = 0; i <= Artlcnt - 1; i++) {
                            DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);
                        }
                    }
                    //if (Artlcnt > 3) {
                    //    for (var i = 0; i <= 2; i++) {
                    //        DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);

                    //    }
                    //}
                    //else {
                    //    if (Artlcnt > 0) {
                    //        for (var i = 0; i <= Artlcnt - 1; i++) {
                    //            DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);
                    //        }
                    //    }
                    //}

                    $("#tableWrapper").find('#tableDragger').find('table').removeClass('NewDataArt');

                    $("#tableDragger").find(".toggle-article").click(function () {
                        $(this).toggleClass('opentoggle');
                        if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                            var loaderNew = $('body').find('.loadernew')[0]
                            if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                                $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                            DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id)
                        }

                    });

                }
                else {

                    //var Artlcnt = $("#tableDragger").find(".article-table").length;
                    //if (Artlcnt > 3) {
                    //    for (var i = 0; i <= 2; i++) {
                    //        DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);

                    //    }
                    //}
                    //else {
                    //    if (Artlcnt > 0) {
                    //        for (var i = 0; i <= Artlcnt - 1; i++) {
                    //            DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);
                    //        }
                    //    }
                    //}

                    $(".loader10").hide();
                    $(".loader10").css('z-index', '');
                    var Artlcntn = $(".article-table").length;

                    //if (Artlcntn > 0 && newLoad == 0) {
                    //    newLoad++;
                    //    $(".progressing-loader").show();
                    //    gauge.update(0);
                    //}

                    Artlcntn = $("#tableDragger").find(".article-table").length;

                    if (!isArticleDefaultHide) {
                        for (i = 0; i < Artlcntn; i++) {

                            //DocEditDCRLArticleDataWithLoader($("#tableDragger").find(".article-table").eq(i), i, Artlcntn);
                            /*DocEditDCRLArticleDataWithLoader($("#tableDragger").find(".article-table").eq(i), Artlcntn, $("#IsDCRLCycle").val(), true, id);*/
                            DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);

                        }
                    }

                    $("#tableWrapper").find('table').removeClass('NewDataArt');
                    $("#tableDragger").find(".toggle-article").click(function () {
                        $(this).toggleClass('opentoggle');
                        if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                            var loaderNew = $('body').find('.loadernew')[0]
                            if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                                $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                            DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id)
                        }

                    });

                }

                $("#tableDragger").find(".article-table").each(function (coloumn, table) {
                    var Id = table.getAttribute("id");
                    $("#" + Id).each(function () {
                        $("#" + Id + " tr:not(:first-child)").find("tr").each(function (coloumn, tr) {
                            $(tr).find(".drg-rmv").html("");
                            $(tr).find(".drg-rmv-settings").html("");
                            $(tr).find(".bookmark-settings").hide();
                        });

                    });

                });

                // remove Temp tr on article toggle
                $("#tableDragger").find(".article-table>tbody>tr.temp-tr.hide-article").remove();
                if ($("#tableDragger .SubHeader1").length > 0) {
                    $("#tableDragger .SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            var divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>") {
                                $(this).parent().children('p')[1].remove();
                            }
                            $(this).find("span").append(divcontent);
                        }
                    });
                }
            }, 100);

            setTimeout(function () {
                $('#tableDragger').find(".bookmark-settings").html("");
                $('#tableDragger').find(".bookmark-settings").hide();
                $('#tableDragger').find("#bookmark-list").find('.remove-bookmark').hide();
                if ($("#hdnAppEnv").val() == "O") {

                    RefreshResize();
                }

            });
        }
    });
}
function DocEditView(id) {
    //$("#IsFileDelete").val("false");
    //Rember same  this functon declared in Reuestchange.js "ProceedDocument"s please make any chaghes also their
    // same function definitin in index.js "RenderManageEditView" Method fro approval cycle functionality "Mnage document draft click"
    QDMS.Menu.ShowDraftRecommendedMenu();
    window.stop();
    //resetPercentageloader();
    //percentageLoader();
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").hide();
    $(".search-form").addClass("hidden");
    $(".Searchexactphrase").addClass("hidden");
    if ($("#pageTab-container").find(".pageTab-item").length) {
        $("#pageTab-container").find(".pageTab-item").remove();
    }
    var url = $("#hfdUrlPath").val() + '/document/EditViewDoc?id=' + id;
    resetHistoryListView();
    resetBookmarkListView();
    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        async: false,
        success: function (result) {
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
            $("#contentWindow").html(result);
            //$(".progress").hide();
            SetDocMode("edit");
            PublishedDoc = false;
            $("body").removeClass();
            collapseSideBar();
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            $(".toggle-article").removeClass("opentoggle");
            $("#IsDcrlReview").val("Y");

            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }
            // reload article on scroll
            $(".tableDetails-wrapper").find(".article-table").attr("data-visible", false);
            setTimeout(function () {

                var doc = {
                    'DocumentNumber': $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

                $('img').on('dragstart', function (event) { event.preventDefault(); });

                var Artlcnt = $(".article-table").length;
                if (!isArticleDefaultHide) {
                    if (Artlcnt > 3) {
                        for (var i = 0; i <= 2; i++) {
                            DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);

                        }
                    }
                    else {
                        if (Artlcnt > 0) {
                            for (var i = 0; i <= Artlcnt - 1; i++) {
                                DocEditDCRLArticleData($("#tableDragger").find(".article-table").eq(i), $("#IsDCRLCycle").val(), true, id);
                            }
                        }
                    }
                }

                $("#tableWrapper").find('table').removeClass('NewDataArt');

                $("#tableDragger").find(".toggle-article").click(function () {

                    $(this).toggleClass('opentoggle');
                    //if ($(this).next().next().next().hasClass("drg-rmv-settings-toc-copy")) {
                    //    if ($(this).hasClass('opentoggle') == false)
                    //    $(this).next().next().next().hide();
                    //}
                    if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                        var loaderNew = $('body').find('.loadernew')[0]
                        if (!$(this).closest("tr.draggable-item").find(".article-table").find(".loadernew").length)
                            $(this).closest("tr.draggable-item").find(".article-table").find('.insertMeidum h1.subheaderText').append(loaderNew)
                        DocEditDCRLArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), true, id)
                    }

                });

                $("#tableDragger").find(".article-table").each(function (coloumn, table) {
                    var Id = table.getAttribute("id");
                    $("#" + Id).each(function () {
                        $("#" + Id + " tr:not(:first-child)").find("tr").each(function (coloumn, tr) {
                            $(tr).find(".drg-rmv").html("");
                            $(tr).find(".drg-rmv-settings").html("");
                            $(tr).find(".bookmark-settings").hide();
                        });

                    });


                });

                // hide content of article except first 3 articles

                $("#tableDragger").find('.toggle-article').each(function () {
                    if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                        var columnType = $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").attr("data-column");
                        var text = $(this).closest("tr.draggable-item").find(".article-table").find(">tbody>tr:first").find(":header:first").text();
                        text = $(this).closest("tr.draggable-item").attr("toc-title") || text;

                        $(this).closest("tr.draggable-item").find(".article-table").addClass("hide-state");
                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr").addClass("hide-article");

                        if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout") {
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
                        }

                        else {
                            $(this).closest("tr.draggable-item").attr("toc-title", $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").text().trim());
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").removeClass("hide-article");
                        }
                    }
                });

                // remove Temp tr on article toggle
                $("#tableDragger").find(".article-table>tbody>tr.temp-tr.hide-article").remove();
            }, 100);

            setTimeout(function () {
                $('#tableDragger').find(".bookmark-settings").html("");
                $('#tableDragger').find(".bookmark-settings").hide();
                $('#tableDragger').find("#bookmark-list").find('.remove-bookmark').hide();

                RefreshResize();
            });

        }
    });
}
//article
function RenderArticleView(id) {

    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();

    window.stop();
    //resetPercentageloader();
    //percentageLoader();
    hideControlBar();
    $(".categoryToolbarTitle").html("");
    $("#header_search_field").val("")
    $(".loader10").show();
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").show();
    var url = $("#hfdUrlPath").val() + '/Article/ViewArticle?id=' + id;

    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        async: false,
        success: function (result) {

            $(".loader10").hide();
            $("#contentWindow").html(result);
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();//Remove table settings layout inside table
            $('#tableDragger').find('.imgthspan').remove();
            SetDocMode("view");
            $(".aLwRaPeR").remove();
            $("#header_search_field").val("");
            $("body").removeClass();
            if ($("#IsPublished").val() === "True") {
                $("#container_link").show();
            }
            collapseSideBar();

            ///////unwanted file remove(while undo hyperlink)
            $('#tableDragger .filetext').each(function () {
                if ($(this).text().trim() == '') {
                    $(this).remove();
                }
            });
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartViewPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }

                });

            }
            setTimeout(function () {
                $("#tableDragger tr").removeClass("hide-article");
                var doc = {
                    'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()

                };
                if (clientName !== "SHOEI" && clientName.toLowerCase() !== "imcsm" && clientName !== "FUYOKAIUN" && clientName.toLowerCase() !== "hellespont" ) {
                    $(".footerTemplate").find("#approver").text($("#approverName").text());
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);
                var docnumberheader = $("#DocumentNumber").val() || $("#DocNumber").val();

                if (clientName !== null && clientName === "MOL") {

                        //var WikiApproverList = $("#hdnWikiApproverList").val();
                        var k = $(".headerTemplate").length;
                        for (i = 0; i <= k; i++) {
                            $("#tableDragger").find(".headerTemplate").eq(i).find("#docDate").text(moment($("#Date").val()).format("DD-MM-YYYY"));
                            //if (WikiApproverList.includes($("#Approver").val())) {
                            //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                            //}
                            //else {
                            //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text($("#Approver").val());
                            //}
                            $("#tableDragger").find(".headerTemplate").eq(i).find("#docNumb").text(docnumberheader);

                    }
                }
                setGlobalApprover();
                setReleasebyName();


                $("body").addClass("docInfo-panel-close");
                $("#template-tools-tab").find(".tab-1, .tab-2").removeClass("active");
                $('#tableDragger').find(">tr").show();

                $(".htmlpreview").each(function () {
                    $(this).closest(".draggable-item").html($(this).html());
                });

                $(".singleCol-text").each(function () {
                    if ($(this).next().is("ol") || $(this).next().is("ul"))
                        $(this).next().appendTo($(this));
                });
                $(".section-class-one").each(function () {
                    if ($(this).next().is("ol") || $(this).next().is("ul"))
                        $(this).next().appendTo($(this));
                });

                $("#tableDragger").find(".comment-box").remove();
                $("#tableDragger").find(".comment-display").toggleClass("comment-display");
                $("div.ui-resizable-handle").remove();
                $(".thumb-wrapper").find(".ui-resizable-handle").hide();

                $('img').on('dragstart', function (event) { event.preventDefault(); });
                $("table[id^=resizeTable]").each(function () {
                    if ($(this).css("border-bottom").length)
                        $(this).css("border-bottom", "");
                });
                if (CommonFunc.Pin.isEabled === true) {
                    CommonFunc.Pin.para = id;
                    CommonFunc.Pin.name = $("#templateAcName").text().trim();
                    CommonFunc.Pin.event = "RenderArticleView";
                    CommonFunc.Pin._AllPinnedItems(id);
                    CommonFunc.Pin._CurrentPinnedItems(id);
                    CommonFunc.Pin._IsMoreItemExist();
                }
                docSetBodyFont();
                if ($("#tableDragger .SubHeader1").length > 0) {
                    $("#tableDragger .SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }
            }, 100);

        }
    });
}
function RenderDraftedByothersArticleView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();

    hideControlBar();
    $(".categoryToolbarTitle").html("");
    $("#header_search_field").val("")
    $(".loader10").show();
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").show();
    var url = $("#hfdUrlPath").val() + '/Article/ViewDraftArticle?id=' + id;

    $.ajax({
        url: url,
        type: 'Get',
        crossDomain: true,
        success: function (result) {
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $("#container_link").show();
            if (CommonFunc.Pin.isEabled === true) {
                CommonFunc.Pin.para = id;
                CommonFunc.Pin.name = $("#templateAcName").text().trim();
                CommonFunc.Pin.event = "RenderArticleView";
                CommonFunc.Pin._AllPinnedItems(id);
                CommonFunc.Pin._CurrentPinnedItems(id);
                CommonFunc.Pin._IsMoreItemExist();
            }


            RenderArticleHistoryList(id);
            SetDocMode("view");
            $("#header_search_field").val("");
            $("body").removeClass();
            collapseSideBar();
            $(".list-numbering-box").remove();
            setTimeout(function () {

                //var doc = {
                //    'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
                //    'DocumentName': $("#DocName").val(),
                //    'ApprovedBy': $("#Approver").val(),
                //    'Version': $("#docversion").val(),
                //}
                //CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                //CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

                $("body").addClass("docInfo-panel-close");
                $("#template-tools-tab").find(".tab-1, .tab-2").removeClass("active");
                $('#tableDragger').find(">tr").show();

                $(".htmlpreview").each(function () {
                    $(this).closest(".draggable-item").html($(this).html());
                });

                $(".singleCol-text").each(function () {
                    if ($(this).next().is("ol") || $(this).next().is("ul"))
                        $(this).next().appendTo($(this));
                });
                $(".section-class-one").each(function () {
                    if ($(this).next().is("ol") || $(this).next().is("ul"))
                        $(this).next().appendTo($(this));
                });

                ///////unwanted file remove(while undo hyperlink)
                $('#tableDragger .filetext').each(function () {
                    if ($(this).text().trim() == '') {
                        $(this).remove();
                    }
                });

                $("#tableDragger").find(".comment-box").remove();
                $("#tableDragger").find(".comment-display").toggleClass("comment-display");
                $("div.ui-resizable-handle").remove();
                $(".thumb-wrapper").find(".ui-resizable-handle").hide();

                $('img').on('dragstart', function (event) { event.preventDefault(); });
                $("table[id^=resizeTable]").each(function () {
                    if ($(this).css("border-bottom").length)
                        $(this).css("border-bottom", "");
                });
                docSetBodyFont();
            }, 100);

        }
    });
}
//function RenderLinkArticleView(Id) {

//    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + 1;
//    window.open(url);
//}
function RenderLinkArticleView(Id) {
    //debugger


    var url1 = $("#hfdUrlPath").val() + '/Article/CheckArticleIsrestricted?id=' + Id;
    $.ajax({
        url: url1,
        data: { 'id': Id },
        type: 'Get',
        crossDomain: true,
        success: function (result) {

            if (result == "True") {
                criticalNotify("You Don't have access permission to view this article", '', "Warning");
                return false;
            }
            else {
                var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + 1;
                window.open(url);
                // return false;
            }

        }
    });





}
//function RenderLinkArticleView(id) {
//    QDMS.Menu.ShowDraftRecommendedMenu();
//    QDMS.Menu.ShowSerachButton();

//    var FlgVal = "0";

//    FlgVal = $("#HdnModeDirct").val();

//    if (FlgVal == "1") {
//        ConfirmAlert("Do you want to navigated to linked article? if yes changes will be lose!").then(function (answer) {
//            //console.log(answer)
//            if (answer) {
//                hideControlBar();
//                $(".categoryToolbarTitle").html("");
//                $("#header_search_field").val("")
//                RenderArticleView(id);
//                $(".list-numbering-box").remove();

//            } else {
//                $(".save_Draft").removeAttr("disabled");;
//                $(".save_Document").removeAttr("disabled");;
//                $(".saveDraftarticle").removeAttr("disabled");;



//            }
//        });
//    }
//    else {
//        hideControlBar();
//        $(".categoryToolbarTitle").html("");
//        $("#header_search_field").val("");
//        RenderArticleView(id);
//        //$(".loader10").show();
//        //$("#contentWindow").html("");
//        //$("#container_link").hide();
//        //$("#containerbookmark_link").hide();
//        //var url = $("#hfdUrlPath").val() + '/Article/ViewArticle?id=' + id;

//        //$.ajax({
//        //    url: url,
//        //    type: 'Get',
//        //    crossDomain: true,
//        //    success: function (result) {
//        //        $(".loader10").hide();
//        //        $("#contentWindow").html(result);
//        //        $("#container_link").show();
//        //        if (CommonFunc.Pin.isEabled === true) {
//        //            CommonFunc.Pin.para = id;
//        //            CommonFunc.Pin.name = $("#templateAcName").text().trim();
//        //            CommonFunc.Pin.event = "RenderArticleView";
//        //            CommonFunc.Pin._AllPinnedItems(id);
//        //            CommonFunc.Pin._CurrentPinnedItems(id);
//        //            CommonFunc.Pin._IsMoreItemExist();
//        //        }

//        //        RenderArticleHistoryList(id);
//        //        SetDocMode("view");
//        //        $(".search-form").removeClass("hidden");
//        //        $("#header_search_field").val("");
//        //        $("body").removeClass();
//        //        collapseSideBar();

//        //        setTimeout(function () {
//        //            $("#tableDragger tr").removeClass("hide-article")
//        //            var doc = {
//        //                'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
//        //                'DocumentName': $("#DocName").val(),
//        //                'ApprovedBy': $("#Approver").val(),
//        //                'Version': $("#docversion").val(),
//        //            }
//        //            CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
//        //            CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

//        //            $("body").addClass("docInfo-panel-close");
//        //            $("#template-tools-tab").find(".tab-1, .tab-2").removeClass("active");
//        //            $('#tableDragger').find(">tr").show();

//        //            $(".htmlpreview").each(function () {
//        //                $(this).closest(".draggable-item").html($(this).html());
//        //            });

//        //            $(".singleCol-text").each(function () {
//        //                if ($(this).next().is("ol") || $(this).next().is("ul"))
//        //                    $(this).next().appendTo($(this));
//        //            });
//        //            $(".section-class-one").each(function () {
//        //                if ($(this).next().is("ol") || $(this).next().is("ul"))
//        //                    $(this).next().appendTo($(this));
//        //            });

//        //            $("#tableDragger").find(".comment-box").remove();
//        //            $("#tableDragger").find(".comment-display").toggleClass("comment-display");
//        //            $("div.ui-resizable-handle").remove();
//        //            $(".thumb-wrapper").find(".ui-resizable-handle").hide();

//        //            $('img').on('dragstart', function (event) { event.preventDefault(); });
//        //            $("table[id^=resizeTable]").each(function () {
//        //                if ($(this).css("border-bottom").length)
//        //                    $(this).css("border-bottom", "");
//        //            });
//        //        }, 100);

//        //    }
//        //});
//    }
//}
function RenderArticleReviewView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    hideControlBar();
    $("#header_search_field").val("");
    RenderArticleView(id);
    //$(".loader10").show();
    //$("#contentWindow").html("");

    //var url = $("#hfdUrlPath").val() + '/Article/ViewArticle?id=' + id;

    //$.ajax({
    //    url: url,
    //    type: 'Get',
    //    crossDomain: true,
    //    success: function (result) {
    //        $(".loader10").hide();
    //        $("#contentWindow").html(result);
    //        $(".search-form").removeClass("hidden");
    //        if (CommonFunc.Pin.isEabled === true) {
    //            CommonFunc.Pin.para = id;
    //            CommonFunc.Pin.name = $("#templateAcName").text().trim();
    //            CommonFunc.Pin.event = "RenderArticleView";
    //            CommonFunc.Pin._AllPinnedItems(id);
    //            CommonFunc.Pin._CurrentPinnedItems(id);
    //            CommonFunc.Pin._IsMoreItemExist();
    //        }


    //        SetDocMode("view");
    //        $("body").removeClass();
    //        collapseSideBar();

    //        setTimeout(function () {
    //            $("#tableDragger> tr").removeClass("hide-article")
    //            var doc = {
    //                'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
    //                'DocumentName': $("#DocName").val(),
    //                'ApprovedBy': $("#Approver").val(),
    //                'Version': $("#docversion").val()
    //            }
    //            CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
    //            CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

    //            $("div.ui-resizable-handle").remove();
    //            $(".thumb-wrapper").find(".ui-resizable-handle").hide();

    //            $('img').on('dragstart', function (event) { event.preventDefault(); });
    //            $("table[id^=resizeTable]").each(function () {
    //                if ($(this).css("border-bottom").length)
    //                    $(this).css("border-bottom", "");
    //            });
    //        }, 100);

    //    }
    //});
}
function RenderArticleReviewEditView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    $(".loader10").show();
    resetHistoryListView();
    resetBookmarkListView();
    hideControlBar();
    var url = $("#hfdUrlPath").val() + '/Article/CreateNewArticle?id=' + id;
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        async: false,
        success: function (result) {
            $(".progress").hide();
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();
            $('#tableDragger').find('.imgthspan').remove();
            $(".search-form").addClass("hidden");
            $(".Searchexactphrase").addClass("hidden");
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#header_search_field").val("");
            $("#containerbookmark_link").hide();
            $("#categoryMenu").hide();
            $("#containerDcrl_link").hide();
            collapseSideBar();
            SetDocMode("edit");
            LoadRelBynames();
            AppendContentWindowXY();
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }
            //if (clientName != null && clientName == "MOL") {
            //    if ($('#hdnGlobalApprover').val() !== '' && $('#hdnGlobalApprover').val() !== undefined) {
            //        //if (new Date($("#Date").val().split(' ')[0].toString("dd/mm/yyyy")) >= new Date($('#hdnGloblApprvrEffectiveDate').val().split(' ')[0].toString("dd/mm/yyyy"))) {
            //            $("#Approver").val($('#hdnGlobalApprover').val());
            //            $('#tableDragger').find('.headerTemplate').find('#approver').text($('#hdnGlobalApprover').val());
            //        //}
            //    }
            //}
            setTimeout(function () {
                $("#tableDragger tr").removeClass("hide-article")
                var doc = {
                    'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

                var k = $("#tableDragger .footerTemplate").length;
                for (i = 0; i <= k; i++) {
                    debugger

                    $(".footerTemplate").eq(i).find("#docDate").attr("contenteditable", false);
                    $(".footerTemplate").eq(i).find(".revision").attr("contenteditable", false);
                    $(".footerTemplate").eq(i).find("#approver").attr("contenteditable", false);
                    if (clientName.toLowerCase() === "imcsm")
                        $(".footerTemplate").eq(i).find("tbody>tr:eq(2)>td").attr("contenteditable", false);
                }





                $('#tableDragger').find(".bookmark-settings").html("");
                $('#tableDragger').find(".drg-rmv").html(WikiApp.commonFunc._moveAndRemove());
                $('#tableDragger').find(".drg-rmv-settings").html(WikiApp.commonFunc._moveRemoveAndSettings());
                $('#tableDragger').find(">tr").show();

                RefreshResize();
                $('img').on('dragstart', function (event) { event.preventDefault(); });
                docSetBodyFont();
            }, 100);
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            if ($("#tableDragger .SubHeader1").length > 0) {
                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }
            setTimeout(function () {
                HideAllValidationMsg();
                //BindApproverList();
                HighlighAreaSection();
                LoadArticleComment();
            }, 2000)
        }

    });

}
function RenderArticleEditView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    window.stop();
    $(".loader10").show();
    resetHistoryListView();
    resetBookmarkListView();
    hideControlBar();
    $(".Searchexactphrase").addClass("hidden");
    var url = $("#hfdUrlPath").val() + '/Article/CreateNewArticle?id=' + id;
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
         $(".progress").hide();
            $(".loader10").hide();
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();
            $('#tableDragger').find('.imgthspan').remove();
            $("#contentWindow").html(result);
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $(".search-form").addClass("hidden");
            $(".Searchexactphrase").addClass("hidden");
            //RenderSelectArticleCategoryList();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").hide();
            collapseSideBar();
            $(".two-column").find(".dt-img").css("display", "");
            SetDocMode("edit");
            LoadRelBynames();
            AppendContentWindowXY();

           
            if ($('#tableDragger').find(".drg-rmv-settings-toc-copy").length > 0) {
                debugger
                $('#tableDragger').find(".drg-rmv-settings-toc-copy").each(function () {
                    var styleAttributeValue = $(this).attr('style');
                    if (styleAttributeValue && styleAttributeValue.indexOf('display: none;') !== -1) {
                      
                        $(".drg-rmv-settings-toc-copy").css('display', 'block');
                    }

                });

            }
            if ($('#tableDragger').find(".drg-rmv-settings-copy").length > 0) {
                debugger
                $('#tableDragger').find(".drg-rmv-settings-copy").each(function () {
                    var styleAttributeValue = $(this).attr('style');
                    if (styleAttributeValue && styleAttributeValue.indexOf('display: none;') !== -1) {
                        $(".drg-rmv-settings-copy").css('display', 'block');

                    }

                });

            }
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }
            $(".headerTemplate").each(function () {
                $(this)
                    .find(".insertMeidum")
                    .find('tr').eq(3)
                    .find('td').eq(0)
                    .find('[contenteditable]')
                    .attr('contenteditable', 'true');
            });
            if (clientName !== null && clientName === "MOL") {


                //var WikiApproverList = $("#hdnWikiApproverList").val();
                var k = $(".headerTemplate").length;
                for (i = 0; i <= k; i++) {
                    $("#tableDragger").find(".headerTemplate").eq(i).find("#docDate").text($("#Date").val().split(' ')[0].toString("dd/mm/yyyy").split("/").join("-"));
                    //if (WikiApproverList.includes($("#Approver").val())){
                    //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                    //}
                    //else {
                    //    $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text($("#Approver").val());
                    //}
                    $("#tableDragger").find(".headerTemplate").eq(i).find("#docNumb").text($("#ArticleNumber").val());

                }
                //if ($('#hdnGlobalApprover').val() !== '' && $('#hdnGlobalApprover').val() !== undefined) {
                //    //if (new Date($("#Date").val().split(' ')[0].toString("dd/mm/yyyy")) >= new Date($('#hdnGloblApprvrEffectiveDate').val().split(' ')[0].toString("dd/mm/yyyy"))) {
                //    $('#tableDragger').find('.headerTemplate').find('#approver').text($('#hdnGlobalApprover').val());
                //    $("#Approver").val($('#hdnGlobalApprover').val());
                //    //}
                //}

            }
            setTimeout(function () {

                var doc = {
                    'DocumentNumber': $("#DocumentNumber").val() || $("#DocNumber").val(),
                    'DocumentName': $("#DocName").val(),
                    'ApprovedBy': $("#Approver").val(),
                    'Version': $("#docversion").val(),
                    'Date': $("#Date").val()
                }
                CommonFunc.DownloadPdf._setHeader($('#tableDragger'), doc);
                CommonFunc.DownloadPdf._setFooter($('#tableDragger'), doc);

                setReleasebyName();
                var k = $("#tableDragger .footerTemplate").length;
                for (i = 0; i <= k; i++) {
                    debugger

                    $(".footerTemplate").eq(i).find("#docDate").attr("contenteditable", false);
                    $(".footerTemplate").eq(i).find(".revision").attr("contenteditable", false);
                    $(".footerTemplate").eq(i).find("#approver").attr("contenteditable", false);
                    if (clientName.toLowerCase() === "imcsm")
                        $(".footerTemplate").eq(i).find("tbody>tr:eq(2)>td").attr("contenteditable", false);

                }




                //if ($("#tableDragger .footerTemplate").length > 0) {
                //    $("#tableDragger .footerTemplate").each(function () {


                //        $(this).find(".footerTemplate").find("#docDate").attr("contenteditable", false);
                //        $(this).find(".footerTemplate").find(".revision").attr("contenteditable", false);
                //        $(this).find(".footerTemplate").find("#approver").attr("contenteditable", false);


                //    });
                //}

                $('#tableDragger').find(".bookmark-settings").html("");
                $('#tableDragger').find(".drg-rmv").html(WikiApp.commonFunc._moveAndRemove());
                $('#tableDragger').find(".drg-rmv-settings").html(WikiApp.commonFunc._moveRemoveAndSettings());
                $('#tableDragger').find(">tr").show();

                RefreshResize();

                $('img').on('dragstart', function (event) { event.preventDefault(); });
                $("#tableDragger tr").removeClass("hide-article");
                if ($("#tableDragger .SubHeader1").length > 0) {
                    $("#tableDragger .SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }
                docSetBodyFont();
                $("#tableDragger").find('.two-column').each(function () {
                    if ($(this).find('.drg-rmv-settings-toc-copy').length === 0) {
                        if ($(this).find('td[data-two-col=two-column]').length > 0)
                            $(this).find('td[data-two-col=two-column]').next().after("<td style =\"width: 0;\" class=\"two-col-settings\"><div class=\"templateSettings\"></div><div class=\"bookmark-settings\"></div><span class=\"drg-rmv-settings-toc-copy\"> </span>");
                        else
                            $(this).find("td:last").after("<td style=\"width: 0;\" class=\"two-col-settings\"><div class=\"templateSettings\"></div><div class=\"bookmark-settings\"></div><span class=\"drg-rmv-settings-toc-copy\"> </span>");
                        $(this).find(".drg-rmv-settings-toc-copy").html(WikiApp.commonFunc._moveRemoveSettingsCopy());
                    }
                });
            }, 100);
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            setTimeout(function () {
                HideAllValidationMsg();
                //BindApproverList();
                HighlighAreaSection();
                LoadArticleComment();
            }, 2000)
            $(".tableDetails-wrapper>p>br").remove();
        }

    });

}
function CreateNewArticle() {

    $("#hfdViewDocId").val("");
    $("#IsFileDelete").val("false");

    QDMS.Menu.ShowDraftRecommendedMenu();
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    window.stop();

    $(".categoryToolbarTitle").text('');
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr('id', '');

    var url = $("#hfdUrlPath").val() + '/Article/CreateNewArticle';
    if (!$('body').hasClass('sidebar-collapse')) {
        $('body').addClass('sidebar-collapse');
    }

    $.ajax({
        url: url,
        contentType: "application/html; charset=utf-8",
        cache: !0,
        datatype: "html",
        type: 'GET',
        crossDomain: true,
        async: true,
        success: function (result) {

            $(".loader10").hide();
            $("#contentWindow").html(result);
            $("#tableDragger").children("p").remove();

            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").hide();


            $('#commentmode').closest('li').hide();
            SetDocMode("edit");
            $(".search-form").addClass("hidden");

            $(".Searchexactphrase").addClass("hidden");
            $("#header_search_field").val("");
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            setTimeout(function () {
                HideAllValidationMsg();
                //BindApproverList();
                HighlighAreaSection();

            }, 2000);
            setTimeout(function () {
                QDMS.QuickTour.initializeQuickTour('CreateNewArticle');

            }, 1000);
        }
    });
}


function RenderIsArticleDraftView(id) {
    QDMS.Menu.ShowDraftRecommendedMenu();
    var url = $("#hfdUrlPath").val() + '/Article/CheckArticleDraftEditMode?id=' + id;
    $.ajax({
        url: url,
        data: { 'DraftID': id },
        type: 'Get',
        crossDomain: true,
        success: function (result) {
            console.log(result)
            
            if (result == "True") {

                RenderDraftArticleView(id)
            }
            else {

                RenderDraftedByothersArticleView(id)
                // return false;
            }

        }
    });
}

function RenderDraftArticleView(id) {

    QDMS.Menu.ShowDraftRecommendedMenu();
    $(".loader10").show();
    //resetHistoryListView();
    //resetBookmarkListView();
    hideControlBar();
    $(".categoryToolbarTitle").html("");
    $("#header_search_field").val("")
    $(".loader10").show();
    $("#contentWindow").html("");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#containerDcrl_link").hide();
    $("#categoryMenu").show();
    var url = $("#hfdUrlPath").val() + '/Article/GetArticleDraft?id=' + id;
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
             $(".progress").hide();
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $('#tableDragger').find('tr[data-column="column-table-layout"]').find('.templateSettings').empty();
            $('#tableDragger').find('.imgthspan').remove();
            $('#tableDetails').css({ 'max-width': '', 'min-height': '300px' });
            AppendContentWindowXY();
            PublishedDoc = false;
            SetDocMode("edit");
            $(".search-form").addClass("hidden");
            $(".Searchexactphrase").addClass("hidden");
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").hide();
            $("#header_search_field").val("");
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");


           

            if ($('#tableDragger').find(".drg-rmv-settings-toc-copy").length > 0) {
                debugger
                $('#tableDragger').find(".drg-rmv-settings-toc-copy").each(function () {
                    var styleAttributeValue = $(this).attr('style');
                    if (styleAttributeValue && styleAttributeValue.indexOf('display: none;') !== -1) {
                        styleAttributeValue.css('display', 'block');
                    }

                });

            } 
            if ($('#tableDragger').find(".drg-rmv-settings-copy").length > 0) {
                debugger
                $('#tableDragger').find(".drg-rmv-settings-copy").each(function () {
                    var styleAttributeValue = $(this).attr('style');
                    if (styleAttributeValue && styleAttributeValue.indexOf('display: none;') !== -1) {
                        $(".drg-rmv-settings-copy").css('display', 'block');

                    }

                });

            }

            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }

            if ($("#tableDragger .SubHeader1").length > 0) {

                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }
            setTimeout(function () {
                RefreshResize();
                $('img').on('dragstart', function (event) { event.preventDefault(); });

            }, 100);
            if (clientName.toLowerCase() !== "imcsm") {
                $('.tableDetails-wrapper').find("*[contenteditable]").attr("contenteditable", true);
            }
            $("#tableDragger .headerTemplate").find(".insertMeidum *").attr("contenteditable", false);
            $("#tableDragger .footerTemplate").find(".insertMeidum *").attr("contenteditable", false);

           
        }
    });

}




function RenderCategoryList() {
    $("#header_search_field").val("")
    $(".mega-menu-container").html(LoaderHtml());
    var url = $("#hfdUrlPath").val() + '/categories/ListAll';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {

            $(".mega-menu-container").css("display", "inline-block");
            $(".tiny-loader").remove();
            var success = $($.parseHTML(result)).filter("#title");
            if (success[0] == null) {
                $(".mega-menu-container").html(result);
            }
            else {
                $(".mega-menu-container").html("");
            }
            //$("#categoryMenu").html(result);

        }
    });

}

//function JustOpenInNewTab() {    
//    var url = $("#hfdUrlPath").val() + '/document/index?filetype=' + "U";
//    window.open(url);
//}

function OpenDocInNewTab(Id) {
    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id;
    window.open(url);
}

function OpenEditWithFileDeleteInNewTab(Id, type, fileID) {
    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + type + '&Id=' + fileID + '&FD=' + "true";
    window.open(url);
}

//function OpenDocDraftWithFileDeleteInNewTab(Id,type) {
//    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + type + '&FD=' + "true";
//    window.open(url);
//}


function OpenFileInNewTab(Id, type) {

    var url = $("#hfdUrlPath").val() + '/document/index?viewdocid=' + Id + '&filetype=' + type;
    window.open(url);
}

function ViewdcrlDocNewWindow(DocID, CommentID) {
    //;
    var url = $("#hfdUrlPath").val() + '/document/index?CommentID=' + CommentID + '&DocID=' + DocID
    window.open(url);
}
function RenderRecentlyPublished() {

    var url = $("#hfdUrlPath").val() + '/document/recentlyPublished';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            //$("#recentlyPublished").html(result);
            var strVar = "";
            if (result.length != 0 && result != null) {
                strVar += "<a href=\"javascript:void(0)\" title=\"" + result.TT + "\">";
                strVar += "<i class=\"menu-icon fa fa-thumbs-o-up bg-green\"><\/i>";
                strVar += "<div class=\"menu-info\">";
                strVar += "<h6 class=\"control-sidebar-subheading\" onclick='RenderDocView(\"" + result.Id + "\")'><b>" + result.DN + "<\/b><\/h6>";
                strVar += "<p>Published on " + result.D + "<\/p>";
                strVar += "<\/div>";
                strVar += "<\/a>";
            }
            $("#recentlyPublished").html(strVar);
        }
    });

}

function RenderRecentlyDrafted() {
    var url = $("#hfdUrlPath").val() + '/draft/recentlyDrafted';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            if (result != null && result.length != 0) {
                var strVar = "";
                strVar += "<a href=\"javascript:void(0)\">";
                strVar += "<i class=\"menu-icon fa fa-edit bg-light-blue\"><\/i>";
                strVar += "<div class=\"menu-info\">";
                strVar += "<h6 class=\"control-sidebar-subheading\" onclick='RenderIsDraftView(\"" + result.Id + "\")'><b>" + result.DN + "<\/b><\/h6>";
                strVar += "<p style=\"font-size: 13px;padding: 5px 0;\">Drafted by:  " + result.DF + "<\/p>";
                strVar += "<p>Drafted on " + result.D + "<\/p>";
                strVar += "<\/div>";
                strVar += "<\/a>";
            }
            $("#recentlyDrafted").html(strVar);
        }
    });

}

function RenderSelectCategoryList() {

    var url = $("#hfdUrlPath").val() + '/categories/SelectListAll';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#category_list").html(result);
        }
    });

}
function RenderSelectArticleCategoryList() {

    var url = $("#hfdUrlPath").val() + '/categories/ListAllArticleCategory';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#category_list").html(result);
        }
    });

}

function RenderSelectApproverList() {
    var url = $("#hfdUrlPath").val() + '/Document/ApprovedBy';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#approve_list").html(result);
        }
    });

}

function RenderTags() {
    var url = $("#hfdUrlPath").val() + '/tags/RenderTags';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#tag_wrapper").append(result);
        }
    });

}
function RenderGroups() {
    var url = $("#hfdUrlPath").val() + '/Groups/RenderGroups';
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#group_wrapper").append(result);
        }
    });

}
function searchPreviousDocument(searchKey, modeType) {
    $("#header_search_field").val(searchKey);
    $("#SearchTypeMode").val(modeType).change();
    $("#header_search_field").click(searchDocument());
}

function searchDocument() {
    ////debugger
    var TypeSerach = $("#SearchTypeMode").val();
    if ($("#header_search_field").val() == "" && TypeSerach != "2") {
        $('.searchloader').hide();
        criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
        return false;
    }
    if ($("#header_search_field").val() != "" && (($("#header_search_field").val().trim().length < 3)) && TypeSerach != "2") {
        $('.searchloader').hide();
        criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
        return false;
    }
    if ($("#header_search_field").val() == "" && TypeSerach == "2") {
        $('.searchloader').hide();
        criticalNotify('Please enter document/article number', '', "Warning");
        return false;
    }
    //if ($("#header_search_field").val() != "" && TypeSerach == "2" && isNaN(parseInt($("#header_search_field").val().trim()))) {

    if (($("#header_search_field").val() != "") && (TypeSerach == "2")
        && (!$("#header_search_field").val().match(/^[a-zA-Z0-9.\_\-\/\\s]+$/))) {
        $('.searchloader').hide();
        criticalNotify('Please enter valid number', '', "Warning");
        return false;
    }
    //if (/^[a-zA-Z0-9- ]*$/.test($("#header_search_field").val()) == false) {
    //    criticalNotify('First 3 character should not contain special characters', '', "Error");
    //    return false;
    //}
    $('.searchloader').show();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    $("#container_link").hide();
    $('#Acknlwdge').fadeOut();
    $("#containerbookmark_link").hide();
    $("#categoryMenu").show();
    $("#containerDcrl_link").hide();
    $("#contentWindow").html('<div class="loaderoverlay" style="display:block"></div>');
    if ($('#testinv').length > 0) {

        if ($('#tableDetails tr').length > 0 && viewMode == "edit") {
            ConfirmAlert("Do you want to save this document as draft?").then(function (answer) {
                //var ansbool = Boolean.parse(answer.toString());
                if (answer) {
                    $(".save_Draft").trigger("click");
                    $(".save_Document").trigger("click");
                } else {
                    resetHistoryListView();
                    resetBookmarkListView();
                    if ($("#header_search_field").val() != "" && $("#header_search_field").val().trim().length >= 3) {
                        //checkforspecialcharater('$("#header_search_field").val().trim()');

                        $("#breadcrum").text(">> Search");
                        //var url = $("#hfdUrlPath").val() + '/document/searchDoc?searchString=' + $("#header_search_field").val() + '&TypeMode=' + TypeSerach + '&isExactPhrase=' + $('#exactphrase').prop('checked');
                        $("#contentWindow").html('<div class="loaderoverlay" style="display:block"></div>');

                        $.ajax({
                            url: $("#hfdUrlPath").val() + '/document/searchDoc',
                            type: 'POST',
                            data: { 'searchString': $("#header_search_field").val(), 'TypeMode': TypeSerach, 'isExactPhrase': $('#exactphrase').prop('checked') },
                            crossDomain: true,
                            success: function (result) {
                                $("#header_search_field").val("");
                                $('.searchloader').hide();
                                $("#contentWindow").html(result);
                                var isContains = result.indexOf('no-Doc-fund') != -1;
                                if (isContains) {
                                    CommonFunc.Pin.para = $("#header_search_field").val();
                                    CommonFunc.Pin.name = 'Search:' + $("#header_search_field").val();
                                    CommonFunc.Pin.event = "searchDocument";
                                    CommonFunc.Pin.searchMode = TypeSerach;
                                    CommonFunc.Pin.searchKey = $("#header_search_field").val();
                                    CommonFunc.Pin._AllPinnedItems($("#header_search_field").val());
                                    CommonFunc.Pin._CurrentPinnedItems($("#header_search_field").val());
                                    CommonFunc.Pin._IsMoreItemExist();
                                }
                            }
                        });
                    }
                    else {
                        $('.searchloader').hide();
                        criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
                        return false
                    }
                }
            });
        }
        else {
            SearchDocList();
        }
    }
    else {
        SearchDocList();
    }
    //else {

    //    if (TypeSerach != "2") {
    //        $('.searchloader').hide();
    //        criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
    //        return false;
    //    }
    //    else {
    //        $('.searchloader').hide();
    //        criticalNotify('Please enter document/article number', '', "Warning");
    //        return false;

    //    }

    //}
}

function IndexSearchDocument() {
    var TypeSerach = $("#IdexSearchTypeMode").val();

    if ($("#indexSearchFeild").val() != "" && (($("#indexSearchFeild").val().trim().length >= 3) || TypeSerach == 0)) {
        $('.commonsearch .searchloader').show();
        $(".categoryToolbarTitle").text("");
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr("id", "");
        if ($('#testinv').length > 0) {

            if ($('#tableDetails tr').length > 0 && viewMode == "edit") {
                //if (confirm("Do you want to save this document as draft?") == true) {
                ConfirmAlert("Do you want to save this document as draft?").then(function (answer) {
                    //var ansbool = Boolean.parse(answer.toString());
                    if (answer) {

                        $(".save_Draft").trigger("click");
                        $(".save_Document").trigger("click");
                    } else {
                        resetHistoryListView();
                        resetBookmarkListView();
                        if ($("#indexSearchFeild").val() != "" && $("#indexSearchFeild").val().trim().length >= 3) {
                            //checkforspecialcharater('$("#indexSearchFeild").val().trim()');

                            $("#breadcrum").text(">> Search");
                            //var url = $("#hfdUrlPath").val() + '/document/searchDoc?searchString=' + $("#indexSearchFeild").val() + '&TypeMode=' + TypeSerach + '&isExactPhrase=' + $('#exactphrase').prop('checked');

                            $.ajax({
                                url: $("#hfdUrlPath").val() + '/document/searchDoc',
                                type: 'POST',
                                data: { 'searchString': $("#indexSearchFeild").val(), 'TypeMode': TypeSerach, 'isExactPhrase': $('#exactphrase').prop('checked') },
                                crossDomain: true,
                                success: function (result) {
                                    $('.commonsearch .searchloader').hide();
                                    $("#contentWindow").html(result);
                                    $("#header_search_field").val($("#indexSearchFeild").val());
                                }
                            });
                        }
                        else {
                            $('.searchloader').hide();
                            criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
                            return false;
                        }
                    }
                });
            }
            else {
                IndexSearchDocList();
            }
        }
        else {
            IndexSearchDocList();
        }
    }
    else {
        if (TypeSerach == 1) {
            $('.searchloader').hide();
            criticalNotify('Please search with a string of minimum 3 characters', '', "Warning");
            return false;
        }
        else {
            $('.searchloader').hide();
            criticalNotify('Please enter document/article number', '', "Warning");
            return false;
        }


    }
}

function searchDocumentInView() {

    if ($("#View_search_field").val() != "" && $("#View_search_field").val().length >= 4) {
        CommonFunc.Pin.para = $("#View_search_field").val();
        CommonFunc.Pin.name = 'Search:' + $("#View_search_field").val();
        CommonFunc.Pin.event = "searchDocument";
        CommonFunc.Pin._AllPinnedItems($("#View_search_field").val());
        CommonFunc.Pin._CurrentPinnedItems($("#View_search_field").val());
        CommonFunc.Pin._IsMoreItemExist();
        $(".categoryToolbarTitle").text("");
        $('.categoryToolbarTitle').attr('title', '');
        $(".categoryToolbarTitle").attr("id", "");
        if ($('#testinv').length > 0) {

            if ($('#tableDetails tr').length > 0 && viewMode == "edit") {
                ConfirmAlert("Do you want to save this document as draft?").then(function (answer) {
                    //var ansbool = Boolean.parse(answer.toString());
                    if (answer) {
                        $(".save_Draft").trigger("click");
                        $(".save_Document").trigger("click");
                    } else {
                        resetHistoryListView();
                        resetBookmarkListView();
                        if ($("#View_search_field").val() != "" && $("#View_search_field").val().length >= 4) {


                            $("#breadcrum").text(">> Search");
                            var url = $("#hfdUrlPath").val() + '/document/searchDocInViewMode?searchString=' + $("#View_search_field").val();

                            $.ajax({
                                url: url,
                                type: 'POST',
                                crossDomain: true,
                                success: function (result) {
                                    $("#contentWindow").html(result);
                                }
                            });
                        }
                        else {
                            $('.searchloader').hide();
                            criticalNotify('Please search with a string of minimum 4 characters', '', "Warning");
                        }
                    }
                });
            }
            else {
                SearchViewDocList();
            }
        }
        else {
            SearchViewDocList();
        }
    }
    else {
        $('.searchloader').hide();
        criticalNotify('Please search with a string of minimum 4 characters', '', "Warning");
    }
}

function IndexSearchDocList() {
    var TypeSerach = $("#IdexSearchTypeMode").val();
    resetHistoryListView();
    resetBookmarkListView();
    if ($("#indexSearchFeild").val() != "") {
        var str = $("#indexSearchFeild").val();
        var searchStr = str.substring(0, 3);
        //if (/^[a-zA-Z0-9- ]*$/.test(searchStr) === false) {
        //    criticalNotify('First 3 character should not contain special characters', '', "Error");
        //    return false;
        //}
        $("#breadcrum").text(">> Search");
        //var url = $("#hfdUrlPath").val() + '/document/searchDoc?searchString=' + $("#indexSearchFeild").val() + '&TypeMode=' + TypeSerach + '&isExactPhrase=' + $('#exactphrase').prop('checked');

        $.ajax({
            url: $("#hfdUrlPath").val() + '/document/searchDoc',
            type: 'POST',
            data: { 'searchString': $("#indexSearchFeild").val(), 'TypeMode': TypeSerach, 'isExactPhrase': $('#exactphrase').prop('checked') },
            crossDomain: true,
            success: function (result) {
                $("#contentWindow").html(result);
            }
        });
    }
}
function SearchDocList() {
    var TypeSerach = $("#SearchTypeMode").val();
    resetHistoryListView();
    resetBookmarkListView();
    if ($("#header_search_field").val() != "") {
        var str = $("#header_search_field").val()
        var searchStr = str.substring(0, 3);
        $("#breadcrum").text(">> Search");
        //var url = $("#hfdUrlPath").val() + '/document/searchDoc?searchString=' + $("#header_search_field").val() + '&TypeMode=' + TypeSerach + '&isExactPhrase=' + $('#exactphrase').prop('checked');

        $.ajax({
            url: $("#hfdUrlPath").val() + '/document/searchDoc',
            type: 'POST',
            data: { 'searchString': $("#header_search_field").val(), 'TypeMode': TypeSerach, 'isExactPhrase': $('#exactphrase').prop('checked')},
            crossDomain: true,
            success: function (result) {
                $('.searchloader').hide();
                $("#contentWindow").html(result);
                var isContains = result.indexOf('no-Doc-fund') > -1;
                if (isContains) {
                    CommonFunc.Pin.para = $("#header_search_field").val();
                    CommonFunc.Pin.name = 'Search:' + $("#header_search_field").val();
                    CommonFunc.Pin.event = "searchDocument";
                    CommonFunc.Pin.searchMode = TypeSerach;
                    CommonFunc.Pin.searchKey = $("#header_search_field").val();
                    CommonFunc.Pin._AllPinnedItems($("#header_search_field").val());
                    CommonFunc.Pin._CurrentPinnedItems($("#header_search_field").val());
                    CommonFunc.Pin._IsMoreItemExist();
                }

            }
        });
    }
}

function SearchViewDocList() {
    resetHistoryListView();
    resetBookmarkListView();
    if ($("#View_search_field").val() != "") {
        $("#breadcrum").text(">> Search");
        var url = $("#hfdUrlPath").val() + '/document/searchDocInViewMode?searchString=' + $("#View_search_field").val();

        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#contentWindow").html(result);
                var isContains = result.indexOf('no-Doc-fund') > -1;
                if (isContains) {
                    CommonFunc.Pin.para = $("#header_search_field").val();
                    CommonFunc.Pin.name = 'Search:' + $("#header_search_field").val();
                    CommonFunc.Pin.event = "searchDocument";
                    CommonFunc.Pin.searchMode = TypeSerach;
                    CommonFunc.Pin.searchKey = $("#header_search_field").val();
                    CommonFunc.Pin._AllPinnedItems($("#header_search_field").val());
                    CommonFunc.Pin._CurrentPinnedItems($("#header_search_field").val());
                    CommonFunc.Pin._IsMoreItemExist();
                }
            }
        });
    }
}

function ScreenXY() {
    screenHeight = $(window).innerHeight();
    screenWidth = $(window).innerWidth();
    contentWindowHeight = screenHeight * .74;
    contentWindowWidth = screenWidth * .9;
}

function AppendContentWindowXY() {
    ScreenXY();
    $(".panel-footer").css({ "bottom": "screenHeight", "margin-bottom": "-10px" });
    //$("#history-list").css({ "height": ($(window).outerHeight() * .84) });

}
function RenderHistoryList(id) {
    //$("#container_link").show();
    var LoderHtmlTiny = "<div class=\"tiny-loader\"><div class=\"loadernew loader--style3\" title=\"Loading\"><svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\"><path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\" transform=\"rotate(300 25 25)\">";
    LoderHtmlTiny = LoderHtmlTiny + "<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div></div>";
    $("#history-list").html(LoderHtmlTiny);
    var url = $("#hfdUrlPath").val() + '/history/historylist?id=' + id;

    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#history-list").html(result);
        }
    });
    AppendContentWindowXY();

    resetHistoryListView();
    if (historyUrl == true) {
        $("body").addClass("expand-doc-history");
        hideControlBar();
        historyUrl = false;
    }
    else {
        $("body").removeClass("expand-doc-history");
    }

}

function RenderArticleHistoryList(id) {
    //$("#container_link").show();
    var LoderHtmlTiny = "<div class=\"tiny-loader\"><div class=\"loadernew loader--style3\" title=\"Loading\"><svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\"><path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\" transform=\"rotate(300 25 25)\">";
    LoderHtmlTiny = LoderHtmlTiny + "<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div></div>";
    $("#history-list").html(LoderHtmlTiny);

    var url = $("#hfdUrlPath").val() + '/ArticleHistory/Historylist?id=' + id;

    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#history-list").html(result);
        }
    });
    AppendContentWindowXY();

    resetHistoryListView();
    if (historyUrl == true) {
        $("body").addClass("expand-doc-history");
        hideControlBar();
        historyUrl = false;
    }
    else {
        $("body").removeClass("expand-doc-history");
    }

}

function RenderBookmarkList(id) {
    var url = $("#hfdUrlPath").val() + '/history/BookmarkList?id=' + id;
    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            bookmarks = [];
            bookmarks = result;
            bookmarkBegin = bookmarks.slice();
            bookmarkStart = bookmarks.slice();
            debugger;
            var removeDup = [];

            if (newBookmark.length > 0) {
                //$.each(newBookmark, function (key, val) {
                //    newBookmark = bookmarkStart.filter(p => p.BookmarkId != key);
                //});
                newBookmark = newBookmark.filter(x => {
                    return !bookmarkStart.some(t => t.BookmarkId === x.BookmarkId);
                });
            }

            ShowBookmarkList();

        }
    });
    AppendContentWindowXY();

    resetBookmarkListView();
    if (bookmarkView == true) {
        $("body").addClass(".expand-doc-bookmark");
        hideControlBar();
        bookmarkView = false;
    }
    else {
        $("body").removeClass(".expand-doc-bookmark");
    }
}

function ShowBookmarkList() {

    bookmarks = bookmarkStart.slice();

    if (newBookmark.length > 0) {

        newBookmark = newBookmark.filter(x => {
            return !bookmarkStart.some(t => t.BookmarkId === x.BookmarkId);
        });

        for (var i = 0; i < newBookmark.length; i++)
        {
            bookmarks.push(newBookmark[i]);
        }

    }


    $("#bookmark-list").html("");
    var bookmarkItem = "";
    $.each(bookmarks, function (key, val) {
        var bookmarkData = (val.BookmarkTitle.startsWith("data:image")) ? "<img src=" + val.BookmarkTitle + " />" : val.BookmarkTitle;
        bookmarkItem = bookmarkItem + "<li class=\"bookmark-item\">" +
            "<span class=\"boomarkTitle\" onclick=\"gotoElement('" + val.BookmarkId + "')\">" + bookmarkData + "</span>" +
            "<span class=\"remove-bookmark\" onclick=\"CommonFunc.Bookmark._removeBookmark(this)\" data-bookmarkId=" + val.BookmarkId + "><i class=\"fa fa-ban\" aria-hidden=\"true\" title=\"Remove Comment\"></i></span>" +
            "</li>";

    });
    var bookmarkList = "<ul>" + bookmarkItem + "</ul>";
    $("#bookmark-list").html(bookmarkList);
    bookmarks = [];

}

function resetHistoryListView() {
    historyUrl = true;

    //$("#container_link").css({ "margin-left": $("#container_link").outerWidth() + "px" });

}
function resetBookmarkListView() {
    bookmarkView = false;
    //$("#container_link").css({ "margin-left": $("#container_link").outerWidth() + "px" });

}


var dateChecker = function (control) {
    var dayclass = '';
    var currDay = moment().startOf('day');
    var varDate = moment(control.D, "DD/MM/YYYY HH:mm Z").startOf('day');
    var duration = Math.floor(moment.duration(varDate.diff(currDay)).asDays()) * -1;

    if (duration < 1) {
        dayclass = "itemToday";
    }
    else if (duration < 2) {
        dayclass = "itemYesterday";
    }
    else if (duration < 7) {
        dayclass = "itemthisweek";
    }
    else if (duration < 14) {
        dayclass = "lastweek";
    }
    else if (duration < 30) {
        dayclass = "itemthismonth";
    }
    else if (duration < 365) {
        dayclass = "itemthisyear";
    }
    else {
        dayclass = "itemolder";
    }
    return dayclass;
}



function hideControlBar() {
    $(".control-sidebar").removeClass("control-sidebar-open");
    $('body').removeClass('control-sidebar-open');
}

function act(e) {

    $(".art-tab-switch").removeClass("is-active");
    $(e).addClass("is-active");
    var dataval = $(e).attr("data-val")
    if (dataval == "0") {

        $("#articledraftListView").show();
        $("#artiledraftlist").show();
        $("#articleListView").hide();
        $("#publishedArticleList").hide();

        //$("#searchArticleKey").val('');
        if ($(e).hasClass("istab-art-load") == false) {
            QDMS.DocumentListing._DraftedArticleSection();
            $(e).addClass("istab-art-load")
        }
        //$('.articlefiltercat').html("All" + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
        $("#searchArticleKey").val($("#hdntxtdraft-art").val());
        articleTab = "drafted";
    } else {

        $("#articledraftListView").hide();
        $("#artiledraftlist").hide();
        $("#articleListView").show();
        $("#publishedArticleList").show();
        //$("#searchArticleKey").val('');
        //  $('.articlefiltercat').html("All" + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
        articleTab = "publised";
        if ($(e).hasClass("istab-art-load") == false) {
            QDMS.DocumentListing._PublishedArticleSection();
            $(e).addClass("istab-art-load")
        }
        $("#searchArticleKey").val($("#hdntxtpub-art").val());
    }
}
function DocsTabSwitch(e) {

    $(".doc-tab-switch").removeClass("is-active");
    $(e).addClass("is-active");
    var dataval = $(e).attr("data-val")
    if (dataval == "0") {
        $("#docDraftListView").show();
        $("#docListView").hide();
        documentTab = "drafted";
        if ($(e).hasClass("is-tabloaded") == false) {
            QDMS.DocumentListing._renderDraftList();
            $(e).addClass("is-tabloaded");
        }

        $("#searchDocsKey").val($("#hdntxtdraft-doc").val())

    } else {
        $("#docDraftListView").hide();
        $("#docListView").show();
        documentTab = "publised";
        if ($(e).hasClass("is-tabloaded") == false) {
            QDMS.DocumentListing._RenderDocList();
            $(e).addClass("is-tabloaded");
        }

        $("#searchDocsKey").val($("#hdntxtpub-doc").val());
        //$("#searchArticleKey").val('');
        //$('.articlefiltercat').html("All" + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
    }
}




function RenderArticleHistoryView(id) {
    $(".loader10").show();

    var url = $("#hfdUrlPath").val() + '/ArticleHistory/ViewHistory?id=' + id;

    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $("#contentWindow").html(result);
            ResizeShrikedHistoryTableRows();
            $("#doc_content .drg-rmv").remove();
            $("#doc_content .drg-rmv-settings").remove();
            $("#doc_content .drg-rmv-settings-copy").remove();
            $("#doc_content .drg-rmv-settings-toc-copy").remove();
            $("#doc_content .drg-rmv-copy").remove();
            $("#doc_content .drg-rmv-toc-copy").remove();

            $("#doc_content .bookmark-settings").remove();
            $("#doc_content .dt-img").remove();
            $(".thumb-ic-wrp").remove();
            $(".aLwRaPeR").remove();
            $(".logo-outline").remove();
            $("#imgcontainer").css("width", "auto")
            $("#imgcontainer").parent(".ui-wrapper").css("width", "100%")
            $(".progress").hide();
            $(".loader10").hide();
            AppendContentWindowXY();
            SetDocMode("edit");
        }
    });
}

function RenderHistoryView(id, action = "N") {
    $('#Acknlwdge').fadeOut();

    $(".loader10").show();

    $.ajax({
        url: $("#hfdUrlPath").val() + '/history/viewHistory',
        data: { id: id, action: action },
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            $(".progress").hide();
            $(".loader10").hide();
            $(".loaderoverlay").hide();
            //stopInterval();
            $("#contentWindow").html(result);
            $("#doc_content .drg-rmv").remove();
            $("#doc_content .drg-rmv-settings").remove();
            $("#doc_content .drg-rmv-settings-copy").remove();
            $("#doc_content .drg-rmv-settings-toc-copy").remove();
            $("#doc_content .drg-rmv-copy").remove();
            $("#doc_content .drg-rmv-toc-copy").remove();
            $("#doc_content .bookmark-settings").remove();
            $("#doc_content .dt-img").remove();
            $(".thumb-ic-wrp").remove();
            $(".aLwRaPeR").remove();
            $(".logo-outline").remove();
            $("#containerbookmark_link").hide();
            $("#categoryMenu").show();
            $("#containerDcrl_link").hide();

            ResizeShrikedHistoryTableRows();

            var Artlcnt = $(".article-table").length;

            for (var i = 0; i <= Artlcnt; i++) {
                //        DocEditDCRLArticleData($(".article-table").eq(i), false, true, id);


                // var id = $(".article-table").eq(i).attr("id");
                // DocEditDCRLArticleData($(".article-table").eq(i), false, true, id);

                ArticleExpand($(".article-table").eq(i).closest("tr.draggable-item"));


                //DocEditDCRLArticleData($("#" + id).find(".article-table"), $("#IsDCRLCycle").val(), true, $("#Id").val());

                //if ($("#" + id).find(".article-table[data-visible='false']").length) {
                //  $("#" + id).find(".article-table[data-visible='false']").attr("data-visible", true);
                // ArticleData($("#" + id).find(".article-table"));
                // }

            }





            $(".article-table").find("#imgcontainer").css("width", "auto")
            $(".article-table").find("#imgcontainer").parent(".ui-wrapper").css("width", "100%")
            AppendContentWindowXY();
            //SetDocMode("edit");
            // ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));


            if ($("#tableDragger .SubHeader1").length > 0) {
                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }



            if ($("#tableDragger").find(".article-table").find(".SubHeader1").length > 0) {
                debugger
                $("#tableDragger").find(".article-table").find(".SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }

        }
    });
}

function ResizeShrikedHistoryTableRows() {
    var totalTabletrCount = $('.insertMeidum #resizeTable').find('tr').length;
    if (totalTabletrCount > 0) {
        for (var i = 0; i < totalTabletrCount; i++) {
            if ($('.insertMeidum #resizeTable').find('tr').eq(i).height() < 20) {
                $('.insertMeidum #resizeTable').find('tr').eq(i).height('23px');
            }
        }
    }
    $('.imgtdspan').remove();
}

function RenderUpload() {

    var url = $("#hfdUrlPath").val() + '/home/FileIndex';

    $.ajax({
        url: url,
        type: 'POST',
        crossDomain: true,
        success: function (result) {

            $("#contentWindow").html(result);

            AppendContentWindowXY();
        }
    });

}





function LoadComments() {
    //$(".loader10").show();
    $.ajax({
        url: $("#hfdUrlPath").val() + '/Document/GetDocumentComments',
        data: { DocID: $("#Id").val() },
        type: 'GET',
        async: true,
        success: function (data) {

            $("#tableDetails1 ul").html(data);
            //$(".loader10").hide();

            $("#tableDetails1 li").on("click", function () {
                $("#tableDetails .comment-box").each(function () {
                    $(this).hide();
                });

                var commentElement = $("#" + $(this).attr("data-value"));
                if ($(commentElement).find(".comment-box").css("display") == "none") {
                    $(commentElement).find(".comment-box").css("display", "");
                    $(commentElement).focus();
                    $(this).closest("li").addClass('active').siblings('li').removeClass('active');

                }

            });
        }
    });
}
function LoadArticleComment() {
    //$(".loader10").show();
    $.ajax({
        url: $("#hfdUrlPath").val() + '/Article/GetArticleComments',
        data: { ID: $("#Id").val(), Published: true },
        type: 'GET',
        async: true,
        success: function (data) {
            $("#tableDetails1 ul").html(data);
            //$(".loader10").hide();
            $("#tableDetails1 li").on("click", function () {
                $("#tableDetails .comment-box").each(function () {
                    $(this).hide();
                });

                var commentElement = $("#" + $(this).attr("data-value"));
                if ($(commentElement).find(".comment-box").css("display") == "none") {
                    $(commentElement).find(".comment-box").css("display", "");
                    $(commentElement).focus();
                    $(this).closest("li").addClass('active').siblings('li').removeClass('active');

                }

            });
        }
    });
}
function LoadDocumentComments() {

}
function CancelAddDoc() {
    $("#contentWindow").html("<h3>Welcome to QDMS PAL</h3>");
}

function SetDocMode(mode) {
    viewMode = mode;
    if (mode == "view") {
        $("body").addClass("show-historyTabStrip show-bookmarkTabStrip").removeClass(" expand-doc-history hide-toolbox");
        $(".drg-rmv-settings").remove();
        $(".drg-rmv").remove();
        $(".drg-rmv-settings-toc").remove();
        $(".drg-rmv-toc").remove
        $(".drg-rmv-settings-copy").hide();
        $(".drg-rmv-copy").hide();
        $(".drg-rmv-settings-toc-copy").hide();
        $(".drg-rmv-addrow-deleterow-toc-copy").hide();
        $(".drg-rmv-addrow-deleterow-withsubrow").hide();
        $(".drg-rmv-toc-copy").hide();
        $(".rotate-img").hide();
        $("#draggableContainer").addClass("view-mode-container");
        $("#tableDragger").find("*[contenteditable=true]").removeAttr("contenteditable");
    }
    else if (mode == "new") {
        $("body").removeClass("show-historyTabStrip show-bookmarkTabStrip hide-toolbox docInfo-panel-close");
    }
    else if (mode == "edit") {
        $("body").addClass("show-historyTabStrip show-bookmarkTabStrip").removeClass("docInfo-panel-close hide-toolbox expand-doc-history");
        $("#draggableContainer").removeClass("view-mode-container");
    }
}
function notificationProcessor(result) {
    //var result = JSON.parse(item);
    //var result = item;
    var temp = localStorage.getItem('notification');
    var _ynDate = new Date();
    var _ynHour = _ynDate.getHours();
    var _ynMinutes = _ynDate.getMinutes();
    var _ampm = _ynHour >= 12 ? 'pm' : 'am';
    _ynHour = _ynHour % 12;
    _ynHour = _ynHour ? _ynHour : 12;
    _ynMinutes = _ynMinutes < 10 ? '0' + _ynMinutes : _ynMinutes;
    var _setTime = _ynHour + ':' + _ynMinutes + ' ' + _ampm;

    if (temp === null || temp === "null" || typeof temp === "undefined") {
        temp = [];
    } else {
        temp = JSON.parse(localStorage.getItem('notification'));
    }
    var data = { "type": result.MessageType, "data": result.Data, "status": "unread", "time": _setTime };
    temp.push(data);
    localStorage.setItem('notification', JSON.stringify(temp));
    tempRemoveLastItem();
    /*four type Mode || notice | warning | error | success*/
    var notiData = localStorage.getItem('notification');
    notiData = JSON.parse(notiData);
    for (var i = 0; i < notiData.length; i++) {
        notiData[i].type;
        notiData[i].data;
    }
    var typeData = notificationData();
    $("#media").html(typeData);
}

function criticalNotify(msg, img, type) {

    if (type == "Success") {

        var img = $("#hdnURLPathVal").val() + "/Content/Images/approve-icon.png";
        $(".div-alert-style").removeClass("alertreject");
        $(".div-alert-style").removeClass("alertinfo");
        $(".div-alert-style").addClass("alertapprove");

        $(".alertsymbol").attr('src', img);
        $("#alertTitle").html(msg);
        $(".alert-pop-overlay").show();
        setTimeout(function () { $('.alert-pop-overlay').fadeOut(); }, 1000);
    }
    else if (type == "Error") {
        var img = $("#hdnURLPathVal").val() + "/Content/Images/reject-icon.png";
        $(".div-alert-style").removeClass("alertinfo");
        $(".div-alert-style").removeClass("alertapprove");
        $(".div-alert-style").addClass("alertreject");
        $(".alertsymbol").attr('src', img);
        $("#alertTitle").html(msg);
        $(".alert-pop-overlay").show();
        setTimeout(function () { $('.alert-pop-overlay').fadeOut(); }, 3000);
    }
    else if (type == "Warning") {
        var img = $("#hdnURLPathVal").val() + "/Content/Images/info-icon.png";
        $(".div-alert-style").removeClass("alertreject");
        $(".div-alert-style").removeClass("alertapprove");
        $(".div-alert-style").addClass("alertinfo");
        $(".alertsymbol").attr('src', img);
        $("#alertTitle").html(msg);
        $(".alert-pop-overlay").show();
        setTimeout(function () { $('.alert-pop-overlay').fadeOut(); }, 3000);
    }
    else {
        var img = $("#hdnURLPathVal").val() + "/Content/Images/qdms-icon.png";
        $(".div-alert-style").removeClass("alertreject");
        $(".div-alert-style").removeClass("alertinfo");
        $(".div-alert-style").addClass("alertapprove");
        $(".alertsymbol").attr('src', img);
        $("#alertTitle").html(msg);
        $(".alert-pop-overlay").show();
        setTimeout(function () { $('.alert-pop-overlay').fadeOut(); }, 3000);
    }

    //$.notiny({ width: 'auto', text: msg, position: 'right-bottom', image: img });
}
function ConfirmAlert(msg) {
    var defer = $.Deferred();
    var img = $("#hdnURLPathVal").val() + "/Content/Images/info-icon.png";
    $(".div-alert-style").removeClass("alertreject");
    $(".div-alert-style").removeClass("alertapprove");
    $(".div-alert-style").addClass("alertinfo");
    $(".alertsymbol").attr('src', img);
    $("#alertTitle").html('<div style="padding-bottom:10px;">' + msg + '</div>' + '<div><button type="button" class="btn btn-default red-buttons" id="confirm_ok">Ok</button><button type="button" id="confirm_cancel" class="btn btn-default default-buttons">Cancel</button></div> ');
    $("#confirm_ok").click(function () {
        defer.resolve(true);
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');
    });
    $("#confirm_cancel").click(function () {
        defer.resolve(false);
        $(".alertcontent").html("");
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');
    });
    $(".alert-popup-close").click(function () {
        defer.resolve(false);
        $(".alertcontent").html("");
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');

    });
    $(".alert-pop-overlay").show();
    $(".alert-pop-overlay").css('bottom', 0);
    return defer.promise();
}
//$("#confirm_cancel").click(function () {
//    $(".alert-pop-overlay").hide();
//});
function errorHandler(ErrType, ErrMsg) {
    if (ErrType == "Critical")
        criticalNotify(ErrMsg, "");
    else if (ErrType == "Warning")
        criticalNotify(ErrMsg, "");
}

function collapseSideBar() {
    $("body").addClass("sidebar-collapse");
}
function LoaderHtml() {
    var loderHtml = '';
    loderHtml = '<div class="tiny-loader">' +
        '<div class="loadernew loader--style3" title="Loading">' +
        '<svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
        '<path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(189.998 25 25)">' +
        '<animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform>' +
        '</path></svg></div></div>';
    return loderHtml;
}
$(document).ready(function () {
    //CheckDraftArticle();
    //$('a.notifications').click(function () {
    //    $(".not-recent-tab li").removeClass("active");
    //    $(".not-tab").addClass("active");
    //    $("#control-sidebar-notification-tab").addClass("active");
    //    $("#control-sidebar-home-tab").removeClass("active");
    //    if ($('body').hasClass('expand-doc-history')) {
    //        $('body').removeClass('expand-doc-history');
    //    }
    //    else if ($('body').hasClass('expand-doc-bookmark')) {
    //        $('body').removeClass('expand-doc-bookmark');
    //    }
    //    $('body').toggleClass('control-sidebar-open');
    //});

    $(document).on("click", function (event) {
        var $trigger = $(".notifications");
        if ($trigger !== event.target && !$trigger.has(event.target).length && !$(event.target).closest('.control-sidebar.noti').length) {
            $('body').removeClass('control-sidebar-open');
            $('.control-sidebar.noti').removeClass('control-sidebar-open');
        }
    });
    $('a.userimage').click(function () {
        hideControlBar();
    });

    $("#header_search_field").keyup(function (event) {

        if (event.keyCode === 8 || event.keyCode === 32) {
            if (this.value.trim().length === 0) {
                this.value = this.value.trim();
                return false;

            }
        }
    });


});

function gotoElement(id) {
    $(".viewdoc").scrollTop(0);

    if (viewMode == "edit") {

        if ($("#" + id).find(".article-table[data-visible='false']").length) {
            DocEditDCRLArticleData($("#" + id).find(".article-table"), $("#IsDCRLCycle").val(), true, $("#Id").val());
        }
        if ($("#IsNormalEdit").val() == "Y") {

            if ($("#compare_diff_mode").length == 0 || $("#compare_diff_mode").prop("checked") == false) {
                //$('.tableDetails-wrapper').find("#" + id).focus();
                $(".tableDetails-wrapper").animate({
                    scrollTop: $("#" + id).offset().top - 300
                }, 0);
            }
            else if ($('tr #html-comparetableDetails').length > 0 && $("#compare_diff_mode").prop("checked")) {
                $(".comparisionhtml-table-wrapper").unbind("scroll");
                $("#html-comparetableDetails").find("#" + id).focus();
                $('.tableDetails-wrapper').find("#" + id).focus();
                setTimeout(function () {
                    $('.comparisionhtml-table-wrapper').on('scroll', function () {

                        $('.tableDetails-wrapper').scrollTop($(this).scrollTop());
                    });
                }, 2000);

            }
        }
        else if ($("#IsNormalEdit").val() == "N") {
            if ($("#dcrlmode").prop("checked") == false) {
                $(".tableDetails-wrapper").animate({
                    scrollTop: $("#" + id).offset().top - 300
                }, 0);
            }
            else if ($("#dcrlmode").prop("checked") == true && $('.dcrl-table-wrapper').length > 0) {
                //$('.dcrl-table-wrapper').find("#" + id).focus();   
                $(".dcrl-table-wrapper").animate({
                    scrollTop: $("#" + id).offset().top - 300
                }, 0);
            }
        }


    }

    if (viewMode != "edit") {
        try {
            $(".viewdoc").animate({
                scrollTop: $("#" + id).offset().top - 300
            }, 0);
        }
        catch (err) {

            if (bookmarkStart.length > 0) {
                criticalNotify("The bookmarked content had been removed from the Document in the new version", "", "Warning");
                DeleteBookmark(id, $('#documentId').val());
                bookmarkStart.splice(bookmarkStart.findIndex(x => x.BookmarkId == id), 1);
                $("#btn-bookmark-collapse").removeClass('open-tab');
                $("body").toggleClass("expand-doc-bookmark");
            }
        }
        if ($("#" + id).find(".article-table[data-visible='false']").length) {
            $("#" + id).find(".article-table[data-visible='false']").attr("data-visible", true);
            ArticleData($("#" + id).find(".article-table"));
        }
    }

}

function ToggleExpand(control, articleName) {
    var columnType = control.find(".article-table>tbody>tr:first").attr("data-column");

    control
        .each(function () {
            control.find('.toggle-article', this)
                .unbind().click(function () {
                    $(this).toggleClass('opentoggle');
                    try {
                        //remove unwanted p tag
                        if ($(this).closest("tr.draggable-item").find(".article-table > tbody").find('tr:first')[0] != null && $(this).closest("tr.draggable-item").find(".article-table > tbody").find('tr:first')[0].previousElementSibling != null) {
                            if ($(this).closest("tr.draggable-item").find(".article-table > tbody").find('tr:first')[0].previousElementSibling.nodeName == "P") {
                                $(this).closest("tr.draggable-item").find(".article-table > tbody").find('tr:first')[0].previousElementSibling.remove();
                            }
                        }
                    }
                    catch (err) {
                        console.log(err.message);
                    }

                    //if ($(this).next().next().next().hasClass("drg-rmv-settings-toc-copy")) {
                    //    if ($(this).hasClass('opentoggle') == true) {
                    //        $(this).next().next().next().hide();
                    //    }
                    //    else {
                    //        $(this).next().next().next().show();
                    //    }

                    //}
                    if (!$(this).closest("tr.draggable-item").find(".article-table").hasClass("hide-state")) {
                        var text = control.find(".article-table").find(">tbody>tr:first").find(":header:first").text();
                        text = $(this).closest("tr.draggable-item").attr("toc-title") || text;

                        $(this).closest("tr.draggable-item").find(".article-table").addClass("hide-state");
                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr").addClass("hide-article");
                        //if (columnType == "column-PageHeader-BSM") {

                        //    var TrcolumnType = control.find(".article-table>tbody>tr:nth-child(2)").attr("data-column");

                        //    if (TrcolumnType != "column-SubHeaderBSM-layout" && TrcolumnType != "column-ContentHeader-BSM" && TrcolumnType != "column-subheader1Layout-layout") {
                        //        text = control.find(".article-table").find(">tbody>tr:nth-child(2)").find(":header:first").text() || articleName;
                        //        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
                        //    }

                        //    else {
                        //        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:nth-child(2)").removeClass("hide-article");
                        //    }

                        //}
                        //else
                        if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout") {
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
                        }

                        else {
                            $(this).closest("tr.draggable-item").attr("toc-title", control.find(".article-table>tbody>tr:first").text().trim());
                            $(this).closest("tr.draggable-item").find(".article-table>tbody>tr:first").removeClass("hide-article");
                        }

                    }
                    else {
                        $(this).closest("tr.draggable-item").find(".article-table").removeClass("hide-state");
                        $(this).closest("tr.draggable-item").find(".article-table>tbody>tr").removeClass("hide-article");
                        if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout")
                            $(this).closest("tr.draggable-item").find(".article-table").find("tr.temp-tr").remove();
                    }
                });
        });
}

function ArticleExpand(control) {
    //debugger
    var columnType = control.find(".article-table>tbody>tr:first").attr("data-column");

    //if (!control.find(".article-table").hasClass("hide-state")) {
    //    var text = control.find(".article-table").find(">tbody>tr:first").find(":header:first").text();
    //    text = text || "";
    //    control.find(".article-table").addClass("hide-state");
    //    control.find(".article-table>tbody>tr").addClass("hide-article");
    //    if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout")
    //        control.find(".article-table>tbody>tr:first").before("<tr class=\"temp-tr\"><td><h2>" + text + "</h2></td></tr>");
    //    else
    //        control.find(".article-table>tbody>tr:first").removeClass("hide-article");
    //}
    //else {
    control.find(".article-table").removeClass("hide-state");
    control.find(".article-table>tbody>tr").removeClass("hide-article");
    if (columnType != "column-SubHeaderBSM-layout" && columnType != "column-ContentHeader-BSM" && columnType != "column-subheader1Layout-layout")
        control.find(".article-table").find("tr.temp-tr").remove();
    //}


}

function DCRLCompareScreenArticleData(control, isdcrl = false, isdcrlview = false, Docid = "") {

    try {
        var Id = control.attr("id");
        $('.dcrl-table-wrapper').find("#" + Id).find('tr').remove();
        $('.dcrl-table-wrapper').find("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
        $.ajax({
            url: $("#hfdUrlPath").val() + '/Article/GetArticleData',
            type: 'POST',
            data: { 'id': Id, 'IsdcrlCycle': isdcrl, 'IsdcrlView': isdcrlview, "DocID": Docid },
            crossDomain: true,
            success: function (result) {
                if (result != null) {

                    $(".loader10").hide();
                    control.find(">tbody>tr").remove();

                    SetArticleBody(result.DocumentData, control.find(">tbody"));

                    ToggleExpand(control.closest("tr.draggable-item"), result.ArticleName);
                    ArticleExpand(control.closest("tr.draggable-item"))
                    control.find(".drg-rmv").html("");
                    control.find(".drg-rmv-settings").html("");
                    control.find(".drg-rmv-toc").html("");
                    control.find(".drg-rmv-settings-toc").html("");
                    control.find(".drg-rmv").hide();
                    control.find(".drg-rmv-settings").hide();
                    control.find(".drg-rmv-toc").hide();
                    control.find(".drg-rmv-settings-toc").hide();
                    control.find(".drg-rmv-copy").hide();
                    control.find(".drg-rmv-settings-copy").hide();
                    control.find(".drg-rmv-toc-copy").hide();
                    control.find(".drg-rmv-settings-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
                    control.find(".dt-img").hide();
                    control.find(".templateSettings").hide();
                    control.find(".ui-resizable-handle").hide();
                    control.find("#header").hide();
                    control.find("#footerTemplate").hide();
                    control.find("*[contenteditable]").attr("contenteditable", false);
                    $(".subheaderText").parent().parent().attr("contenteditable", false)
                    $(".cautionDiv").parent().attr("contenteditable", false);
                    control.find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension

                    // highligh word if user serch keywork with .higlighrange

                    if ($("#View_search_field").val() != "" && $("#View_search_field").val() != "undefined" && $("#View_search_field").val() != undefined) {
                        var _searchTerm = $("#View_search_field").val();
                        ////Highlight search term inside a specific context
                        //$(control).unmark().mark(_searchTerm);
                        if ($('#exactphrase').prop('checked') === true) {
                            $(control).unmark().mark([_searchTerm], {
                                accuracy: "exactly",
                                separateWordSearch: false
                            });
                        }
                        else {
                            $(control).unmark().mark(_searchTerm);
                        }

                    }

                    setTimeout(function () {

                        control.find(".two-column .imgresource").resizable();
                        control.find(".two-column .imgresource").resizable('destroy');
                        if ($("#pageSize").val() == "A4") {
                            $("#tableDragger").find(".ul-box").removeClass("Procedure");
                            $("#tableDragger").find(".ol-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-alpha-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-hyp-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-chk-box").removeClass("Procedure");

                            $("#tableDragger").find(".ul-box").addClass("guidlisce");
                            $("#tableDragger").find(".ol-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-alpha-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-hyp-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-chk-box").addClass("guidlisce");
                        }
                        else if ($("#pageSize").val() == "A5") {
                            $("#tableDragger").find(".ul-box").addClass("Procedure");
                            $("#tableDragger").find(".ol-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-alpha-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-hyp-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-chk-box").addClass("Procedure");

                            $("#tableDragger").find(".ul-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ol-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-alpha-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-hyp-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-chk-box").removeClass("guidlisce");
                        }


                        docSetBodyFont();
                    });
                }
                else {
                    ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                }

            },
            error: function () {

            }
        });
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }

}
function ArticleDataAllLoad(control, isdcrl = false, isdcrlview = false, Docid = "") {
    ////
    try {
        if (control.length > 0) {
            var ArticleIds = [];
            control.each(function (i) {
                var Id = control[i].id;
                ArticleIds.push(Id);
                $('.tableDetails-wrapper').find("#" + Id).find('tr').remove();
                $('.tableDetails-wrapper').find("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
            });
            $.ajax({
                url: $("#hfdUrlPath").val() + '/Article/GetAllArticleData',
                type: 'POST',
                async: false,
                data: { 'ArticleIds': ArticleIds, 'IsdcrlCycle': isdcrl, 'IsdcrlView': isdcrlview, "DocID": Docid },
                crossDomain: true,
                success: function (result) {
                    //
                    if (result != null) {
                        window.sessionStorage.setItem("ALLArticleData", JSON.stringify(result));

                    }


                },
                error: function () {

                }
            });
        }
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }
}
function GetAllArticlesData(control, count) {
    //debugger
    try {

        //if (loadFlag == 1) {
        //    loadFlag++;
        //    takeCount = count;
        //    factor = 100 / count;
        //    hit = 1;
        //}

        var newupdate = 0;

        var Id = control.attr("id");
        $('.tableDetails-wrapper').find("#" + Id).find('tr').remove();
        $('.tableDetails-wrapper').find("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
        var storedArticles = JSON.parse(sessionStorage.getItem("ALLArticleData"));

        var ArticlIn = [];
        var ArticleIdsInArray = [];

        storedArticles.forEach(function (i) {
            var Idc = i.Id;
            ArticlIn.push(Idc);
        });
        if (ArticlIn.includes(Id) == true) {

            storedArticles.forEach(function (i) {

                if (i.Id == Id) {
                    ArticleIdsInArray.push(i);
                }
            });
        }
        //$.ajax({
        //    url: $("#hfdUrlPath").val() + '/Article/GetArticle',
        //    type: 'POST',
        //    data: { 'id': Id },
        //    crossDomain: true,
        //async:false,
        // success: function (result) {
        var result = ArticleIdsInArray;

        if (result != null && result.length > 0) {

            if (result[0].ArticleName == "No") {
                control.find(">tbody>tr").css('display', 'none');
                control.closest("tr.draggable-item").find(".toggle-article").css('display', 'none');
            }
            else {
                $(".loader10").hide();
                control.find(">tbody>tr").remove();

                SetArticleBody(result[0].DocumentData, control.find(">tbody"));


                ToggleExpand(control.closest("tr.draggable-item"), result[0].ArticleName);
                ArticleExpand(control.closest("tr.draggable-item"));
                control.find(".drg-rmv").html("");
                control.find(".drg-rmv-settings").html("");
                control.find(".drg-rmv-toc").html("");
                control.find(".drg-rmv-settings-toc").html("");
                control.find(".drg-rmv").hide();
                control.find(".drg-rmv-settings").hide();
                control.find(".drg-rmv-toc").hide();
                control.find(".drg-rmv-settings-toc").hide();
                control.find(".drg-rmv-copy").hide();
                control.find(".drg-rmv-settings-copy").hide();
                control.find(".drg-rmv-toc-copy").hide();
                control.find(".drg-rmv-settings-toc-copy").hide();
                control.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
                control.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
                control.find(".dt-img").hide();
                control.find(".templateSettings").hide();
                control.find(".ui-resizable-handle").hide();
                control.find("#header").hide();
                control.find("#footerTemplate").hide();
                control.find("*[contenteditable]").attr("contenteditable", false);
                $(".subheaderText").parent().parent().attr("contenteditable", false)
                $(".cautionDiv").parent().attr("contenteditable", false);
                control.find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension

                // highligh word if user serch keywork with .higlighrange

                if ($("#View_search_field").val() != "" && $("#View_search_field").val() != "undefined" && $("#View_search_field").val() != undefined) {
                    var _searchTerm = $("#View_search_field").val();
                    ////Highlight search term inside a specific context
                    //$(control).unmark().mark(_searchTerm);
                    if ($('#exactphrase').prop('checked') === true) {
                        $(control).unmark().mark([_searchTerm], {
                            accuracy: "exactly",
                            separateWordSearch: false
                        });
                    }
                    else {
                        $(control).unmark().mark(_searchTerm);
                    }

                }

                setTimeout(function () {

                    control.find(".two-column .imgresource").resizable();
                    control.find(".two-column .imgresource").resizable('destroy');
                    if ($("#pageSize").val() == "A4") {
                        $("#tableDragger").find(".ul-box").removeClass("Procedure");
                        $("#tableDragger").find(".ol-box").removeClass("Procedure");
                        $("#tableDragger").find(".ul-alpha-box").removeClass("Procedure");
                        $("#tableDragger").find(".ul-hyp-box").removeClass("Procedure");
                        $("#tableDragger").find(".ul-chk-box").removeClass("Procedure");

                        $("#tableDragger").find(".ul-box").addClass("guidlisce");
                        $("#tableDragger").find(".ol-box").addClass("guidlisce");
                        $("#tableDragger").find(".ul-alpha-box").addClass("guidlisce");
                        $("#tableDragger").find(".ul-hyp-box").addClass("guidlisce");
                        $("#tableDragger").find(".ul-chk-box").addClass("guidlisce");
                    }
                    else if ($("#pageSize").val() == "A5") {
                        $("#tableDragger").find(".ul-box").addClass("Procedure");
                        $("#tableDragger").find(".ol-box").addClass("Procedure");
                        $("#tableDragger").find(".ul-alpha-box").addClass("Procedure");
                        $("#tableDragger").find(".ul-hyp-box").addClass("Procedure");
                        $("#tableDragger").find(".ul-chk-box").addClass("Procedure");

                        $("#tableDragger").find(".ul-box").removeClass("guidlisce");
                        $("#tableDragger").find(".ol-box").removeClass("guidlisce");
                        $("#tableDragger").find(".ul-alpha-box").removeClass("guidlisce");
                        $("#tableDragger").find(".ul-hyp-box").removeClass("guidlisce");
                        $("#tableDragger").find(".ul-chk-box").removeClass("guidlisce");
                    }


                    docSetBodyFont();
                });
            }


            //if ($(".progressing-loader").length > 0) {

            //    newupdate = Math.ceil(hit * factor);
            //    gauge.update(newupdate);
            //    hit++;

            //    takeCount--;

            //    if (takeCount == 0) {
            //        gauge.update(100);
            //        setTimeout(function () {
            //            $(".progressing-loader").hide();
            //            loadFlag = 1;
            //            takeCount = 0;
            //            factor = 0;
            //            hit = 0;
            //            gauge.update(0);
            //        }, 3000);
            //    }
            //}
        }
        else {

            ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
            //if ($(".progressing-loader").length > 0) {

            //    newupdate = Math.ceil(hit * factor);
            //    gauge.update(newupdate);
            //    hit++;

            //    takeCount--;

            //    if (takeCount == 0) {
            //        gauge.update(100);
            //        setTimeout(function () {
            //            $(".progressing-loader").hide();
            //            loadFlag = 1;
            //            takeCount = 0;
            //            factor = 0;
            //            hit = 0;
            //            gauge.update(0);
            //        }, 3000);

            //    }
            //}
        }

        //  },
        // error: function () {
        //if ($(".progressing-loader").length > 0) {

        //    newupdate = Math.ceil(hit * factor);
        //    gauge.update(newupdate);
        //    hit++;

        //    takeCount--;

        //    if (takeCount == 0) {
        //        gauge.update(100);
        //        setTimeout(function () {
        //            $(".progressing-loader").hide();
        //            loadFlag = 1;
        //            takeCount = 0;
        //            factor = 0;
        //            hit = 0;
        //            gauge.update(0);
        //        }, 3000);

        //    }
        //}
        //  }
        // });
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }

}
function ArticleData(control, isdcrl = false, isdcrlview = false, Docid = "") {

    try {
        var Id = control.attr("id");
        $('.tableDetails-wrapper').find("#" + Id).find('tr').remove();
        $('.tableDetails-wrapper').find("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
        $.ajax({
            url: $("#hfdUrlPath").val() + '/Article/GetArticleData',
            type: 'POST',
            data: { 'id': Id, 'IsdcrlCycle': isdcrl, 'IsdcrlView': isdcrlview, "DocID": Docid },
            crossDomain: true,
            success: function (result) {
                //debugger
                //console.log(result);

                if (result != null) {
                    if (result == "No") {
                        control.find(">tbody>tr").css('display', 'none');
                        control.closest("tr.draggable-item").find(".toggle-article").css('display', 'none');
                        //ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                        //control.find(">tbody>tr").hide();

                        ///  control.find(">tbody>tr>").css('display', 'none');


                        //    control.find(">tbody>tr").addClass("hide-article");
                        //    control.find(">tbody").addClass("hide-state");
                        //    control.find(".toggle-article").hide();
                        //    $(control.target).closest("td").closest(".draggable-item").remove();
                    }
                    else {

                        $(".loader10").hide();
                        control.find(">tbody>tr").remove();
                        if (result.DocumentData == null) {
                            var isHeaderTemplate = $('#' + Id + '').closest('tr').prev().hasClass('headerTemplate');
                            var isFooterTemplate = $('#' + Id + '').closest('tr').next().hasClass('footerTemplate');
                            if (isHeaderTemplate && isFooterTemplate) {
                                $('#' + Id + '').closest('tr').prev().remove();
                                $('#' + Id + '').closest('tr').next().remove();
                                $('#' + Id + '').closest('tr').next().next().closest(".pagebreak").remove();
                            }
                            control.closest("tr.draggable-item").find(".toggle-article").css('display', 'none');                        }

                        SetArticleBody(result.DocumentData, control.find(">tbody"));
                        if (clientName === "MMS") {
                            if (result.ApprovedDate !== null)
                                $('#' + Id + '').closest('tr').prev().find("#docDate").text(result.ApprovedDate.split(' ')[0].toString("dd/mm/yyyy").split("/").join("-"));
                            $('#' + Id + '').closest('tr').prev().find("#docNumb").text(result.ArticleNumber);
                            $('#' + Id + '').closest('tr').prev().find(".revision").text(result.Version);
                        }
                        if (clientName === "MOL") {
                            debugger
                            if (result.ApprovedDate !== null)
                                $('#' + Id + '').closest('tr').prev().find("#docDate").text(result.ApprovedDate.split(' ')[0].toString("dd/mm/yyyy").split("/").join("-"));
                            //if (result.WikiApproverList.includes(result.ApprovedBy)) {
                            //    $('#' + Id + '').closest('tr').prev().find("#approver").text('Akihiro Yamauchi');
                            //}
                            //else {
                            //    $('#' + Id + '').closest('tr').prev().find("#approver").text(result.ApprovedBy);
                            //}
                            $('#' + Id + '').closest('tr').prev().find("#approver").text(result.GlobalApprover);
                            $('#' + Id + '').closest('tr').prev().find("#docNumb").text(result.ArticleNumber);
                            $('#' + Id + '').closest('tr').prev().find(".revision").text(result.Version);


                        }
                        if (clientName === "NORSE") {
                            debugger;
                            if (result.ApprovedDate !== null)
                                $('#' + Id + '').closest('tr').prev().find("#docDate").text(result.ApprovedDate.split(' ')[0].toString("dd/mm/yyyy").split("/").join("-"));
                            //if (result.WikiApproverList.includes(result.ApprovedBy)) {
                            //    $('#' + Id + '').closest('tr').prev().find("#approver").text('Akihiro Yamauchi');
                            //}
                            //else {
                            //    $('#' + Id + '').closest('tr').prev().find("#approver").text(result.ApprovedBy);
                            //}
                            //  $('#' + Id + '').closest('tr').prev().find("#approver").text(result.GlobalApprover);
                            $('#' + Id + '').closest('tr').prev().find("#docNumb").text(result.ArticleNumber);
                            $('#' + Id + '').closest('tr').prev().find(".revision").text(result.Version);


                        }
                        ToggleExpand(control.closest("tr.draggable-item"), result.ArticleName);
                        ArticleExpand(control.closest("tr.draggable-item"));
                        control.find(".drg-rmv").html("");
                        control.find(".drg-rmv-settings").html("");
                        $('.remove-image').hide();
                        control.find(".drg-rmv-toc").html("");
                        control.find(".drg-rmv-settings-toc").html("");
                        control.find(".drg-rmv").hide();
                        control.find(".drg-rmv-settings").hide();
                        control.find(".drg-rmv-toc").hide();
                        control.find(".drg-rmv-settings-toc").hide();
                        control.find(".drg-rmv-copy").hide();
                        control.find(".drg-rmv-settings-copy").hide();
                        control.find(".drg-rmv-toc-copy").hide();
                        control.find(".drg-rmv-settings-toc-copy").hide();
                        control.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
                        control.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
                        control.find(".dt-img").hide();
                        control.find(".templateSettings").hide();
                        control.find(".ui-resizable-handle").hide();
                        control.find("#header").hide();
                        control.find("#footerTemplate").hide();
                        control.find("*[contenteditable]").attr("contenteditable", false);
                        $(".subheaderText").parent().parent().attr("contenteditable", false)
                        $(".cautionDiv").parent().attr("contenteditable", false);
                        control.find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension

                        // highligh word if user serch keywork with .higlighrange

                        if ($("#View_search_field").val() != "" && $("#View_search_field").val() != "undefined" && $("#View_search_field").val() != undefined) {
                            var _searchTerm = $("#View_search_field").val();
                            ////Highlight search term inside a specific context
                            //$(control).unmark().mark(_searchTerm);
                            if ($('#exactphrase').prop('checked') === true) {
                                $(control).unmark().mark([_searchTerm], {
                                    accuracy: "exactly",
                                    separateWordSearch: false
                                });
                            }
                            else {
                                $(control).unmark().mark(_searchTerm);
                            }

                        }

                        setTimeout(function () {

                            control.find(".two-column .imgresource").resizable();
                            control.find(".two-column .imgresource").resizable('destroy');
                            if ($("#pageSize").val() == "A4") {
                                $("#tableDragger").find(".ul-box").removeClass("Procedure");
                                $("#tableDragger").find(".ol-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-alpha-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-hyp-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-chk-box").removeClass("Procedure");

                                $("#tableDragger").find(".ul-box").addClass("guidlisce");
                                $("#tableDragger").find(".ol-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-alpha-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-hyp-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-chk-box").addClass("guidlisce");
                            }
                            else if ($("#pageSize").val() == "A5") {
                                $("#tableDragger").find(".ul-box").addClass("Procedure");
                                $("#tableDragger").find(".ol-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-alpha-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-hyp-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-chk-box").addClass("Procedure");

                                $("#tableDragger").find(".ul-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ol-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-alpha-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-hyp-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-chk-box").removeClass("guidlisce");
                            }


                            docSetBodyFont();
                        });
                    }

                }
                else {

                    ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                }

            },
            error: function () {

            }
        });
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }

}

function DocEditArticleData(control, isdcrl = false, isdcrlview = false, Docid = "") {

    try {
        var Id = control.attr("id");
        $("#" + Id).find('tr').remove();
        $("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
        $.ajax({
            url: $("#hfdUrlPath").val() + '/Article/GetArticleData',
            type: 'POST',
            data: { 'id': Id, 'IsdcrlCycle': isdcrl, 'IsdcrlView': isdcrlview, "DocID": Docid },
            crossDomain: true,
            success: function (result) {
                if (result != null) {

                    $(".loader10").hide();
                    control.find(">tbody>tr").remove();

                    SetArticleBody(result.DocumentData, control.find(">tbody"));

                    ToggleExpand(control.closest("tr.draggable-item"), result.ArticleName);
                    ArticleExpand(control.closest("tr.draggable-item"))

                    control.find("#header").show();
                    control.find("#footerTemplate").show();

                    control.find(".drg-rmv").html("");
                    control.find(".drg-rmv-settings").html("");
                    control.find(".drg-rmv-toc").html("");
                    control.find(".drg-rmv-settings-toc").html("");
                    control.find(".drg-rmv").hide();
                    control.find(".drg-rmv-settings").hide();
                    control.find(".drg-rmv-toc").hide();
                    control.find(".drg-rmv-settings-toc").hide();
                    control.find(".drg-rmv-copy").hide();
                    control.find(".drg-rmv-settings-copy").hide();
                    control.find(".drg-rmv-toc-copy").hide();
                    control.find(".drg-rmv-settings-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
                    control.find(".dt-img").hide();
                    control.find(".templateSettings").hide();
                    control.find(".ui-resizable-handle").hide();
                    control.find("#header").hide();
                    control.find("#footerTemplate").hide();
                    control.find("*[contenteditable]").attr("contenteditable", false);
                    $(".subheaderText").parent().parent().attr("contenteditable", false)
                    $(".cautionDiv").parent().attr("contenteditable", false);
                    control.find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension

                    // highligh word if user serch keywork with .higlighrange

                    if ($("#View_search_field").val() != "" && $("#View_search_field").val() != "undefined" && $("#View_search_field").val() != undefined) {
                        var _searchTerm = $("#View_search_field").val();
                        ////Highlight search term inside a specific context
                        //$(control).unmark().mark(_searchTerm);
                        if ($('#exactphrase').prop('checked') === true) {
                            $(control).unmark().mark([_searchTerm], {
                                accuracy: "exactly",
                                separateWordSearch: false
                            });
                        }
                        else {
                            $(control).unmark().mark(_searchTerm);
                        }

                    }
                    setTimeout(function () {

                        control.find(".two-column .imgresource").resizable();
                        control.find(".two-column .imgresource").resizable('destroy');
                        if ($("#pageSize").val() == "A4") {
                            $("#tableDragger").find(".ul-box").removeClass("Procedure");
                            $("#tableDragger").find(".ol-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-alpha-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-hyp-box").removeClass("Procedure");
                            $("#tableDragger").find(".ul-chk-box").removeClass("Procedure");

                            $("#tableDragger").find(".ul-box").addClass("guidlisce");
                            $("#tableDragger").find(".ol-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-alpha-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-hyp-box").addClass("guidlisce");
                            $("#tableDragger").find(".ul-chk-box").addClass("guidlisce");
                        }
                        else if ($("#pageSize").val() == "A5") {
                            $("#tableDragger").find(".ul-box").addClass("Procedure");
                            $("#tableDragger").find(".ol-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-alpha-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-hyp-box").addClass("Procedure");
                            $("#tableDragger").find(".ul-chk-box").addClass("Procedure");

                            $("#tableDragger").find(".ul-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ol-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-alpha-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-hyp-box").removeClass("guidlisce");
                            $("#tableDragger").find(".ul-chk-box").removeClass("guidlisce");
                        }

                        //if (WikiApp.commonFunc != undefined)
                        //    WikiApp.commonFunc._SetBodyFont();
                        docSetBodyFont();
                    });
                }
                else {
                    ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                }
            },
            error: function () {

            }
        });
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }

}

function DocEditDCRLArticleData(control, isdcrl = false, isdcrlview = false, Docid = "", isfileDelete = false) {
    //debugger
    try {
        var UserCompID = $("#hdfUserCompId").val();
        var UserCompTypeID = $("#hdfUserCompType").val();
        var Id = control.attr("id");
        //$("#" + Id).find('tr').remove();
        $("#" + Id).find('tbody').html(_articlesLoderHtmlTiny);
        $.ajax({
            url: $("#hfdUrlPath").val() + '/Article/GetArticleData',
            type: 'POST',
            data: { 'id': Id, 'IsdcrlCycle': isdcrl, 'IsdcrlView': isdcrlview, "DocID": Docid },
            crossDomain: true,
            success: function (result) {
                toggledArticles.push(Id);
                if (result != null) {
                    if (result == "No") {
                        control.find(">tbody>tr").css('display', 'none');
                        control.closest("tr.draggable-item").find(".toggle-article").css('display', 'none');
                    }
                    else {

                        $(".loader10").hide();
                        //for file deletion,lock the article already in approval cycle of file deletion window 
                        var fileExist = false;
                        if (result.IsOnFileDeletion == true) {
                            var tempBody = control.find(">tbody").clone();
                            tempBody.html(result.DocumentData);
                            if (tempBody.find('.filetext[onclick*="' + $("#DeleteFileId").val() + '"]').length > 0 ||
                                tempBody.find('.fileresource[onclick*="' + $("#DeleteFileId").val() + '"]').length > 0
                            )
                                fileExist = true;
                            else fileExist = false;
                        }
                        control.find(">tbody>tr").remove();

                        if (isdcrl == false || isdcrl == "False") {
                            control.find("*[contenteditable]").attr("contenteditable", false);
                        }
                        if (Docid == result.OnApprovecycleFromDocument) {
                            control.find("*[contenteditable]").attr("contenteditable", true);
                            $("#" + Id).attr("contenteditable", false);
                            $(".subheaderText").parent().parent().attr("contenteditable", false)
                            $(".cautionDiv").parent().attr("contenteditable", false);
                            $(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
                        }

                        if (result.IsDCRLCycle || (result.IsOnFileDeletion == true && !fileExist)) // ISDCRLCycle is true then article is locked
                        {
                            if ((result.PublishingMode == "reviewsubmit" && result.Reviewer.toString().includes(UserId)) || (result.PublishingMode == "approvesubmit" && result.Approver.toString().includes(UserId)) ||
                                (result.PublishingMode == "onreview" && result.ReviewedBy == UserId) || (result.PublishingMode == "onapprove" && result.ApprovedBy == UserId) || (result.PublishingMode == "editordraft" && result.CurrentEditor == UserId)) {
                                SetArticleBody(result.DocumentData, control.find(">tbody"), false, false, true);
                            }
                            else {
                                SetArticleBody(result.DocumentData, control.find(">tbody"), true, false, true);
                            }
                            
                            $("#" + Id).attr("contenteditable", false);
                            $(".subheaderText").parent().parent().attr("contenteditable", false)
                            $(".cautionDiv").parent().attr("contenteditable", false);
                            $(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
                            $(".article-table").sortable({
                                axis: "y",
                                placeholder: "ui-state-highlight",
                                items: "tr:not(.article-table table tr)",
                                handle: '.drag-template',
                                receive: function (e, ui) {
                                    ui.helper.removeAttr('style');
                                },
                                start: function (e, ui) {
                                    ui.placeholder.height(ui.helper.outerHeight());

                                },


                            });

                        }
                        else { // ISDCRLCycle is false then article can edit

                            //if (Docid == result.OnApprovecycleFromDocument)
                            //{
                            //    SetArticleBody(result.DocumentData, control.find(">tbody"), false, false,false);
                            //}
                            //else {
                            //    SetArticleBody(result.DocumentData, control.find(">tbody"), true, true,false);
                            //}

                            //$("#" + Id).attr("contenteditable", false);
                            SetArticleBody(result.DocumentData, control.find(">tbody"), false, true, true);
                            $(".subheaderText").parent().parent().attr("contenteditable", false);
                            $(".cautionDiv").parent().attr("contenteditable", false);
                            $(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
                            $(".article-table").sortable({
                                axis: "y",
                                placeholder: "ui-state-highlight",
                                items: "tr:not(.article-table table tr)",
                                handle: '.drag-template',
                                receive: function (e, ui) {
                                    ui.helper.removeAttr('style');
                                },
                                start: function (e, ui) {
                                    ui.placeholder.height(ui.helper.outerHeight());

                                },


                            });
                        }

                        //Lock Archive Category article disabled
                        if ((result.IsOnFileDeletion == true) && (result.IsActive == false) && (result.Isvisible == false)) // I article is locked
                        {
                            SetArticleBodyArchived(result.DocumentData, control.find(">tbody"), true, false, true);
                            $("#" + Id).attr("contenteditable", false);
                            $(".subheaderText").parent().parent().attr("contenteditable", false)
                            $(".cautionDiv").parent().attr("contenteditable", false);
                            $(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
                            $(".article-table").sortable({
                                axis: "y",
                                placeholder: "ui-state-highlight",
                                items: "tr:not(.article-table table tr)",
                                handle: '.drag-template',
                                receive: function (e, ui) {
                                    ui.helper.removeAttr('style');
                                },
                                start: function (e, ui) {
                                    ui.placeholder.height(ui.helper.outerHeight());

                                },


                            });

                        }
                        ////////  //Lock Archive Category article disabled


                        //////////Lock article's companyid not ame as of user comapnyid




                        //////////END:Lock article's companyid not ame as of user comapnyid


                        if (!isfileDelete)
                            ToggleExpand(control.closest("tr.draggable-item"), result.ArticleName);
                        ArticleExpand(control.closest("tr.draggable-item"))
                        control.find("#header").hide();
                        control.find("#footerTemplate").hide();

                        setTimeout(function () {
                            if ($("#hdnAppEnv").val() == "O") {

                                RefreshResize();
                                if (isfileDelete) {
                                    $.each(RemoveFileList, function (i, fileId) {
                                        control.find(">tbody").find('.filetext[onclick*="' + fileId + '"]').each(function () {
                                            $(this).attr("data-del-Order", "DelFile_" + fileDelOrder);
                                            $(this).attr("sel-Order", fileDelOrder);
                                            $(this).addClass("highlite-file remove_File");
                                            $(this).attr("id", fileId);
                                            $(this).attr("tabindex", fileId);
                                            $(this).attr("title", "Click to remove");
                                            $(this).removeAttr("onclick");
                                            $(this).off("click");
                                            $(this).on("click", function () {
                                                $(this).remove();
                                            });
                                            fileDelOrder++;
                                        });
                                        control.find(">tbody").find('.fileresource[onclick*="' + fileId + '"]').each(function () {
                                            $(this).attr("data-del-Order", "DelFile_" + fileDelOrder);
                                            $(this).attr("sel-Order", fileDelOrder);
                                            $(this).addClass("highlite-file-control remove_File");
                                            $(this).attr("tabindex", fileId);
                                            $(this).attr("id", fileId);
                                            $(this).closest("td").closest(".draggable-item").addClass("highlite-file-control-table");
                                            $(this).removeAttr("onclick");
                                            $(this).off("click");
                                            fileDelOrder++;
                                        });

                                    });

                                    // if ($("[data-del-Order*=DelFile_").eq(0).length) {
                                    //     var fileOrder = $("[data-del-Order*=DelFile_").eq(0).attr("data-del-Order");
                                    //} else {
                                    //    $("#tableWrapper").scrollTop(0);
                                    //    $("#tableWrapper").animate({
                                    //        scrollTop: $("#" + Id).offset().top - 300
                                    //    }, 0);
                                    //}
                                }
                            }
                        }, 500);



                        setTimeout(function () {
                            //if (viewMode != "view")
                            //{
                            //    RefreshResizeControl(control);
                            //}

                            control.find(".two-column .imgresource").resizable();
                            control.find(".two-column .imgresource").resizable('destroy');
                            if ($("#pageSize").val() == "A4") {
                                $("#tableDragger").find(".ul-box").removeClass("Procedure");
                                $("#tableDragger").find(".ol-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-alpha-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-hyp-box").removeClass("Procedure");
                                $("#tableDragger").find(".ul-chk-box").removeClass("Procedure");

                                $("#tableDragger").find(".ul-box").addClass("guidlisce");
                                $("#tableDragger").find(".ol-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-alpha-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-hyp-box").addClass("guidlisce");
                                $("#tableDragger").find(".ul-chk-box").addClass("guidlisce");
                            }
                            else if ($("#pageSize").val() == "A5") {
                                $("#tableDragger").find(".ul-box").addClass("Procedure");
                                $("#tableDragger").find(".ol-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-alpha-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-hyp-box").addClass("Procedure");
                                $("#tableDragger").find(".ul-chk-box").addClass("Procedure");

                                $("#tableDragger").find(".ul-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ol-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-alpha-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-hyp-box").removeClass("guidlisce");
                                $("#tableDragger").find(".ul-chk-box").removeClass("guidlisce");
                            }

                            //if (WikiApp.commonFunc != undefined)
                            //    WikiApp.commonFunc._SetBodyFont();
                            docSetBodyFont();
                        });
                    }
                    if (clientName === "MMS" || clientName === "MOL")
                        SetDocHeaderAfterArticleDrag(Id, result);
                }
                else {
                    if (!isfileDelete)
                        ToggleExpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                }
            },
            error: function () {

            }
        });
    }
    catch (e) {
        console.log("ArticleData retrivel error " + e);
    }

}

function SetArticleBody(documentData, tbody, islock = false, isContentEditable = false, IsFlowView = true) {
    debugger
    var toggleIcon = "<span class=\"toggle-article\"><i class=\"fa fa-caret-right\"></i></span>";
    var Rootclonetbody = tbody.clone();

    if (documentData !== null) {
        Rootclonetbody.html(documentData.replace("<p><br></p>", "").replace("<p class=\"\"><br></p>", "").replace(/rpgrid-temp-tr/g, "rpgrid"));
    }
    //var tempcontent = tbody.html(documentData).clone();
    if (Rootclonetbody.find(".comment-display").next().length > 0) {
        if (Rootclonetbody.find(".comment-display").next()[0].nodeName == "SCRIPT") {
            Rootclonetbody.find(".comment-display").each(function () {

                $(this).next().html("");
            })
        }
    }

    Rootclonetbody.find(".comment-display").removeAttr("onclick");
    Rootclonetbody.find('.comment-display').addClass("commenttiphide")
    Rootclonetbody.find(".commentbox-Done").hide();
    Rootclonetbody.find(".commentbox-close").hide();
    Rootclonetbody.find(".headerTemplate").hide();
    Rootclonetbody.find(".footerTemplate").hide();

    tbody.html($(Rootclonetbody).html())
    $(Rootclonetbody).html("");

    //--------Applicable For Flex LNG Image url Modification --------------

    //$(tbody).find(".imgresource").each(function (e) {

    //    var Srclink = $(this).attr('src');
    //    if (Srclink != null && Srclink != undefined)
    //    {
    //        var _splitVal = Srclink.split('/');
    //    }

    //    $(this).attr('src', "/WikiJVPALApp/" + _splitVal[2] + "/" + _splitVal[3] + "/" + _splitVal[4]);
    //})


    //--------------END -------------------------------------------------------
    tbody.closest("tr.draggable-item").find("td:first").css("position", "relative");

    tbody.closest(".article-table").addClass("NewDataArt");
    tbody.closest(".article-table").attr("data-visible", true);

    $(tbody).find(">tr").each(function (e) {

        if ($(this).hasClass("footerTemplate") == false && $(this).find("*[contenteditable]").length == 0) {
            $(this).attr("contenteditable", true);
        }

    })
    $(tbody).find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension
    if (IsFlowView == true) {


        if (isContentEditable == true) {
            if ($(tbody).find(">tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $(tbody).find(">tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartEditPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }

                });

            }
        }
        else {


            if ($(tbody).find(">tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $(tbody).find(">tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartViewPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }

                });

            }
        }
    }
    else {
        if ($(tbody).find(">tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
        {
            $(tbody).find(">tr.flowchartDragger").each(function () {
                var TrID = $(this).find(".flow-chart-editor").attr("id");
                if (TrID != "") {
                    // initalize the GoJs Diagram objectas globaly.
                    _FlowchartEditPanel(TrID);
                    window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                }

            });

        }
    }

    if (islock == true) {


        tbody.closest(".article-table").addClass("islockarticle");
        tbody.find(".drg-rmv").html("");
        tbody.find(".drg-rmv-settings").html("");
        tbody.find(".drg-rmv-toc").html("");
        tbody.find(".drg-rmv-settings-toc").html("");
        tbody.find(".drg-rmv").hide();
        tbody.find(".drg-rmv-settings").hide();
        tbody.find(".drg-rmv-toc").hide();
        tbody.find(".drg-rmv-settings-toc").hide();
        tbody.find(".drg-rmv-copy").hide();
        tbody.find(".drg-rmv-settings-copy").hide();
        tbody.find(".drg-rmv-toc-copy").hide();
        tbody.find(".drg-rmv-settings-toc-copy").hide();
        tbody.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
        tbody.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
        tbody.find(".dt-img").hide();
        tbody.find(".templateSettings").hide();
        tbody.find(".ui-resizable-handle").hide();
        tbody.find("*[contenteditable]").attr("contenteditable", false);
        tbody.find(".subheaderText").parent().parent().attr("contenteditable", false)
        tbody.find(".cautionDiv").parent().attr("contenteditable", false);
        tbody.find(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);

        //$(".islockarticle").hover(function (event) {
        //    //
        //    $(".locartmessage").css({ top: (event.clientY - 20) }).show();
        //}, function () {
        //    $(".locartmessage").css({ top: "0" }).show();
        //    $(".locartmessage").hide();
        //});
    }
    else {
        tbody.closest(".article-table").removeClass("islockarticle")
    }
    if (isContentEditable == true) {

        tbody.find("*[contenteditable]").attr("contenteditable", true);
        tbody.find(".subheaderText").parent().parent().attr("contenteditable", false);
        tbody.find(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
        $(".cautionDiv").parent().attr("contenteditable", false);


    }

    //$(".article-table>tbody>tr:last").after($(".article-table>tbody>.headerTemplate"));
    if (tbody.closest(".article-table").closest("tr.draggable-item").find("td:first").find(".toggle-article").length == 0)
        tbody.closest(".article-table").closest("tr.draggable-item").find("td:first").prepend(toggleIcon);
    if (!tbody.closest("tr.draggable-item").find(".toggle-article").hasClass('opentoggle')) {
        tbody.closest("tr.draggable-item").find(".toggle-article").toggleClass('opentoggle');
    }
    if (tbody.closest(".article-table").find(".SubHeader1").length > 0) {
        tbody.closest(".article-table").find(".SubHeader1").each(function () {
            if ($(this).find("span").html() === '') {
                if ($(this).parent().children('div').length != 0) {
                    let divcontent = $(this).parent().children('div')[0].outerHTML
                    $(this).parent().children('div')[0].remove();
                    if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                        $(this).parent().children('p')[1].remove();
                    $(this).find("span").append(divcontent);
                }
            }
        });
    }

}
////////archive

function SetArticleBodyArchived(documentData, tbody, islock = false, isContentEditable = false, IsFlowView = true) {

    var toggleIcon = "<span class=\"toggle-article\"><i class=\"fa fa-caret-right\"></i></span>";
    var Rootclonetbody = tbody.clone();
    Rootclonetbody.html(documentData.replace(/rpgrid-temp-tr/g, "rpgrid"));

    //var tempcontent = tbody.html(documentData).clone();
    if (Rootclonetbody.find(".comment-display").next().length > 0) {
        if (Rootclonetbody.find(".comment-display").next()[0].nodeName == "SCRIPT") {
            Rootclonetbody.find(".comment-display").each(function () {

                $(this).next().html("");
            })
        }
    }

    Rootclonetbody.find(".comment-display").removeAttr("onclick");
    Rootclonetbody.find('.comment-display').addClass("commenttiphide")
    Rootclonetbody.find(".commentbox-Done").hide();
    Rootclonetbody.find(".commentbox-close").hide();
    Rootclonetbody.find(".headerTemplate").hide();
    Rootclonetbody.find(".footerTemplate").hide();

    tbody.html($(Rootclonetbody).html())
    $(Rootclonetbody).html("");

    //--------Applicable For Flex LNG Image url Modification --------------

    //$(tbody).find(".imgresource").each(function (e) {

    //    var Srclink = $(this).attr('src');
    //    if (Srclink != null && Srclink != undefined)
    //    {
    //        var _splitVal = Srclink.split('/');
    //    }

    //    $(this).attr('src', "/WikiJVPALApp/" + _splitVal[2] + "/" + _splitVal[3] + "/" + _splitVal[4]);
    //})


    //--------------END -------------------------------------------------------
    tbody.closest("tr.draggable-item").find("td:first").css("position", "relative");

    tbody.closest(".article-table").addClass("NewDataArt");
    tbody.closest(".article-table").attr("data-visible", true);

    $(tbody).find(">tr").each(function (e) {

        if ($(this).hasClass("footerTemplate") == false && $(this).find("*[contenteditable]").length == 0) {
            $(this).attr("contenteditable", true);
        }

    })
    $(tbody).find('grammarly-btn').remove() // Remove Gramamer tab from browser Extension
    if (IsFlowView == true) {
        if ($(tbody).find(">tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
        {
            $(tbody).find(">tr.flowchartDragger").each(function () {
                var TrID = $(this).find(".flow-chart-editor").attr("id");
                $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                if (TrID != "") {
                    // initalize the GoJs Diagram objectas globaly.
                    _FlowchartViewPanel(TrID);
                    window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                }

            });

        }
    }
    else {
        if ($(tbody).find(">tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
        {
            $(tbody).find(">tr.flowchartDragger").each(function () {
                var TrID = $(this).find(".flow-chart-editor").attr("id");
                if (TrID != "") {
                    // initalize the GoJs Diagram objectas globaly.
                    _FlowchartEditPanel(TrID);
                    window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                }

            });

        }
    }

    if (islock == true) {



        tbody.closest(".article-table").addClass("islockarticleArchive");

        tbody.find(".drg-rmv").html("");
        tbody.find(".drg-rmv-settings").html("");
        tbody.find(".drg-rmv-toc").html("");
        tbody.find(".drg-rmv-settings-toc").html("");
        tbody.find(".drg-rmv").hide();
        tbody.find(".drg-rmv-settings").hide();
        tbody.find(".drg-rmv-toc").hide();
        tbody.find(".drg-rmv-settings-toc").hide();
        tbody.find(".drg-rmv-copy").hide();
        tbody.find(".drg-rmv-settings-copy").hide();
        tbody.find(".drg-rmv-toc-copy").hide();
        tbody.find(".drg-rmv-settings-toc-copy").hide();
        tbody.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
        tbody.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
        tbody.find(".dt-img").hide();
        tbody.find(".templateSettings").hide();
        tbody.find(".ui-resizable-handle").hide();
        tbody.find("*[contenteditable]").attr("contenteditable", false);
        tbody.find(".subheaderText").parent().parent().attr("contenteditable", false)
        tbody.find(".cautionDiv").parent().attr("contenteditable", false);
        tbody.find(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);

        //$(".islockarticle").hover(function (event) {
        //    //
        //    $(".locartmessage").css({ top: (event.clientY - 20) }).show();
        //}, function () {
        //    $(".locartmessage").css({ top: "0" }).show();
        //    $(".locartmessage").hide();
        //});
    }
    else {
        tbody.closest(".article-table").removeClass("islockarticle")
    }
    if (isContentEditable == true) {

        tbody.find("*[contenteditable]").attr("contenteditable", true);
        tbody.find(".subheaderText").parent().parent().attr("contenteditable", false);
        tbody.find(".checklist .checklist-td").find("div[contenteditable='true']").attr("contenteditable", false);
        $(".cautionDiv").parent().attr("contenteditable", false);


    }

    //$(".article-table>tbody>tr:last").after($(".article-table>tbody>.headerTemplate"));
    if (tbody.closest(".article-table").closest("tr.draggable-item").find("td:first").find(".toggle-article").length == 0)
        tbody.closest(".article-table").closest("tr.draggable-item").find("td:first").prepend(toggleIcon);
    if (!tbody.closest("tr.draggable-item").find(".toggle-article").hasClass('opentoggle')) {
        tbody.closest("tr.draggable-item").find(".toggle-article").toggleClass('opentoggle');
    }
}
///////Archive

function generateTOC() {
    var tocContent = "";
    var tocRow =
        '<tr><td onclick= "gotoElement(\'@atag\')" NavigationId= "@NavId" class="toc-text-td" style="@tab background:#fff;">' +
        '<span class="toc-no"></span><span class="TocTitle" toc-Title="@toc-link" toc-tab="@toclevel">@TOCTitle</span>' +
        '</td >' +
        '<td onclick="gotoElement(\'@atag1\')" NavigationId="@NavId1" class="toc-page-td">@TOCPageNo</td></tr> ';

    $(".toc-table>tbody").html("");
    console.time("TOC-1")
    $("#tableDragger tr[toc-title]").each(
        function (i) {
            console.time("TOC-1-" + i);
            var tocCurrentLevel = $(this).attr("toc-level");
            var dValue = $(this).attr("data-value").trim();
            if (tocCurrentLevel == "1" || tocCurrentLevel == undefined) {
                tocContent = tocContent + tocRow.replace("@TOCTitle", $(this).attr("toc-title")).replace("@tab", "padding:0 7px;").replace("@atag", dValue).replace("@NavId", dValue).replace("@toclevel", tocCurrentLevel).replace("@toc-link", $(this).attr("toc-title")).
                    replace("@TOCPageNo", $(this).attr("toc-PageNo")).replace("@atag1", dValue).replace("@NavId1", dValue);

                //$(".toc-table>tbody").append(tocContent);
                // $(".toc-table>tbody>tr:last").addClass("parent");
            }
            else if (tocCurrentLevel == "2") {
                tocContent = tocContent + tocRow.replace("@TOCTitle", $(this).attr("toc-title")).replace("@tab", "padding:0 20px;").replace("@atag", dValue).replace("@NavId", dValue).replace("@toclevel", tocCurrentLevel).replace("@toc-link", $(this).attr("toc-title")).
                    replace("@TOCPageNo", $(this).attr("toc-PageNo")).replace("@atag1", dValue).replace("@NavId1", dValue);
                //$(".toc-table>tbody").append(tocContent);
                //$(".toc-table>tbody>tr:last").addClass("first-level");
            }
            else if (tocCurrentLevel == "3") {
                tocContent = tocContent + tocRow.replace("@TOCTitle", $(this).attr("toc-title")).replace("@tab", "padding:0 30px;").replace("@atag", dValue).replace("@NavId", dValue).replace("@toclevel", tocCurrentLevel).replace("@toc-link", $(this).attr("toc-title")).
                    replace("@TOCPageNo", $(this).attr("toc-PageNo")).replace("@atag1", dValue).replace("@NavId1", dValue);
                //$(".toc-table>tbody").append(tocContent);
                // $(".toc-table>tbody>tr:last").addClass("second-level");
            }
            else if (tocCurrentLevel == "4") {
                tocContent = tocContent + tocRow.replace("@TOCTitle", $(this).attr("toc-title")).replace("@tab", "padding:0 40px;").replace("@atag", dValue).replace("@NavId", dValue).replace("@toclevel", tocCurrentLevel).replace("@toc-link", $(this).attr("toc-title")).
                    replace("@TOCPageNo", $(this).attr("toc-PageNo")).replace("@atag1", dValue).replace("@NavId1", dValue);
                //$(".toc-table>tbody").append(tocContent);
                //$(".toc-table>tbody>tr:last").addClass("third-level");
            }

            console.timeEnd("TOC-1-" + i);
        });
    if (tocContent != "") {
        $(".toc-table>tbody").append(tocContent);
    }
    console.timeEnd("TOC-1")
    console.time("TOC-2")
    var rootCount = 1;
    var level2 = 1;
    var level3 = 1;
    var level4 = 1;
    if (_tocPrefix != "No Prefix" || _tocPrefixLevelTwo != "No Prefix" || _tocPrefixLevelThree != "No Prefix" || _tocPrefixLevelFour != "No Prefix") {
        $(".toc-table>tbody>tr").each(function () {
            var level = $(this).find(".TocTitle").attr("toc-tab");
            if (level == 1) {

                TOCPrefix(_tocPrefix, $(this), rootCount);
                rootCount++;
                level2 = 1;
                level3 = 1;
                level4 = 1;

            }
            if (level == 2) {

                TOCPrefix(_tocPrefixLevelTwo, $(this), level2);
                level2++;
                level3 = 1;
                level4 = 1;
            }
            if (level == 3) {

                TOCPrefix(_tocPrefixLevelThree, $(this), level3);
                level3++;
                level2 = 1;
                level4 = 1;
            }
            if (level == 4) {

                TOCPrefix(_tocPrefixLevelFour, $(this), level4);
                level4++;
                level2 = 1;
                level3 = 1;
            }
        });
    }

    console.timeEnd("TOC-2")
    console.time("TOC-3")
    if ($("#tableDragger tr[toc-title]").length == 0) {
        $(".toc-table").closest(".draggable-item").closest("tr").remove();
        $(".toc-table").html(tocContent);
    }

    console.timeEnd("TOC-3")
    $(".toc").closest(".draggable-item").attr("height", $(".toc").closest(".draggable-item").height());

}

function TOCPrefix(tocPrefix, control, count) {
    switch (tocPrefix) {
        case "Numbers": {
            control.find(".toc-no").text(count);
            control.find(".TocTitle").text(control.find(".TocTitle").text());
            break;
        }
        case "Roman Letters": {
            control.find(".toc-no").text(romanize(count));
            control.find(".TocTitle").text(control.find(".TocTitle").text());
            break;
        }
        case "Alphabets": {
            control.find(".toc-no").text(String.fromCharCode(count + 96));
            control.find(".TocTitle").text(control.find(".TocTitle").text());
            break;
        }

        case "No Prefix": {
            control.find(".TocTitle").text(control.find(".TocTitle").text());
            break;
        }
    }

}
function uniqueObjectId() {
    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);
    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {
        return (Math.random() * 16 | 0).toString(16);
    }).toLowerCase();
}


function romanize(num) {
    if (!+num)
        return false;
    var digits = String(+num).split(""),
        key = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM",
            "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC",
            "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"],
        roman = "",
        i = 3;
    while (i--)
        roman = (key[+digits.pop() + (i * 10)] || "") + roman;
    return Array(+digits.join("") + 1).join("M") + roman;
}

function ImageConverter() {
    QDMS.QuickTour.resetQuickTour();
    $(".loader10").show();
    $(".categoryToolbarTitle").text('');
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr('id', '');
    var url = $("#hfdUrlPath").val() + '/ImageConverter/ConvertImage';
    if (!$('body').hasClass('sidebar-collapse')) {
        $('body').addClass('sidebar-collapse')
    }
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#categoryMenu").show();
            $("#containerDcrl_link").hide();
            $("#contentWindow").html(result);
            $(".loader10").hide();
        }

    });
}



function AutomateNumbering(control, key) {

    $(control).parents('tr').first().find("p").each(function () {
        if ($(this).text().trim() == "") {
            $(this)[0].innerHTML = "";
            $(this).append('</br>');
        }
        var theTags = $(this).children();
        $.each(theTags, function () {
            if ($(this).text().trim() == "") {
                $(this)[0].innerHTML = "";
                $(this).replaceWith('</br>');
            }
        });
    });

    if (control.classList.length > 0 && control.classList[0] != 'ol-box' && control.classList[0] != 'ul-alpha-box') {
        control = $(control).find('ol')[0] == null ? $(control).find('ul')[0] : $(control).find('ol')[0];
    }

    //two columnn
    liAlphaTCElement = $(control).parents('.two-column').find('li.ul-box2');
    liDigTCElement = $(control).parents('.two-column').find('li.ol-box2');

    elcount = 1;
    $.each(liAlphaTCElement, function (i) {
        if ($(liAlphaTCElement[i]).prevAll('li.ul-box2').length > 0) {
            if ($(liAlphaTCElement[i]).parent().is('ul-alpha-box')) {
                elcount = $(liAlphaTCElement[i]).prevAll('li').not('.ol-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                elcount = $(liAlphaTCElement[i]).prevAll('li.ul-box2').length + 1;
            }
        }
        else
            elcount = 1;

        $(liAlphaTCElement[i]).attr('seq', elcount);
    });

    $.each(liDigTCElement, function (i) {
        if ($(liDigTCElement[i]).prevAll('li.ol-box2').length > 0) {
            if ($(liDigTCElement[i]).parent().is('ol-box')) {
                elcount = $(liDigTCElement[i]).prevAll('li').not('.ul-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                elcount = $(liDigTCElement[i]).prevAll('li.ol-box2').length + 1;
            }
        }
        else
            elcount = 1;

        $(liDigTCElement[i]).attr('seq', elcount);
    });
    //end

    liAlphaTableElement = $(control).parents('.resizeCol').find('li.ul-box2');
    liDigTableElement = $(control).parents('.resizeCol').find('li.ol-box2');
    lonerTableElement = $(control).parents('.resizeCol').find('li:not([class])');

    $.each(lonerTableElement, function (i) {
        if (lonerTableElement.parent().hasClass('ol-box')) {
            lonerTableElement.addClass('ol-box2');
            liDigTableElement.add(lonerTableElement);
        }
        else if (lonerTableElement.parent().hasClass('ul-alpha-box')) {
            lonerTableElement.addClass('ul-box2');
            liAlphaTableElement.add(lonerTableElement);
        }
        else if (lonerTableElement.parent().hasClass('ul-box')) {
            lonerTableElement.addClass('ul-box');
            liAlphaTableElement.add(lonerTableElement);
        }
        else if (lonerTableElement.parent().hasClass('ul-hyp-box')) {
            lonerTableElement.addClass('ul-hyp-box');
            liAlphaTableElement.add(lonerTableElement);
        }
        else if (lonerTableElement.parent().hasClass('ul-chk-box')) {
            lonerTableElement.addClass('ul-chk-box');
            liAlphaTableElement.add(lonerTableElement);
        }
    });

    elcount = 1;
    $.each(liAlphaTableElement, function (i) {
        if ($(liAlphaTableElement[i]).prevAll('li.ul-box2').length > 0) {
            if ($(liAlphaTableElement[i]).parent().is('ul-alpha-box')) {
                elcount = $(liAlphaTableElement[i]).prevAll('li').not('.ol-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                elcount = $(liAlphaTableElement[i]).prevAll('li.ul-box2').length + 1;
            }
        }
        else
            elcount = 1;

        $(liAlphaTableElement[i]).attr('seq', elcount);
    });

    $.each(liDigTableElement, function (i) {
        if ($(liDigTableElement[i]).prevAll('li.ol-box2').length > 0) {
            if ($(liDigTableElement[i]).parent().is('ol-box')) {
                elcount = $(liDigTableElement[i]).prevAll('li').not('.ul-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                elcount = $(liDigTableElement[i]).prevAll('li.ol-box2').length + 1;
            }
        }
        else
            elcount = 1;

        $(liDigTableElement[i]).attr('seq', elcount);
    });

    if ($(control).parents('td.resizeCol').length) {

        var startVal = 0;

        if (!$(control).is('ul,ol')) {
            if ($(control).parents('ol,ul').length > 0) {
                control = $(control).parents('ol,ul').first();
            }
            else if ($(control).find('ol,ul').length > 0) {
                control = $(control).find('ol,ul').first();
            }
        }


        className = $(control).prop('className').split(' ')[0];
        if (className == 'ol-box') {
            olList = $(control).parents('td.resizeCol').first().find('.ol-box:not(.sub-disc-list)');

            $.each(olList, function (i) {
                if ($(olList[i]).hasClass('reset'))
                    startVal = 0;

                $(olList[i]).css("counter-increment", "listN " + startVal);
                startVal += $(olList[i]).children('li:not(.ul-box,.ul-box2,.ul-hyp-box,.ul-chk-box)').length;

            });
        }
        else if (className == 'ul-alpha-box') {
            ulList = $(control).parents('td.resizeCol').first().find('.ul-alpha-box:not(.sub-disc-list)');

            $.each(ulList, function (i) {
                if ($(ulList[i]).hasClass('reset'))
                    startVal = 0;
                $(ulList[i]).css("counter-increment", "listAN " + startVal);
                startVal += $(ulList[i]).children('li:not(.ul-box,.ol-box2,.ul-hyp-box,.ul-chk-box)').length;
            });
        }

    }

    liAlphaElements = $(control).parents('.textDragger').find('li.ul-box2');
    liDigElements = $(control).parents('.textDragger').find('li.ol-box2');

    var loner = $(control).parents('.textDragger,.two-column').find('li:not([class])');

    $.each(loner, function (i) {
        var seq = 0;
        if (loner.prevAll('li').first().attr('class') != null) {
            if (loner.prevAll('li').first().attr('class').includes("ol-box2")) {
                seq = parseInt(loner.prevAll('li').first().attr('seq')) + 1;
                loner.addClass('ol-box2');
                loner.attr('seq', seq);
                liDigElements.add(loner);
            }
            else if (loner.prevAll('li').first().attr('class').includes("ul-box2")) {
                seq = parseInt(loner.prevAll('li').first().attr('seq')) + 1;
                loner.addClass('ul-box2');
                loner.attr('seq', seq);
                liAlphaElements.add(loner);
            }
            else if (loner.prevAll('li').first().attr('class').includes("ul-box")) {
                loner.addClass('ul-box');
                liAlphaElements.add(loner);
            }
            else if (loner.prevAll('li').first().attr('class').includes("ul-hyp-box")) {
                loner.addClass('ul-hyp-box');
                liAlphaElements.add(loner);
            }
            else if (loner.prevAll('li').first().attr('class').includes("ul-chk-box")) {
                loner.addClass('ul-chk-box');
                liAlphaElements.add(loner);
            }
        }
    });

    lcount = 1;
    $.each(liAlphaElements, function (i) {
        if ($(liAlphaElements[i]).prevAll('li.ul-box2').length > 0) {
            if ($(liAlphaElements[i]).parent().is('.ul-alpha-box')) {
                lcount = $(liAlphaElements[i]).prevAll('li').not('.ol-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                lcount = $(liAlphaElements[i]).prevAll('li.ul-box2').length + 1;
            }
        }
        else
            lcount = 1;

        $(liAlphaElements[i]).attr('seq', lcount);

    });
    $.each(liDigElements, function (i) {
        if ($(liDigElements[i]).prevAll('li.ol-box2').length > 0) {
            if ($(liDigElements[i]).parent().is('.ol-box')) {
                lcount = $(liDigElements[i]).prevAll('li').not('.ul-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                lcount = $(liDigElements[i]).prevAll('li.ol-box2').length + 1;
            }
        }
        else
            lcount = 1;

        $(liDigElements[i]).attr('seq', lcount);

    });

    var startVal = 0;
    var start = 0;
    var liCount = 0;

    if ($(control).closest('.article-table').is('table') && !($(control).parents('#resizeTable').length)) {
        olList = $(control).closest('.article-table').find('.textDragger').find('ol.ol-box:not(.sub-disc-list)');
    }
    else {
        olList = $('#tableDragger').children('.textDragger').find('ol.ol-box:not(.sub-disc-list)');
    }    

    $.each(olList, function (i) {
        if ($(olList[i]).hasClass('reset'))
            startVal = 0;
        else if ($(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ol-box2').length == 0) {
            theIndex = null;
            newList = [];
            resetList = [];
            totList = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
            resList = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box.reset,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
            for (let i = 0; i < $(resList).length; i++) {
                if ($(resList[i]).children('li.ol-box2').length) {
                    resetList.push($(resList[i]).attr("id"));
                }
            }
            if (resetList.length) {
                totList.forEach(function (item, index) {
                    if (resetList.includes($(item).attr("id"))) {
                        newList = [];
                        newList.push(item);
                    }
                    else {
                        newList.push(item);
                    }
                });
                liCount = $(newList).find('> li.ol-box2').length;
            }
            else {
                liCount = $(totList).find('> li.ol-box2').length;
            }

            /*var liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;*/
            var start = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().is('ol-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;

            startVal = liCount + start;
        }
        else if ($(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ol-box2').length) {
            theIndex = null;
            newList = [];
            resetList = [];
            totList = $(olList[i]).prevAll('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
            resList = $(olList[i]).prevAll('ul.ul-alpha-box,ol.ol-box.reset,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
            for (let i = 0; i < $(resList).length; i++) {
                if ($(resList[i]).children('li.ol-box2').length) {
                    resetList.push($(resList[i]).attr("id"));
                }
            }
            if (resetList.length) {
                totList.forEach(function (item, index) {
                    if (resetList.includes($(item).attr("id"))) {
                        newList = [];
                        newList.push(item);
                    }
                    else {
                        newList.push(item);
                    }
                });
                liCount = $(newList).find('> li.ol-box2').length;
            }
            else {
                liCount = $(totList).find('> li.ol-box2').length;
            }

            /*var liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;*/
            //var liCount = $(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('>' + 'li.ol-box2').length;
            /*var start = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().is('ol-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;*/

            var start = $(olList[i]).prevAll('ol.ol-box:not(".sub-disc-list")').length ? parseInt($(olList[i]).prevAll('ol.ol-box:not(".sub-disc-list")').last().css('counter-increment').split(' ')[1]) : 0;

            startVal = liCount + start;
        }
        $(olList[i]).css("counter-increment", "listN " + startVal);
        startVal += $(olList[i]).children('li:not(.ul-box,.ul-box2,.ul-hyp-box,.ul-chk-box)').length;
    });

    startVal = 0;
    start = 0;
    liCount = 0;
    if ($(control).closest('.article-table').is('table') && !($(control).parents('#resizeTable').length)) {
        ulList = $(control).closest('.article-table').find('.textDragger').find('ul.ul-alpha-box:not(.sub-disc-list)')
    }
    else {
        ulList = $('#tableDragger').children('.textDragger').find('ul.ul-alpha-box:not(.sub-disc-list)');
    }

    $.each(ulList, function (i) {
        if ($(ulList[i]).hasClass('reset'))
            startVal = 0;
        else if ($(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ul-box2').length == 0) {

            theIndex = null;
            newList = [];
            resetList = [];
            totList = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
            resList = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box.reset,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
            for (let i = 0; i < $(resList).length; i++) {
                if ($(resList[i]).children('li.ul-box2').length) {
                    resetList.push($(resList[i]).attr("id"));
                }
            }
            if (resetList.length) {
                totList.forEach(function (item, index) {
                    if (resetList.includes($(item).attr("id"))) {
                        newList = [];
                        newList.push(item);
                    }
                    else {
                        newList.push(item);
                    }
                });
                liCount = $(newList).find('> li.ul-box2').length;
            }
            else {
                liCount = $(totList).find('> li.ul-box2').length;
            }

            //var liCount = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ul-box2').length;            
            start = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().is('ul-alpha-box') ? parseInt($(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;
            startVal = liCount + start;
        }
        else if ($(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ul-box2').length) {
            theIndex = null;
            newList = [];
            resetList = [];
            totList = $(ulList[i]).prevAll('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
            resList = $(ulList[i]).prevAll('ul.ul-alpha-box.reset,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
            for (let i = 0; i < $(resList).length; i++) {
                if ($(resList[i]).children('li.ul-box2').length) {
                    resetList.push($(resList[i]).attr("id"));
                }
            }
            if (resetList.length) {
                totList.forEach(function (item, index) {
                    if (resetList.includes($(item).attr("id"))) {
                        newList = [];
                        newList.push(item);
                    }
                    else {
                        newList.push(item);
                    }
                });
                liCount = $(newList).find('> li.ul-box2').length;
            }
            else {
                liCount = $(totList).find('> li.ul-box2').length;
            }

            /*var liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;*/
            /* var liCount = $(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('>' + 'li.ul-box2').length;*/
            /* var start = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().is('ul-alpha-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;*/

            start = $(ulList[i]).prevAll('ul.ul-alpha-box:not(".sub-disc-list")').length ? parseInt($(ulList[i]).prevAll('ul.ul-alpha-box:not(".sub-disc-list")').last().css('counter-increment').split(' ')[1]) : 0;

            startVal = liCount + start;
        }
        $(ulList[i]).css("counter-increment", "listAN " + startVal);
        startVal += $(ulList[i]).children('li:not(.ul-box,.ol-box2,.ul-hyp-box)').length;
    });

    if ($(control).parents('.list-numbering-box').length) {
        $(control).parents('.list-numbering-box').remove();
    }
}


function CountinueNumbering(control) {
    debugger;
    var prevList = '';
    var list = $(control).parent().closest(".list-numbering-box").next();
    var className = $(list).prop('className').split(' ')[0];

    $(control).parents('tr').first().find("p").each(function () {
        if ($(this).text().trim() == "") {
            $(this)[0].innerHTML = "";
            $(this).append('</br>');
        }
        var theTags = $(this).children();
        $.each(theTags, function () {
            if ($(this).text().trim() == "") {
                $(this)[0].innerHTML = "";
                $(this).replaceWith('</br>');
            }
        });
    });


    var liCount = 0;
    var start = 0;

    if ($(list).parents('td.resizeCol').length) {

        var startVal = 0;

        if (className == 'ol-box') {
            olList = $(list).parents('td.resizeCol').first().find('.ol-box:not(.sub-disc-list)');

            $.each(olList, function (i) {
                if ($(olList[i]).hasClass('reset'))
                    startVal = 0;

                $(olList[i]).css("counter-increment", "listN " + startVal);
                $(olList[i]).attr("start", startVal+1);
                startVal += $(olList[i]).children('li:not(.ul-box,.ul-box2,.ul-hyp-box,.ul-chk-box)').length;

            });
        }
        else if (className == 'ul-alpha-box') {
            ulList = $(list).parents('td.resizeCol').first().find('.ul-alpha-box:not(.sub-disc-list)');

            $.each(ulList, function (i) {
                if ($(ulList[i]).hasClass('reset'))
                    startVal = 0;
                $(ulList[i]).css("counter-increment", "listAN " + startVal);
                $(ulList[i]).attr("start", startVal + 1);
                startVal += $(ulList[i]).children('li:not(.ul-box,.ol-box2,.ul-hyp-box,.ul-chk-box)').length;
            });
        }

    }
    else {


        if (liCount == 0)
            liCount = $(list).prev().find("." + className + ":first").find(">li").length;

        if (liCount == 0)
            liCount = $(list).prevAll("." + className + ":first").find(">li").length;

        if (liCount == 0)
            liCount = $(list).prevAll().find("." + className).last().find(">li").length;

        if (liCount == 0)
            liCount = $(list).parent().prev().find("." + className + ":first").find(">li").length;

        if (liCount == 0)
            liCount = $(list).parent().prevAll("." + className).first().find(">li").length;

        if (liCount == 0)
            liCount = $(list).prevAll("p").find("." + className).last().find(">li").length;

        if (liCount == 0)
            liCount = $(list).parent().prevAll("." + className + ":first").find(">li").length;

        if (liCount == 0)
            liCount = $(list).parent().prevAll().find("." + className + ":first").find(">li").length;

        if (liCount == 0)
            liCount = $(list).closest("table.draggable-item").closest("tr").prevAll("tr").find("." + className).last().find(">li").length;


        if (start == 0)
            start = $(list).prev().find("." + className + ":first").find(">li").length == 0 ? 0 : parseInt($(list).prev().find("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).prevAll("." + className + ":first").length == 0 ? 0 : parseInt($(list).prevAll("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).prevAll().find("." + className).last().length == 0 ? 0 : parseInt($(list).prevAll().find("." + className).last().css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).parent().prev().find("." + className + ":first").find(">li").length == 0 ? 0 : parseInt($(list).parent().prev().find("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).parent().prevAll("." + className + ":first").length == 0 ? 0 : parseInt($(list).parent().prevAll("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).prevAll("p").find("." + className).last().length == 0 ? 0 : parseInt($(list).prevAll("p").find("." + className).last().css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).parent().prevAll("." + className + ":first").length == 0 ? 0 : parseInt($(list).parent().prevAll("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).parent().prevAll().find("." + className + ":first").length == 0 ? 0 : parseInt($(list).parent().prevAll().find("." + className + ":first").css("counter-increment").split(' ')[1]);

        if (start == 0)
            start = $(list).closest("table.draggable-item").closest("tr").prevAll("tr").find("." + className + ":last").last().length == 0 ? 0 : parseInt($(list).closest("table.draggable-item").closest("tr").prevAll("tr").find("." + className).last().css("counter-increment").split(' ')[1]);

        start = isNaN(start) ? 0 : start;

        if ($(list).is('ol'))
            $(list).css("counter-increment", "listN " + (liCount + start));
        else if ($(list).is('ul'))
            $(list).css("counter-increment", "listAN " + (liCount + start));

        var startVal = 0;
        var start = 0;
        var liCount = 0;
        if (className == 'ol-box') {

            if ($(control).closest('.article-table').is('table') && !($(control).parents('#resizeTable').length)) {
                olList = $(control).closest('.article-table').find('.textDragger').find('ol.ol-box:not(.sub-disc-list)');
            }
            else {
                olList = $('#tableDragger').children('.textDragger').find('ol.ol-box:not(.sub-disc-list)');
            }

            $.each(olList, function (i) {
                if ($(olList[i]).hasClass('reset'))
                    startVal = 0;
                else if ($(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ol-box2').length == 0) {
                    theIndex = null;
                    newList = [];
                    resetList = [];
                    totList = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
                    resList = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box.reset,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
                    for (let i = 0; i < $(resList).length; i++) {
                        if ($(resList[i]).children('li.ol-box2').length) {
                            resetList.push($(resList[i]).attr("id"));
                        }
                    }
                    if (resetList.length) {
                        totList.forEach(function (item, index) {
                            if (resetList.includes($(item).attr("id"))) {
                                newList = [];
                                newList.push(item);
                            }
                            else {
                                newList.push(item);
                            }
                        });
                        liCount = $(newList).find('> li.ol-box2').length;
                    }
                    else {
                        liCount = $(totList).find('> li.ol-box2').length;
                    }



                    //liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;

                    start = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().is('ol-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;
                    startVal = liCount + start;
                }
                else if ($(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ol-box2').length) {
                    theIndex = null;
                    newList = [];
                    resetList = [];
                    totList = $(olList[i]).prevAll('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
                    resList = $(olList[i]).prevAll('ul.ul-alpha-box,ol.ol-box.reset,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
                    for (let i = 0; i < $(resList).length; i++) {
                        if ($(resList[i]).children('li.ol-box2').length) {
                            resetList.push($(resList[i]).attr("id"));
                        }
                    }
                    if (resetList.length) {
                        totList.forEach(function (item, index) {
                            if (resetList.includes($(item).attr("id"))) {
                                newList = [];
                                newList.push(item);
                            }
                            else {
                                newList.push(item);
                            }
                        });
                        liCount = $(newList).find('> li.ol-box2').length;
                    }
                    else {
                        liCount = $(totList).find('> li.ol-box2').length;
                    }

                    /*var liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;*/
                    //var liCount = $(olList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('>' + 'li.ol-box2').length;
                    /*var start = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().is('ol-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;*/

                    start = $(olList[i]).prevAll('ol.ol-box:not(".sub-disc-list")').length ? parseInt($(olList[i]).prevAll('ol.ol-box:not(".sub-disc-list")').last().css('counter-increment').split(' ')[1]) : 0;

                    startVal = liCount + start;
                }
                $(olList[i]).css("counter-increment", "listN " + startVal);
                startVal += $(olList[i]).children('li:not(.ul-box,.ul-box2,.ul-hyp-box,.ul-chk-box)').length;
            });
        }
        else if (className == 'ul-alpha-box') {

            if ($(control).closest('.article-table').is('table') && !($(control).parents('#resizeTable').length)) {
                ulList = $(control).closest('.article-table').find('.textDragger').find('ul.ul-alpha-box:not(.sub-disc-list)');
            }
            else {
                ulList = $('#tableDragger').children('.textDragger').find('ul.ul-alpha-box:not(.sub-disc-list)');
            }

            $.each(ulList, function (i) {
                if ($(ulList[i]).hasClass('reset'))
                    startVal = 0;
                else if ($(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ul-box2').length == 0) {

                    theIndex = null;
                    newList = [];
                    resetList = [];
                    totList = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
                    resList = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box.reset,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray();
                    for (let i = 0; i < $(resList).length; i++) {
                        if ($(resList[i]).children('li.ul-box2').length) {
                            resetList.push($(resList[i]).attr("id"));
                        }
                    }
                    if (resetList.length) {
                        totList.forEach(function (item, index) {
                            if (resetList.includes($(item).attr("id"))) {
                                newList = [];
                                newList.push(item);
                            }
                            else {
                                newList.push(item);
                            }
                        });
                        liCount = $(newList).find('> li.ul-box2').length;
                    }
                    else {
                        liCount = $(totList).find('> li.ul-box2').length;
                    }

                    //liCount = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ul-box2').length;
                    start = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().is('ul-alpha-box') ? parseInt($(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;
                    startVal = liCount + start;
                }
                else if ($(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('> li.ul-box2').length) {
                    theIndex = null;
                    newList = [];
                    resetList = [];
                    totList = $(ulList[i]).prevAll('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
                    resList = $(ulList[i]).prevAll('ul.ul-alpha-box.reset,ol.ol-box,ul.ul-box,ul.ul-hyp-box,ul.ul-chk-box').not('.sub-disc-list').toArray().reverse();
                    for (let i = 0; i < $(resList).length; i++) {
                        if ($(resList[i]).children('li.ul-box2').length) {
                            resetList.push($(resList[i]).attr("id"));
                        }
                    }
                    if (resetList.length) {
                        totList.forEach(function (item, index) {
                            if (resetList.includes($(item).attr("id"))) {
                                newList = [];
                                newList.push(item);
                            }
                            else {
                                newList.push(item);
                            }
                        });
                        liCount = $(newList).find('> li.ul-box2').length;
                    }
                    else {
                        liCount = $(totList).find('> li.ul-box2').length;
                    }

                    /*var liCount = $(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').find('>' + 'li.ol-box2').length;*/
                    /* var liCount = $(ulList[i]).prevAll('ol[id],ul[id]').not('.sub-disc-list').find('>' + 'li.ul-box2').length;*/
                    /*var start = $(ulList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().is('ul-alpha-box') ? parseInt($(olList[i]).closest("table.draggable-item").closest("tr").prevAll("tr.textDragger").find('ul.ul-alpha-box,ol.ol-box,ul.ul-box,ul.ul-hyp-box').not('.sub-disc-list').last().css('counter-increment').split(' ')[1]) : 0;*/

                    start = $(ulList[i]).prevAll('ul.ul-alpha-box:not(".sub-disc-list")').length ? parseInt($(ulList[i]).prevAll('ul.ul-alpha-box:not(".sub-disc-list")').last().css('counter-increment').split(' ')[1]) : 0;

                    startVal = liCount + start;
                }
                $(ulList[i]).css("counter-increment", "listAN " + startVal);
                startVal += $(ulList[i]).children('li:not(.ul-box,.ol-box2,.ul-hyp-box,.ul-chk-box)').length;
            });

        }

        if (liCount == 0) {
            if ($(list).prevAll("." + className + ":first").length)
                prevList = $(list).prevAll("." + className + ":first");

            else if ($(list).prevAll().find("." + className + ":first").length)
                prevList = $(list).prevAll().find("." + className + ":first");

            else if ($(list).parent().prevAll("." + className + ":first").length)
                prevList = $(list).parent().prevAll("." + className + ":first");

            else if ($(list).parent().prevAll("p").find("." + className + ":first").length)
                prevList = $(list).parent().prevAll("p").find("." + className + ":first");

            else if ($(list).parent().prevAll().find("." + className + ":first").length)
                prevList = $(list).parent().prevAll().find("." + className + ":first");
        }
    }

    if (prevList != '') {
        if ($(list).is('ol-box')) {
            if ($(list).prevAll().not('span.list-numbering-box').first('ol,ul').children().last().is('ol-box2')) {
                $(list).find(">li").each(function () {
                    $(prevList).append($(this));
                });
            }
        }
        else if ($(list).is('ul-box')) {
            if ($(list).prevAll().not('span.list-numbering-box').first('ol,ul').children().last().is('ul-box')) {
                $(list).find(">li").each(function () {
                    $(prevList).append($(this));
                });
            }
        }
        else if ($(list).is('ul-alpha-box')) {
            if ($(list).prevAll().not('span.list-numbering-box').first('ol,ul').children().last().is('ul-box2')) {
                $(list).find(">li").each(function () {
                    $(prevList).append($(this));
                });
            }
        }
        else if ($(list).is('ul-hyp-box')) {
            if ($(list).prevAll().not('span.list-numbering-box').first('ol,ul').children().last().is('ul-hyp-box')) {
                $(list).find(">li").each(function () {
                    $(prevList).append($(this));
                });
            }
        }
        else if ($(list).is('ul-chk-box')) {
            if ($(list).prevAll().not('span.list-numbering-box').first('ol,ul').children().last().is('ul-chk-box')) {
                $(list).find(">li").each(function () {
                    $(prevList).append($(this));
                });
            }
        }
    }


    AutomateNumbering(control);
    $(control).parent().closest(".list-numbering-box").remove();
}
function RemoveNumbering(control) {
    //var list = $(control).next();
    var list = $(control).parents('.list-numbering-box').next();
    $(list).addClass('reset');
    /*$(control).parent().closest(".list-numbering-box").remove();*/

    if (list.length > 0) {

        var nextinc = 0;
        var start = $(list).children().length;
        nextinc += start;

        if ($(list)[0].classList[0] == 'ol-box') {

            $($(list)[0]).css("counter-increment", "listN " + 0);

            var newListA = $('.list-numbering-box').parents('tr.textDragger').nextAll('tr.textDragger').find('ol');
            var newList = $(list).nextAll('ol.ol-box:not(.sub-disc-list)');
            Array.prototype.push.apply(newList, newListA);
            $.each(newList, function (i) {
                if ($(newList[i]).hasClass('reset') == false) {
                    $(newList[i]).css("counter-increment", "listN " + nextinc);
                    nextinc += $(newList[i]).children('li:not(.ul-box,.ul-box2,.ul-hyp-box,.ul-chk-box)').length;
                }
                else
                    return false;
            });
        }
        else if ($(list)[0].classList[0] == 'ul-alpha-box') {

            $($(list)[0]).css("counter-increment", "listN " + 0);

            var newListUlA = $('.list-numbering-box').parents('tr.textDragger').nextAll('tr.textDragger').find('ul.ul-alpha-box');
            var newListUl = $(list).nextAll('ul.ul-alpha-box');
            Array.prototype.push.apply(newListUl, newListUlA);
            $.each(newListUl, function (i) {
                if ($(newListUl[i]).hasClass('reset') == false) {
                    $(newListUl[i]).css("counter-increment", "listA " + nextinc);
                    nextinc += $(newListUl[i]).children('li:not(.ul-box,ol-box2,ul-hyp-box,ul-chk-box)').length;
                }
                else
                    return false;
            });
        }
    }
    AutomateNumbering(control);
    $(control).remove();
}



function viewcomment(html, currentElement, mark) {

    if ($(currentElement).prop("tagName") != "COMMENT") {
        $("#tableDetails .comment-box").each(function () {
            $(this).hide();
            //var contentwidth = $('.showComment #tableDragger').width() / 2,
            //    commentboxpos = $('.comment-display').offset().left;

            //if (commentboxpos > contentwidth) {
            //    $('.comment-box').css({right:'0', left:'initial !important'});
            //}

        });
        if (html.trim().length == 0) {
            return '';
        }
        else {
            var commentid = uniqueObjectId();
            var tabindexId = uniqueObjectId();

            return '<span class="comment-display" id="' + commentid + '"  tabindex="' + commentid + '">' + html
                + '<span class="comment-box" contenteditable="false"><h6 id="commentHeading"><i class="fa fa-comment-o" aria-hidden="true"></i> Leave a Comment</h6><span contenteditable="true" class="comment-content" id="' + tabindexId + '" tabindex="' + commentid
                + '" placeholder="Type Here"></span>'
                + '<i class="fa fa-times commentbox-close" aria-hidden="true"></i></span></span><script>'
                + 'var commentTemplate = \'<li class="commentitem" data-value="' + commentid + '" data-userid="' + $("#hdfUserId").val() + '"><span class="comment-img"><img src="' + $("#hdfProfileImage").val() + '" />'
                + '</span><span class="comment-contentpanelitem"><b>' + $("#hdfUserName").val() + ' <i class="fa fa-times-circle pull-right" style="margin-right: 15px;" onclick="RemoveComment(event)" aria-hidden="true"></i></b><text contenteditable="false"></text></span></li>\';'
                + '$("#tableDetails1 ul").append(commentTemplate);$("#pageEditor").addClass("showComment");'
                + '$("#tableDetails1 li").removeClass("active");a();</script>';

        }
    }
    else {

        $(currentElement).find(".comment-box").css("display", "");
        return '';
    }
}

function RefreshResize() {

    if ($("#hdnAppEnv").val() == "O") {

        $(".list-numbering-box").remove();

        $(".imgresource").resizable();
        $(".imgresource").resizable('destroy');
        $('.ui-wrapper').contents().unwrap();
        $(".thumb-img").find(".ui-resizable-handle").remove();

        $(".imgresource").each(function () {
            $(this).closest(".ui-wrapper").attr("actual-width", $(this).css("width"));
            $(this).closest(".thumb-img").css("height", $(this).css("height"));
            $(this).closest(".thumb-img").css("width", $(this).css("width"));
        });
        $(".ui-wrapper").nextAll(".ui-resizable-handle").remove();

        if ($(".two-column.imgresource").hasClass("ui-resizable"))
            $(".two-column .imgresource").resizable('destroy');
        if ($(".logo-img.imgresource").hasClass("ui-resizable"))
            $(".logo-img .imgresource").resizable('destroy');
        if ($(".cover-layout.imgresource").hasClass("ui-resizable"))
            $(".cover-layout .imgresource").resizable('destroy');

        $(".thumb-img .ui-wrapper").css("overflow", "visible");

        $("table[id^=resizeTable]").each(function () {
            $(this).resizable();
            $(this).resizable('destroy');
            $(this).find('.ui-wrapper').contents().unwrap();
            $(this).find(".thumb-wrapper").find(".ui-resizable-handle").remove();
            $(this).closest("table.draggable-item").find(".ui-resizable-handle").remove();
            $(this).resizable(
                {
                    containment: "#tableDragger",
                    stop: function (event, ui) {
                        ui.element.closest(".draggable-item").attr("height", ui.helper.outerHeight());
                        ui.element.closest(".draggable-item").find("#resizeTable").attr("actual-width", ui.element.closest(".draggable-item").find("#resizeTable").inlineStyle("width"));
                    }
                }
            );

            $(this).find(".resizeCol").resizable();
            $(this).find(".resizeCol").resizable('destroy');
            $(this).find('.ui-wrapper').contents().unwrap();
            $(this).find(".thumb-wrapper").find(".ui-resizable-handle").remove();
            $(this).find(".resizeCol").resizable({
                containment: "#resizeTable",
                stop: function (event, ui) {
                    var totalWidth = 0;
                    $(ui.helper).closest("#resizeTable").find("thead>tr>th").each(function () {
                        totalWidth = totalWidth + $(this).width();
                    });
                    if (totalWidth > $("#tableDragger").width())
                        $(ui.helper).closest("#resizeTable").find(".resizeCol").css("width", "50px");

                    $(ui.helper).attr("actual-width", $(ui.helper).inlineStyle("width"));
                }
            });
            //if ($(this).attr("border").length && parseInt($(this).attr("border")) > 1) {
            //    $(this).find(".ui-resizable-s:last").css("border-bottom", parseInt($(this).attr("border")) + "px solid");
            //} else if ($(this).attr("border").length && parseInt($(this).attr("border")) == 1)
            //    $(this).find(".ui-resizable-s:last").css("border-bottom", "none");
        });


        //$(".title-class-one").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".section-class-one").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".title-class-two").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".section-class-two").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".toc-text").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".singleCol-text").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        //$(".ui-widget-text").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});

        $(".comment-box").hide();

        $(".thumb-img").click(function () {

            imgLogoObj = $(this);

            setTimeout(function () {
                if (imageLoaded == false) {
                    WikiApp.logoTemplating._loadImageList();
                    WikiApp.logoTemplating._uploadImageForm();
                    $("#logo-list").removeClass("hide");
                    $(".emailHd").addClass("hide");
                }

                $("#logo-list").addClass("opening");
            }, 100);
        });
        $("#logorm").click(function () {
            $("#logo-list").addClass("hide");
            $(".emailHd").removeClass("hide");
            setTimeout(function () {
                $("#logo-list").removeClass("opening");
            }, 100);
        });

        $(".thumb-mail").click(function () {
            imgLogoObj = $(this);

            setTimeout(function () {
                if (imageLoaded == false) {
                    WikiApp.logoTemplating._loadImageList();
                    WikiApp.logoTemplating._uploadImageForm();
                    $("#logo-list").removeClass("hide");
                    $(".emailHd").addClass("hide");
                    $("#logo-list").addClass("opening");
                }
            }, 100);
        });

        $(".rtalign").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "right");
            targetTd.closest(".draggable-item").css("text-align", "right");
            targetTd.closest(".draggable-item").find(".logoWrap").removeClass("pull-right");
        });
        $(".ltalign").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "left");
            targetTd.closest(".draggable-item").css("text-align", "left");
            targetTd.closest(".draggable-item").find(".logoWrap").removeClass("pull-left");

        });
        $(".ctalign").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "center");
            targetTd.closest(".draggable-item").css("text-align", "center");
        });

        $(".rtalignImg").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "right");
            targetTd.closest(".draggable-item").css("text-align", "right");
        });
        $(".ltalignImg").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "left");
            targetTd.closest(".draggable-item").css("text-align", "left");
        });
        $(".ctalignImg").click(function () {
            var targetTd = $(this).closest("td");
            targetTd.attr("align", "center");
            targetTd.closest(".draggable-item").css("text-align", "center");
        });
        $(".rotateImg").on("click", function (event) {
            event.stopPropagation();
            var targetImg = $(this).closest("table.draggable-item").find("#imgcontainer");
            if (targetImg.length == 0)
                targetImg = $(this).closest("table.draggable-item").find("#logocontainer");
            targetImg.closest(".thumb-wrapper").css("overflow", "visible");
            targetImg.closest(".ui-wrapper").css("overflow", "visible");
            targetImg.RotateImage();
        });

        $(".expandimg").on("click", function (event) {
            debugger
            var org_width_thump = "";
            var org_height_thump = "";
            var org_width_ui = "";
            var org_height_ui = "";
            var org_width_img = "";
            var org_height_img = "";


            $(event.currentTarget).find("i").toggleClass("fa-expand fa-compress");

            if (!$(event.currentTarget).find("i").hasClass("fa-expand")) {

                org_width_thump = $(this).closest("table.draggable-item").find(".thumb-wrapper").css("width",);
                org_height_thump = $(this).closest("table.draggable-item").find(".thumb-wrapper").css("height");
                org_width_ui = $(this).closest("table.draggable-item").find(".ui-wrapper").css("width");
                org_height_ui = $(this).closest("table.draggable-item").find(".ui-wrapper").css("height");
                org_width_img = $(this).closest("table.draggable-item").find(".imgresource").css("width");
                org_height_img = $(this).closest("table.draggable-item").find(".imgresource").css("height");

                $(this).closest("table.draggable-item").find(".thumb-wrapper").css("width", "100%");
                $(this).closest("table.draggable-item").find(".thumb-wrapper").css("height", "auto");
                $(this).closest("table.draggable-item").find(".ui-wrapper").css("width", "100%");
                $(this).closest("table.draggable-item").find(".ui-wrapper").css("height", "auto");
                $(this).closest("table.draggable-item").find(".imgresource").css("width", "100%");
                $(this).closest("table.draggable-item").find(".imgresource").css("height", "auto");


                event.stopPropagation();


            }
            else {

                $(this).closest("table.draggable-item").find(".thumb-wrapper").css("width", org_width_thump);
                $(this).closest("table.draggable-item").find(".thumb-wrapper").css("height", org_height_thump);
                $(this).closest("table.draggable-item").find(".ui-wrapper").css("width", org_width_ui);
                $(this).closest("table.draggable-item").find(".ui-wrapper").css("height", org_height_ui);
                $(this).closest("table.draggable-item").find(".imgresource").css("width", org_width_img);
                $(this).closest("table.draggable-item").find(".imgresource").css("height", org_height_img);
                event.stopPropagation();

            }



            debugger
            //  event.stopPropagation();
            //     var targetImg = $(this).closest("table.draggable-item").find("#imgcontainer");



        });





        $(".dt-img").click(function (event) {
            event.stopPropagation();
            $(this).closest(".thumb-wrapper").fadeOut('slow', function () {
                if ($(this).closest(".thumb-wrapper").closest("tr").find(".dt-img").length == 1) {

                    $(this).closest(".thumb-wrapper").closest("tr").closest(".draggable-item").css("height", $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td div:first").height());
                    $(this).closest(".thumb-wrapper").closest("tr").closest(".draggable-item").closest("tr").css("height", $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td div:first").height());
                    $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td:last").after($(".two-col-settings"));
                    $(this).closest(".thumb-wrapper").closest("tr").remove();
                }
                else {
                    $(this).remove();
                }
            });

        });

        $(".thumb-file").click(function () {
            $("#file-list").removeClass("hide");
            $(".emailHd").addClass("hide");
            fileObj = $(this);

            setTimeout(function () {
                if (fileLoaded == false) {

                    WikiApp.fileTemplating._loadFileList("", "");
                    WikiApp.fileTemplating._uploadFileForm();
                }

                $("#file-list").addClass("opening");
            }, 100);
            $("#btn-file-collapse").click();
        });
        $("#filerm").click(function () {
            $("#file-list").addClass("hide");
            $(".emailHd").removeClass("hide");
            setTimeout(function () {
                $("#file-list").removeClass("opening");
            }, 100);
        });


        $(".uploadBrand").click(function () {


            $("#logo-list").removeClass("hide");
            $(".emailHd").addClass("hide");
            imgLogoObj = $(this);

            setTimeout(function () {
                $("#logo-list").addClass("opening");
                if (imageLoaded == false) {
                    WikiApp.logoTemplating._loadImageList();
                    WikiApp.logoTemplating._uploadImageForm();
                }
            }, 100);
        });

        TextContentChanges();

        $(".checklist .outerOl").on("keypress", function (event) {
            event.stopImmediatePropagation();
            if (event.keyCode == 13) {
                var text = '';
                event.preventDefault();
                var text = "[Sample]..................................................Tested";

                $("<li><span contenteditable=\"true\">" + text + "</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>").insertAfter($(this).find(">li:last"));
                $(".outerOl>li:last").contextMenu({
                    menuSelector: "#checkListcontextMenu"
                });
            }
        });
        $(".checklist .innerOl").keypress(function (event) {
            event.stopImmediatePropagation();
            if (event.keyCode == 13) {
                event.preventDefault();
                if ($(this).find(">li").length < 26)
                    $(this).append("<li><span contenteditable=\"true\">Listitem</span></li>");
                $(".innerOl>li").contextMenu({
                    menuSelector: "#checkListSubcontextMenu"
                });
            }
        });

        $(".outerOl>li").contextMenu({
            menuSelector: "#checkListcontextMenu"
        });
        $(".innerOl>li").contextMenu({
            menuSelector: "#checkListSubcontextMenu"
        });

        //admin checkList
        $(".checklist .admin-outerOl").on("keypress", function (event) {
            event.stopImmediatePropagation();
            if (event.keyCode == 13) {
                event.preventDefault();
                var text = "[Sample]........................................................Tested";

                $("<li><span contenteditable=\"true\">" + text + "</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>").insertAfter($(this).find(">li:last"));
                $(this).find(">li:last").contextMenu({
                    menuSelector: "#checkListcontextMenu"
                });
            }
        });
        $(".checklist .admin-innerOl").keypress(function (event) {
            event.stopImmediatePropagation();
            if (event.keyCode == 13) {
                event.preventDefault();
                if ($(this).find(">li").length < 26)
                    $(this).append("<li><span contenteditable=\"true\">[Sample]........................................................Tested</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>");
                $(this).find(">li").contextMenu({
                    menuSelector: "#checkListSubcontextMenu"
                });
            }
        });
        $(".checklist .admin-outerOl>li").contextMenu({
            menuSelector: "#checkListcontextMenu"
        });
        $(".checklist .admin-innerOl>li").contextMenu({
            menuSelector: "#checkListSubcontextMenu"
        });


        $(".singleCol-text").each(function () {
            if ($(this).next().is("ol") || $(this).next().is("ul"))
                $(this).next().appendTo($(this));
        });
        $(".section-class-one").each(function () {
            if ($(this).next().is("ol") || $(this).next().is("ul"))
                $(this).next().appendTo($(this));
        });

        //$(".ul-hyp-box").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});

        //$(".ul-alpha-box").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});

        //$(".ul-box").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});

        //$(".ol-box").contextMenu({
        //    menuSelector: "#formatcontextMenu",
        //});
        $("#tableDragger").find(".blankPage").each(function () {
            var headerText = $(this).find(".headerTemplate").clone().wrap('<p>').parent().html();
            var footerText = $(this).find(".footerTemplate").clone().wrap('<p>').parent().html();

            $(this).html('<td> <table align="center" style="width:100%" border="0" cellpadding="0" cellspacing="0" class="draggable-item ui-state-default"> <tbody> <tr> <td class="blank-page-break"><div class="drg-rmv"></div><p></p></td></tr><tr><td class="rLvE blank-td"><div class="draggable-item ui-state-default blankText"><div style="text-align: center;font-size: 11pt;font-family: Calibri;padding:80px">Intentional Blank Page</div></div></td></tr><tr> <td class="blank-page-break"> <p></p></td></tr></tbody> </table> </td>');
            $(this).find(".drg-rmv").html(WikiApp.commonFunc._moveAndRemove());
            if (headerText.length) {
                $(this).find(".draggable-item").find(".blank-td").prepend(headerText);
                $(this).find(".blank-td").find(".drg-rmv").remove();
            }
            if (footerText.length) {
                $(this).find(".draggable-item").find(".blank-td").append(footerText);
                $(this).find(".blank-td").find(".drg-rmv").remove();
            }
        });

        //WikiApp.dragandDrop._AddItemsToUndo();

        $("#tableDragger").find(".rotate-img").on("click", function (event) {
            event.stopPropagation();
            var targetImg = $(this).closest("td").find("#imgcontainer");
            targetImg.RotateImage();
        });
    }


}

function RefreshResizeControl(control) {
    control.find(".imgresource").resizable();
    control.find(".imgresource").resizable('destroy');
    control.find('.ui-wrapper').contents().unwrap();
    control.find(".thumb-img").find(".ui-resizable-handle").remove();

    control.find(".imgresource").resizable({
        containment: "#tableDragger",
        stop: function () {
            $(this).closest(".ui-wrapper").attr("actual-width", $(this).css("width"));
            $(this).closest(".thumb-img").css("height", $(this).css("height"));
            $(this).closest(".thumb-img").css("width", $(this).css("width"));
        }
    });
    control.find(".imgresource").closest(".ui-wrapper").attr("actual-width", control.find(".imgresource").css("width"));
    control.find(".imgresource").closest(".thumb-img").css("height", control.find(".imgresource").css("height"));
    control.find(".imgresource").closest(".thumb-img").css("width", control.find(".imgresource").css("width"));
    control.find(".ui-wrapper").nextAll(".ui-resizable-handle").remove();

    if (control.hasClass("two-column") || control.hasClass("logo-img") || control.hasClass("cover-layout"))
        control.find(".imgresource").resizable('destroy');

    control.find(".thumb-img .ui-wrapper").css("overflow", "visible");

    if (control.find("#resizeTable").length) {
        control.find("#resizeTable").resizable();
        control.find("#resizeTable").resizable('destroy');
        control.find("#resizeTable").find('.ui-wrapper').contents().unwrap();
        control.find("#resizeTable").find(".thumb-wrapper").find(".ui-resizable-handle").remove();
        control.find("#resizeTable").closest("table.draggable-item").find(".ui-resizable-handle").remove();
        control.find("#resizeTable").resizable(
            {
                containment: "#tableDragger",
                stop: function (event, ui) {
                    ui.element.closest(".draggable-item").attr("height", ui.helper.outerHeight());
                    ui.element.closest(".draggable-item").find("#resizeTable").attr("actual-width", ui.element.closest(".draggable-item").find("#resizeTable").inlineStyle("width"));
                }
            }
        );

        control.find("#resizeTable").find(".resizeCol").resizable();
        control.find("#resizeTable").find(".resizeCol").resizable('destroy');
        control.find("#resizeTable").find('.ui-wrapper').contents().unwrap();
        control.find("#resizeTable").find(".thumb-wrapper").find(".ui-resizable-handle").remove();
        control.find("#resizeTable").find(".resizeCol").resizable({
            containment: "#resizeTable",
            stop: function (event, ui) {
                var totalWidth = 0;
                $(ui.helper).closest("#resizeTable").find("thead>tr>th").each(function () {
                    totalWidth = totalWidth + $(this).width();
                });
                if (totalWidth > $("#tableDragger").width())
                    $(ui.helper).closest("#resizeTable").find(".resizeCol").css("width", "50px");

                $(ui.helper).attr("actual-width", $(ui.helper).inlineStyle("width"));
            }
        });

        //if (control.find("#resizeTable").attr("border").length && parseInt(control.find("#resizeTable").attr("border")) > 1) {
        //    control.find("#resizeTable").find(".ui-resizable-s:last").css("border-bottom", parseInt(control.find("#resizeTable").attr("border")) + "px solid");
        //} else if (control.find("#resizeTable").attr("border").length && parseInt(control.find("#resizeTable").attr("border")) == 1)
        //    control.find("#resizeTable").find(".ui-resizable-s:last").css("border-bottom", "none");
    }

    //control.find(".title-class-one").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".section-class-one").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".title-class-two").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".section-class-two").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".toc-text").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".singleCol-text").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    //control.find(".ui-widget-text").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});

    control.find(".comment-box").hide();

    control.find(".thumb-img").click(function () {

        imgLogoObj = $(this);

        setTimeout(function () {
            if (imageLoaded == false) {
                WikiApp.logoTemplating._loadImageList();
                WikiApp.logoTemplating._uploadImageForm();
                $("#logo-list").removeClass("hide");
                $(".emailHd").addClass("hide");
            }

            $("#logo-list").addClass("opening");
        }, 100);
    });
    control.find("#logorm").click(function () {
        $("#logo-list").addClass("hide");
        $(".emailHd").removeClass("hide");
        setTimeout(function () {
            $("#logo-list").removeClass("opening");
        }, 100);
    });

    control.find(".thumb-mail").click(function () {
        imgLogoObj = $(this);

        setTimeout(function () {
            if (imageLoaded == false) {
                WikiApp.logoTemplating._loadImageList();
                WikiApp.logoTemplating._uploadImageForm();
                $("#logo-list").removeClass("hide");
                $(".emailHd").addClass("hide");
                $("#logo-list").addClass("opening");
            }
        }, 100);
    });

    control.find(".rtalign").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "right");
        targetTd.closest(".draggable-item").css("text-align", "right");
        targetTd.closest(".draggable-item").find(".logoWrap").removeClass("pull-right");
    });
    control.find(".ltalign").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "left");
        targetTd.closest(".draggable-item").css("text-align", "left");
        targetTd.closest(".draggable-item").find(".logoWrap").removeClass("pull-left");

    });
    control.find(".ctalign").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "center");
        targetTd.closest(".draggable-item").css("text-align", "center");
    });

    control.find(".rtalignImg").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "right");
        targetTd.closest(".draggable-item").css("text-align", "right");
    });
    control.find(".ltalignImg").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "left");
        targetTd.closest(".draggable-item").css("text-align", "left");
    });
    control.find(".ctalignImg").click(function () {
        var targetTd = $(this).closest("td");
        targetTd.attr("align", "center");
        targetTd.closest(".draggable-item").css("text-align", "center");
    });
    control.find(".rotateImg").on("click", function (event) {
        event.stopPropagation();
        var targetImg = $(this).closest("table.draggable-item").find("#imgcontainer");
        if (targetImg.length == 0)
            targetImg = $(this).closest("table.draggable-item").find("#logocontainer");
        targetImg.closest(".thumb-wrapper").css("overflow", "visible");
        targetImg.closest(".ui-wrapper").css("overflow", "visible");
        targetImg.RotateImage();
    });

    control.find(".expandimg").on("click", function (event) {
        debugger
        event.stopPropagation();
        var targetImg = $(this).closest("table.draggable-item").find("#imgcontainer");
        if (targetImg.length == 0)

            $(this).closest("table.draggable-item").find(".thumb-wrapper").css("width")


        targetImg = $(this).closest("table.draggable-item").find("#logocontainer");
        targetImg.find(".thumb-wrapper").css("height", "auto !important");
        targetImg.find(".thumb-wrapper").css("width", "100% !important");
        targetImg.find(".ui-wrapper").css("height", "auto !important");
        targetImg.find(".ui-wrapper").css("width", "100% !important");
        targetImg.css("height", "auto !important");
        targetImg.css("width", "100% !important");


    });

    control.find(".dt-img").click(function (event) {
        event.stopPropagation();
        $(this).closest(".thumb-wrapper").fadeOut('slow', function () {
            if ($(this).closest(".thumb-wrapper").closest("tr").find(".dt-img").length == 1) {

                $(this).closest(".thumb-wrapper").closest("tr").closest(".draggable-item").css("height", $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td div:first").height());
                $(this).closest(".thumb-wrapper").closest("tr").closest(".draggable-item").closest("tr").css("height", $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td div:first").height());
                $(this).closest(".thumb-wrapper").closest("tr").next("tr").find("td:last").after($(".two-col-settings"));
                $(this).closest(".thumb-wrapper").closest("tr").remove();
            }
            else {
                $(this).remove();
            }
        });

    });

    control.find(".thumb-file").click(function () {
        $("#file-list").removeClass("hide");
        $(".emailHd").addClass("hide");
        fileObj = $(this);

        setTimeout(function () {
            if (fileLoaded == false) {

                WikiApp.fileTemplating._loadFileList("", "");
                WikiApp.fileTemplating._uploadFileForm();
            }

            $("#file-list").addClass("opening");
        }, 100);
        $("#btn-file-collapse").click();
    });
    control.find("#filerm").click(function () {
        $("#file-list").addClass("hide");
        $(".emailHd").removeClass("hide");
        setTimeout(function () {
            $("#file-list").removeClass("opening");
        }, 100);
    });


    control.find(".uploadBrand").click(function () {


        $("#logo-list").removeClass("hide");
        $(".emailHd").addClass("hide");
        imgLogoObj = $(this);

        setTimeout(function () {
            $("#logo-list").addClass("opening");
            if (imageLoaded == false) {
                WikiApp.logoTemplating._loadImageList();
                WikiApp.logoTemplating._uploadImageForm();
            }
        }, 100);
    });

    TextContentChanges();

    control.find(".checklist .outerOl").on("keypress", function (event) {
        event.stopImmediatePropagation();
        if (event.keyCode == 13) {
            var text = '';
            event.preventDefault();
            if ($("#pageSize").val() == "A4")
                text = "[Sample].........................................................................................Tested";
            else
                text = "[Sample]..................................................Tested";

            $("<li><span contenteditable=\"true\">" + text + "</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>").insertAfter($(this).find(">li:last"));
            $(".outerOl>li:last").contextMenu({
                menuSelector: "#checkListcontextMenu"
            });
        }
    });
    control.find(".checklist .innerOl").keypress(function (event) {
        event.stopImmediatePropagation();
        if (event.keyCode == 13) {
            event.preventDefault();
            if ($(this).find(">li").length < 26)
                $(this).append("<li><span contenteditable=\"true\">Listitem</span></li>");
            $(".innerOl>li").contextMenu({
                menuSelector: "#checkListSubcontextMenu"
            });
        }
    });

    control.find(".outerOl>li").contextMenu({
        menuSelector: "#checkListcontextMenu"
    });
    control.find(".innerOl>li").contextMenu({
        menuSelector: "#checkListSubcontextMenu"
    });


    //admin checkList
    control.find(".checklist .admin-outerOl").on("keypress", function (event) {
        event.stopImmediatePropagation();
        if (event.keyCode == 13) {
            event.preventDefault();
            var text = "[Sample]........................................................Tested";

            $("<li><span contenteditable=\"true\">" + text + "</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>").insertAfter($(this).find(">li:last"));
            $(this).find(">li:last").contextMenu({
                menuSelector: "#checkListcontextMenu"
            });
        }
    });
    control.find(".checklist .admin-innerOl").keypress(function (event) {
        event.stopImmediatePropagation();
        if (event.keyCode == 13) {
            event.preventDefault();
            if ($(this).find(">li").length < 26)
                $(this).append("<li><span contenteditable=\"true\">[Sample]........................................................Tested</span><span contenteditable=\"false\" class=\"checklist-checkbox\"></span></li>");
            $(this).find(">li").contextMenu({
                menuSelector: "#checkListSubcontextMenu"
            });
        }
    });
    control.find(".checklist .admin-outerOl>li").contextMenu({
        menuSelector: "#checkListcontextMenu"
    });
    control.find(".checklist .admin-innerOl>li").contextMenu({
        menuSelector: "#checkListSubcontextMenu"
    });

    control.find(".singleCol-text").each(function () {
        if ($(this).next().is("ol") || $(this).next().is("ul"))
            $(this).next().appendTo($(this));
    });
    control.find(".section-class-one").each(function () {
        if ($(this).next().is("ol") || $(this).next().is("ul"))
            $(this).next().appendTo($(this));
    });

    //control.find(".ul-hyp-box").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});

    //control.find(".ul-alpha-box").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});

    //control.find(".ul-box").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});

    //control.find(".ol-box").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
    control.find(".blankPage").each(function () {
        var headerText = $(this).find(".headerTemplate").clone().wrap('<p>').parent().html();
        var footerText = $(this).find(".footerTemplate").clone().wrap('<p>').parent().html();

        $(this).html('<td> <table align="center" style="width:100%" border="0" cellpadding="0" cellspacing="0" class="draggable-item ui-state-default"> <tbody> <tr> <td class="blank-page-break"><div class="drg-rmv"></div><p></p></td></tr><tr><td class="rLvE blank-td"><div class="draggable-item ui-state-default blankText"><div style="text-align: center;font-size: 11pt;font-family: Calibri;padding:80px">Intentional Blank Page</div></div></td></tr><tr> <td class="blank-page-break"> <p></p></td></tr></tbody> </table> </td>');
        $(this).find(".drg-rmv").html(WikiApp.commonFunc._moveAndRemove());
        if (headerText.length) {
            $(this).find(".draggable-item").find(".blank-td").prepend(headerText);
            $(this).find(".blank-td").find(".drg-rmv").remove();
        }
        if (footerText.length) {
            $(this).find(".draggable-item").find(".blank-td").append(footerText);
            $(this).find(".blank-td").find(".drg-rmv").remove();
        }
    });
    // WikiApp.dragandDrop._AddItemsToUndo();

    control.find(".rotate-img").on("click", function (event) {
        event.stopPropagation();
        var targetImg = $(this).closest("td").find("#imgcontainer");
        targetImg.RotateImage();
    });
}

function RemoveComment(event) {

    ConfirmAlert("Do you want to delete this comment?").then(function (answer) {


        if (answer) {
            var commentId = $(event.target).closest("li").attr("data-value");
            var commentText = $("#" + commentId).contents().first().text();
            $("#" + commentId).next().remove();
            $("#" + commentId).replaceWith(commentText);
            $(event.target).closest("li").remove();
            if ($("#tableDetails1 li").length == 0) {
                if ($('input[name=commentmode]').is(":checked") == true) {
                    $("#commentmode").trigger('click');
                }
            }
        } else {
            return false
        }


    });

}


function ShowSubmitForReviewTab() {
    $("#submitforreviewtab").show();
    $("#remarkstab").hide();
}
function HideSubmitForReviewTab() {
    $("#submitforreviewtab").hide();
    $("#remarkstab").hide();
}
function ShowApprovalTab() {
    $("#approverList").show();
    $(".wiki-company-vessel-selection").show();
    $("#remarkstab").hide();
    $("#submitforreviewtab").hide();
}

function HideApprovalTab() {
    $("#approverList").hide();
    $(".wiki-company-vessel-selection").hide();
    $("#remarkstab").hide();
    $("#submitforreviewtab").hide();
}

function AutoFillDocumentNames(IDVal, Type) {

    $(".documentnamelist").focus();
    $("#" + IDVal).keyup(function () {
        $("#" + IDVal).parent().attr("data-id", "NaN");
    });
    var availableTags = [];
    var url = $("#hfdUrlPath").val() + '/Document/GetDocumentNameList';
    $("#" + IDVal).addClass('autoloader');
    $.ajax({
        url: url,
        type: 'GET',
        success: function (result) {
            $('.medium-editor-action').find('i.linkAF').parent().prop('disabled', false);
            $("#" + IDVal).removeClass('autoloader');
            $("#" + IDVal).removeAttr('disabled');
            $('#' + IDVal).trigger('select');
            if (Type === "D")
                result = $.grep(result, function (v) {
                    return v.type !== "D";
                });
            else
                result = $.grep(result, function (v) {
                    return v.type === "F";
                });
            $("#" + IDVal).autocomplete({
                source: result,
                select: function (event, ui) {
                    var UIvalue = ui.item.id;
                    var UIlabel = ui.item.label.split('--')[0];
                    $("#" + IDVal).parent().attr("data-id", UIvalue);
                    $("#" + IDVal).parent().attr("data-type", ui.item.type);
                },
                search: function (event, ui) {

                },
                response: function (event, ui) {

                }
            });
        }

    });

    // console.log(availableTags)

}

function RemoveBookletMode() {
    $("#tableDetails >tbody > tr > td").removeClass("bookletDocLeft bookletDocRight");
}

var IsDraftOption = false;
var IsSubmitForReviewOption = false;
var IsSubmitForChangeOption = false;
var IsSubmitForApprovalOption = false;
var IsApprovalOption = false;
QDMS.ApproveCycle = {
    SetDraftOption: function () {
        IsDraftOption = true;
        IsSubmitForReviewOption = false;
        IsSubmitForChangeOption = false;
        IsSubmitForApprovalOption = false;
        IsApprovalOption = false;
        HideApprovalTab();
        HideSubmitForReviewTab();
    },
    SetSubmitForReviewOption: function () {
        IsDraftOption = false;
        IsSubmitForReviewOption = true;
        IsSubmitForChangeOption = false;
        IsSubmitForApprovalOption = false;
        IsApprovalOption = false;
        HideApprovalTab();
        ShowSubmitForReviewTab();
    },
    SetSubmitForChangeOption: function () {
        IsDraftOption = false;
        IsSubmitForReviewOption = false;
        IsSubmitForChangeOption = true;
        IsSubmitForApprovalOption = false;
        IsApprovalOption = false;
        HideApprovalTab();
        HideSubmitForReviewTab();
    },
    SetSubmitForApprovalOption: function () {
        IsDraftOption = false;
        IsSubmitForReviewOption = false;
        IsSubmitForChangeOption = false;
        IsSubmitForApprovalOption = true;
        IsApprovalOption = false;
        HideApprovalTab();
        HideSubmitForReviewTab();
    },
    SetApprovalOption: function () {
        IsDraftOption = false;
        IsSubmitForReviewOption = false;
        IsSubmitForChangeOption = false;
        IsSubmitForApprovalOption = false;
        IsApprovalOption = true;
        ShowApprovalTab();
        HideSubmitForReviewTab();
    }
};



QDMS.DocumentListing = {
    _PublishedArticleSection: function () {
        $("#articleListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/Article/GetPublishedArticles';

        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#articleListView .tab-height .loaderoverlay").remove();

                var ArticleList = result.ArticlePublished;

                if (ArticleList != null && ArticleList.length > 0) {
                    articleSkipCount = ArticleList.length;

                    var artcile = '<div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="articleTab">';
                    $(".article-search-box").show();
                    $.each(ArticleList, function () {
                        artcile += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderArticleView('" + this.Id + "')\"><span class=\"article-name\">"
                            + this.AN + "</span></a><div class=\"art-site-list art-categories\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"version-container\">V "

                            + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span>" + this.ApprovedBy + "</span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });
                    $("#articleListView .tab-height").html(artcile + "</ul></div>");
                }
                else {
                    $("#articleListView .tab-height").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Articles Available</h3></center>");
                    $(".article-search-box").hide();
                }
                QDMS.DocumentListing._PublishedArticleCategoies();
                $("#articleTab").scroll(function (event) {
                    var actualHeight = $(this).height();
                    var scrollheight = $(this).prop('scrollHeight');
                    var scrollTop = $(this).scrollTop();
                    var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';

                    if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                        $('#articleListView .tab-height').append(scrollLoader);

                        var searchKey = $("#searchArticleKey").val().trim();
                        if (searchKey == "") {
                            QDMS.DocumentListing._ArticleLoadOnDemand();
                        }
                    }
                });
                QDMS.DocumentListing._bindSerach();
            }
        });
        AppendContentWindowXY();
    },
    _DraftedArticleSection: function () {
        $("#articledraftListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
        var url = $("#hfdUrlPath").val() + '/Article/GetDraftedArticles';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#articledraftListView .tab-height .loaderoverlay").remove();

                var DraftList = result.ArticleDraft;
                if (DraftList != null && DraftList.length > 0) {
                    articleDraftSkipCount = DraftList.length;

                    $(".article-search-box").show();
                    var draftart = '<div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="draftTab">';
                    $.each(DraftList, function () {
                        draftart += "<li id=\"" + this.Id + "\">";
                        draftart += "<a href=\"#\" title=\"" + this.TT + "\" onclick=\"RenderIsArticleDraftView('" + this.Id + "')\">";
                        draftart += "<span class=\"article-name\">" + this.AN + "<\/span><\/a>";
                        draftart += "<div class=\"art-site-list\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"art-site-list by-name\"><label>Drafted By : </label> <span>" + this.DF + "</span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">" + this.D + "";
                        draftart += "<\/div><\/li>";
                    });
                    $("#articledraftListView .tab-height").html(draftart + "</ul></div>");

                    $("#articledraftListView #draftTab").append("<input type=\"hidden\" value=\"" + result.ArticleDraftedLastDate + "\" id=\"ArticledraftLastDate\">");
                }
                else {
                    $("#articledraftListView .tab-height").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Articles Available</h3></center>");
                    $(".article-search-box").hide();
                }
                QDMS.DocumentListing._DraftedArticleCategoies();
                $("#articledraftListView").scroll(function (event) {
                    var actualHeight = $(this).height();
                    var scrollheight = $(this).prop('scrollHeight');
                    var scrollTop = $(this).scrollTop();
                    var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';

                    if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                        $('#articledraftListView .tab-height').append(scrollLoader);

                        var searchKey = $("#searchArticleKey").val().trim();
                        if (searchKey == "") {
                            QDMS.DocumentListing._DraftArticleLoadOnDemand();
                        }

                    }
                });
                QDMS.DocumentListing._bindSerach();
            }
        });
        AppendContentWindowXY();
    },
    _ArticleLoadOnDemand: function () {
        $.ajax({
            type: "POST",
            url: $("#hfdUrlPath").val() + '/Article/LoadArticlesOnDemands',
            data: { 'skip': articleSkipCount },
            success: function (result) {
                $('#articleListView .tab-height').find('.scroll-loader').remove();

                var ArticleList = result.DownloadDocs;

                if (ArticleList != null && ArticleList.length > 0) {

                    articleSkipCount += ArticleList.length;

                    $.each(ArticleList, function () {

                        var newappend = "<li id=\"" + this.Id + "\">";
                        newappend += "<a href=\"#\" title=\"" + this.TT + "\" onclick=\"RenderArticleView('" + this.Id + "')\">";
                        newappend += "<span class=\"article-name\">" + this.AN + "<\/span><\/a>";
                        newappend += "<div class=\"art-site-list\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"version-container\">V " + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span> " + this.ApprovedBy + "  </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">" + this.D + " <\/div>";
                        newappend += "<\/li>";
                        $("#articleListView #articleTab").append(newappend);
                    });

                    var categoryIds = [];
                    $("#articlelist .selected-cat").each(function () {
                        if ($(this).attr("data-categoryid") != undefined)
                            categoryIds.push($(this).attr("data-categoryid"));
                    });
                    var searchKey = $("#searchArticleKey").val().trim();
                    QDMS.DocumentListing._FilterArticles(categoryIds, searchKey);
                }
            }
        });
    },
    _DraftArticleLoadOnDemand: function () {
        $.ajax({
            type: "POST",
            url: $("#hfdUrlPath").val() + '/Article/LoadDraftArticlesOnDemands',
            data: { 'skip': articleDraftSkipCount },
            success: function (result) {
                $('#articledraftListView .tab-height').find('.scroll-loader').remove();

                var ArticleList = result.DownloadDocs;

                if (ArticleList != null && ArticleList.length > 0) {

                    articleDraftSkipCount += ArticleList.length;

                    $.each(ArticleList, function () {
                        var draftart = "<li id=\"" + this.Id + "\">";
                        draftart += "<a href=\"#\" title=\"" + this.TT + "\" onclick=\"RenderIsArticleDraftView('" + this.Id + "')\">";
                        draftart += "<span class=\"article-name\">" + this.AN + "<\/span><\/a>";
                        draftart += "<div class=\"art-site-list\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"art-site-list by-name\"><label>Drafted By : </label> <span>" + this.DF + "</span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">" + this.D + "";
                        draftart += "<\/div><\/li>";
                        $("#articledraftListView #draftTab").append(draftart);
                    });

                    var categoryIds = [];
                    $("#articlelist .selected-cat").each(function () {
                        if ($(this).attr("data-categoryid") != undefined)
                            categoryIds.push($(this).attr("data-categoryid"));
                    });
                    var searchKey = $("#searchArticleKey").val().trim();
                    QDMS.DocumentListing._FilterArticles(categoryIds, searchKey);
                }
            }
        });
    },
    _PublishedArticleCategoies: function () {
        var html = " <li role=\"presentation\">" +
            "<a role=\"menuitem\" href=\"#\" class=\"article-cat-filter\" data-categoryId=\"@categoryId\">@categoryName</a>" +
            "</li>";
        var url = $("#hfdUrlPath").val() + '/Article/PublishedArtcileCategories';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#articleCategory").html("");
                if (result != null && Object.keys(result).length > 0) {
                    $(".articlesearchcon").show();
                    var firstLi = '<li role="presentation"><a role="menuitem" href="#" class="filter-all-article">All</a></li>';
                    $("#articleCategory").append(firstLi);
                    $.each(result, function (i, n) {
                        var li = html.replace("@categoryName", n.Value).replace("@categoryId", n.Key);
                        $("#articleCategory").append(li);
                    });
                    QDMS.DocumentListing._bindCategoryFilter();
                }
                else {
                    $(".articlesearchcon").hide();
                }
            }
        });
    },
    _DraftedArticleCategoies: function () {
        var html = " <li role=\"presentation\">" +
            "<a role=\"menuitem\" href=\"#\" class=\"article-cat-filter\" data-categoryId=\"@categoryId\">@categoryName</a>" +
            "</li>";
        var url = $("#hfdUrlPath").val() + '/Article/DraftedArtcileCategories';
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#articleCategory").html("");
                if (result != null && Object.keys(result).length > 0) {
                    $(".articlesearchcon").show();
                    var firstLi = '<li role="presentation"><a role="menuitem" href="#" class="filter-all-article">All</a></li>';
                    $("#articleCategory").append(firstLi);
                    $.each(result, function (i, n) {
                        var li = html.replace("@categoryName", n.Value).replace("@categoryId", n.Key);
                        $("#articleCategory").append(li);
                    });
                    QDMS.DocumentListing._bindCategoryFilter();
                }
                else {
                    $(".articlesearchcon").hide();
                }
            }
        });
    },
    _FilterArticles: function (categories, searchKey) {
        if (articleTab == "publised") {
            //$("#articleListView #articleTab li").hide();
            if (searchKey == "" && categories.length == 0) {
                $("#articleListView #articleTab li").show();
            }
            else if (searchKey == "" && categories.length) {
                $("#articleListView #articleTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    var artCategoryIds = $(this).find(".art-categories").text().split(',');
                    if (artCategoryIds.some(category => categories.includes(category)))
                        $(this).show();
                    else $(this).hide();
                });
            }
            else if (searchKey != "" && categories.length == 0) {
                $("#articleListView #articleTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    if (articleName.toLowerCase().startsWith(searchKey.toLowerCase()))
                        $(this).show();
                });
            }
            else if (searchKey != "" && categories.length) {
                $("#articleListView #articleTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    var artCategoryIds = $(this).find(".art-categories").text().split(',');
                    if (artCategoryIds.some(category => categories.includes(category)) && articleName.toLowerCase().startsWith(searchKey.toLowerCase()))
                        $(this).show()
                });
            }

        }
        else if (articleTab == "drafted") {
            //$("#articledraftListView #draftTab li").hide();
            if (searchKey.trim() == "" && categories.length == 0) {
                $("#articledraftListView #draftTab li").show();
            }
            else if (searchKey.trim() == "" && categories.length) {
                $("#articledraftListView #draftTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    var artCategoryIds = $(this).find(".art-categories").text().split(',');
                    if (artCategoryIds.some(category => categories.includes(category)))
                        $(this).show();
                });
            }
            else if (searchKey.trim() != "" && categories.length == 0) {
                $("#articledraftListView #draftTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    if (articleName.toLowerCase().startsWith(searchKey.trim().toLowerCase()))
                        $(this).show();
                });
            }
            else if (searchKey.trim() != "" && categories.length) {
                $("#articledraftListView #draftTab li").each(function () {
                    var articleName = $(this).find(".article-name").text().trim();
                    var artCategoryIds = $(this).find(".art-categories").text().split(',');
                    if (artCategoryIds.some(category => categories.includes(category)) && articleName.toLowerCase().startsWith(searchKey.trim().toLowerCase()))
                        $(this).show()
                });
            }
        }
    },
    _CategoryWiseFilter: function (category, searchKey) {
        if (articleTab == "publised") {
            $("#hdntxtpub-art").val(searchKey);
            if (category.length == 0 && searchKey == "") {
                QDMS.DocumentListing._PublishedArticleSection();
            }
            else {
                $("#articleListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
                $.ajax({
                    url: $("#hfdUrlPath").val() + '/Article/PublishedArtcileByFilter',
                    type: 'POST',
                    data: {
                        'categoryIds': category, 'serachKey': searchKey
                    },
                    crossDomain: true,
                    success: function (result) {
                        $("#articleTab").off("scroll");
                        $("#articleListView .tab-height .loaderoverlay").remove();
                        $("#articleListView #articleTab").html('');
                        var ArticleList = result.ArticlePublished;
                        if (ArticleList != null && ArticleList.length > 0) {

                            $.each(ArticleList, function () {
                                var artcile = "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderArticleView('" + this.Id + "')\"><span class=\"article-name\">"
                                    + this.AN + "</span></a><div class=\"art-site-list art-categories\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"version-container\">V "
                                    + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span> " + this.ApprovedBy + "  </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                                $("#articleListView #articleTab").append(artcile);
                            });
                        }
                        else {
                            $("#articleListView #articleTab").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Articles Available</h3></center>");
                        }
                    }
                });
            }
        }
        else if (articleTab == "drafted") {
            $("#hdntxtdraft-art").val(searchKey);
            if (category.length == 0 && searchKey == "")
                QDMS.DocumentListing._DraftedArticleSection();
            else {
                $("#articledraftListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

                $.ajax({
                    url: $("#hfdUrlPath").val() + '/Article/DraftedArtcileByFilter',
                    type: 'POST',
                    data: { 'categoryIds': category, 'serachKey': searchKey },
                    crossDomain: true,
                    success: function (result) {
                        $("#draftTab").off("scroll");
                        $("#articledraftListView .tab-height .loaderoverlay").remove();
                        $("#articledraftListView #draftTab").html('');

                        var DraftList = result.ArticleDraft;
                        if (DraftList != null && DraftList.length > 0) {
                            $.each(DraftList, function () {
                                var draftart = "<li id=\"" + this.Id + "\">";
                                draftart += "<a href=\"#\" title=\"" + this.TT + "\" onclick=\"RenderIsArticleDraftView('" + this.Id + "')\">";
                                draftart += "<span class=\"article-name\">" + this.AN + "<\/span><\/a>";
                                draftart += "<div class=\"art-site-list\"><label>Category : </label> <span>" + this.CIDS + "</span></div><div class=\"art-site-list by-name\"><label>Drafted By : </label> <span>" + this.DF + "</span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">" + this.D + "";
                                draftart += "<\/div><\/li>";
                                $("#articledraftListView #draftTab").append(draftart);
                            });
                        }
                        else {
                            $("#articledraftListView #draftTab").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Articles Available</h3></center>");
                        }
                    }
                });
            }
        }
    },
    _bindCategoryFilter: function () {
        $("#articlelist .filter-all-article").on("click", function () {
            var categoryIds = [];
            $("#articlelist .selected-cat").removeClass("selected-cat");
            $(this).addClass("selected-cat");
            //$("#articlelist .article-cat-filter").each(function () {
            //    categoryIds.push($(this).attr("data-categoryid"));
            //});
            var searchKey = $("#searchArticleKey").val().trim();
            $('.articlefiltercat').html($(this).text().trim() + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
            QDMS.DocumentListing._CategoryWiseFilter(categoryIds, searchKey);
        });
        $("#articlelist .article-cat-filter").on("click", function () {
            $("#articlelist .selected-cat").removeClass("selected-cat");
            $(this).addClass("selected-cat");
            var categoryId = $(this).attr("data-categoryid");
            var searchKey = $("#searchArticleKey").val().trim();
            $('.articlefiltercat').html($(this).text().trim() + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
            QDMS.DocumentListing._CategoryWiseFilter(categoryId, searchKey);
        });
    },
    _bindSerach: function () {

        $(".home-article-search #searchArticleKey").on("keypress", function (e) {

            if (e.keyCode == 13) {
                e.preventDefault();
                var categoryIds = [];
                $("#articlelist .selected-cat").each(function () {
                    if ($(this).attr("data-categoryid") != undefined)
                        categoryIds.push($(this).attr("data-categoryid"));
                });
                var searchKey = $(this).val().trim();
                e.stopImmediatePropagation();
                QDMS.DocumentListing._CategoryWiseFilter(categoryIds, searchKey);
            }

        });

        $("#refreshArticle").on("click", function (event) {
            event.stopImmediatePropagation();
            event.preventDefault();
            $(".c-tabs-nav__link1").removeClass("is-active");
            if (articleTab == "drafted") {
                $("#hdntxtdraft-art").val('');
                $("#ArticleDraftTab").addClass("is-active");
                QDMS.DocumentListing._DraftedArticleSection();
                $("#articledraftListView").show();
                $("#artiledraftlist").show();
                $("#articleListView").hide();
                $("#publishedArticleList").hide();
                $("#searchArticleKey").val('');
                $('.articlefiltercat').html("All" + '<i class="fa fa-caret-down" aria-hidden="true"></i>');

            } else if (articleTab == "publised") {
                $("#hdntxtpub-art").val('');
                $("#ArticlePublishTab").addClass("is-active");
                QDMS.DocumentListing._PublishedArticleSection();
                $("#articledraftListView").hide();
                $("#artiledraftlist").hide();
                $("#articleListView").show();
                $("#publishedArticleList").show();
                $("#searchArticleKey").val('');
                $('.articlefiltercat').html("All" + '<i class="fa fa-caret-down" aria-hidden="true"></i>');
            }
        });
    },
    _renderDraftList: function () {
        //$("#searchDocsKey").val('');
        $("#docDraftListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/draft/draftList';
        resetHistoryListView();
        resetBookmarkListView();
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#docDraftListView .tab-height .loaderoverlay").remove();

                var draftList = result.Documents;

                var strVar = ' <div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="draftDocs">';
                if (draftList != null && draftList.length > 0) {
                    $(".doc-search-box").show();
                    draftSkipCount = draftList.length;
                    $.each(draftList, function () {
                        strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderIsDraftView('" + this.Id + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.CID + "</span></div><div class=\"art-site-list by-name\"><label>Drafted by : </label> <span> " + this.DF + " </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });
                    $("#docDraftListView .tab-height").html(strVar + "</ul></div>");
                } else {
                    $("#docDraftListView .tab-height").html('<div class="tilecontainer"><center class="nodoc-message"><span class="noRecommendedDoc"></span><img src="' + $("#hdnNodocImg").val() + '"><br><br><h3>No Documents Available</h3></center></div>');
                    $(".doc-search-box").hide();
                }
                QDMS.DocumentListing._RenderDraftListOnDemand();
                QDMS.DocumentListing._bindDocSerach();
            }
        });
        AppendContentWindowXY();
    },
    _RenderDocList: function () {
        //$("#searchDocsKey").val('');
        $("#docListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
        var url = $("#hfdUrlPath").val() + '/document/docList';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $("#docListView .tab-height .loaderoverlay").remove();
                var documentList = result.Documents;

                if (documentList != null && documentList.length > 0) {
                    docSkipCount = documentList.length;
                    $(".doc-search-box").show();
                    var dataTag = '<div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="docs-published">';
                    $.each(documentList, function () {
                        dataTag = dataTag +
                            "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderDocView('" + this.Id + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div><div class=\"version-container\">V "
                            + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span> " + this.ApprovedBy + "  </span></div><div class=\"dateformat spnDocTreeListUTCDate\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });                    
                    $("#docListView .tab-height").html(dataTag + "</ul></div>");
                    ConvertUTCDateToLocalDate("spnDocTreeListUTCDate");
                } else {
                    $("#docListView .tab-height").html('<div class="tilecontainer"><center class="nodoc-message"><span class="noRecommendedDoc"></span><img src="' + $("#hdnNodocImg").val() + '"><br><br><h3>No Documents Available</h3></center></div>');
                    $(".doc-search-box").hide();
                }
                QDMS.DocumentListing._RenderDocListOnDemand();
                QDMS.DocumentListing._bindDocSerach();
            }
        });
        AppendContentWindowXY();
    },
    _RenderDocListOnDemand: function () {
        $("#docs-published").scroll(function (event) {

            var actualHeight = $(this).height();
            var scrollheight = $(this).prop('scrollHeight');
            var scrollTop = $(this).scrollTop();
            var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                $('#docListView .tab-height').append(scrollLoader);
                var url = $("#hfdUrlPath").val() + '/document/DocListOnDemand';
                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { 'skip': docSkipCount },
                    crossDomain: true,
                    success: function (result) {
                        $('.loaderoverlay').hide();
                        $('#docListView .tab-height').find('.scroll-loader').remove();

                        var documentList = result.Documents;

                        if (documentList != null && documentList.length > 0) {
                            docSkipCount += documentList.length;

                            $.each(documentList, function () {

                                var dataTag = "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderDocView('" + this.Id + "')\"><span class=\"doc-name\">"
                                    + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div><div class=\"version-container\">V "
                                    + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span> " + this.ApprovedBy + "  </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                                $("#docs-published").append(dataTag);
                            });
                        }
                    }
                });
            }
            event.stopImmediatePropagation();
        });
    },
    _RenderDraftListOnDemand: function () {
        $("#draftDocs").scroll(function (event) {

            var actualHeight = $(this).height();
            var scrollheight = $(this).prop('scrollHeight');
            var scrollTop = $(this).scrollTop();
            var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';
            //if ((scrollheight - actualHeight) == scrollTop)
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                $('#docDraftListView .tab-height').append(scrollLoader);
                var url = $("#hfdUrlPath").val() + '/draft/DraftListOnDemand';
                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { 'skip': draftSkipCount },
                    crossDomain: true,
                    success: function (result) {
                        $('.loaderoverlay').hide();
                        $('#docDraftListView .tab-height').find('.scroll-loader').remove();

                        var draftList = result.Documents;

                        if (draftList.length > 0) {
                            draftSkipCount += draftList.length;

                            $.each(draftList, function () {
                                var strVar = "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderIsDraftView('" + this.Id + "')\"><span class=\"doc-name\">"
                                    + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.CID + "</span></div><div class=\"art-site-list by-name\"><label>Drafted by : </label> <span> " + this.DF + " </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                                $("#draftDocs").append(strVar);
                            });
                        }
                    }
                });
            }
            event.stopImmediatePropagation();
        });
    },
    _renderFeaturedDocList: function () {
        $("#control-sidebar-recommended-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
        $("#RecommentedTab").addClass("active");
        $("#DraftedTab").removeClass("active");
        $("#PublishedTab").removeClass("active");
        $("#control-sidebar-published-tab").removeClass("active");
        $("#control-sidebar-drafts-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").addClass("active");
        $("#FlagDocumentTab").removeClass("active");
        $('.exp').show();
        $('.treeview-search').show();

        var url = $("#hfdUrlPath").val() + '/document/HighlightedDocList';
        resetHistoryListView();
        resetBookmarkListView();

        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-recommended-tab .tab-height .loaderoverlay").remove();
                $("#control-sidebar-recommended-tab #mw-panel").html('');
                var dataTag = "<ul id=\"homeRecommendedList\" class=\"sidebar-menunew indexartlclelist\">";
                if (result.RecommendedDocuments != null && result.RecommendedDocuments.length > 0) {

                    $.each(result.RecommendedDocuments, function () {
                        dataTag = dataTag +
                            "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderDocView('" + this.Id + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div><div class=\"version-container\">V "
                            + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span> " + this.ApprovedBy + "  </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });
                    $("#control-sidebar-recommended-tab #mw-panel").html(dataTag + "</ul>");
                }
                else {
                    var strVar = "<center class=\"nodoc-message\">";
                    strVar += "<span class=\"noRecommendedDoc\"><\/span>";
                    strVar += "<img src=\"" + $("#hdnNodocImg").val() + "\" \/><br><br>";
                    strVar += "<h3>No Recommended Documents<\/h3>";
                    strVar += "<div class=\"set-preferences-img\">";
                    strVar += "<h5>Add Tag & Category into your Preference settings to populate the Recommendation<\/h5>";
                    strVar += "<button onclick=\"UserProfileView()\" class=\"btn btn-default red-buttons\">Set Preferences<\/button>";
                    strVar += "<\/div><\/center>";
                    strVar += "<\/div><\/div>";
                    $("#control-sidebar-recommended-tab #mw-panel").html(strVar);
                }
            }
        });
        AppendContentWindowXY();
    },
    _RenderTreeViewList: function () {
        $("#control-sidebar-published-tab .tab-height .tilecontainer").remove();
        $("#treeSearchInput").val('');

        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#PublishedTab").addClass("active");

        $("#control-sidebar-published-tab").addClass("active");
        $("#control-sidebar-drafts-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-published-tab .treeview-collapse").show();
        $("#control-sidebar-published-tab .treeview-search").show();
        $(".listviewbutton").removeClass("collpsebutton-active");
        $(".treeviewbutton").addClass("collpsebutton-active");

        if (clientName === 'BP' || clientName === 'HURTIGRUTEN') {
            $("#IncludeFiles").prop('checked', true);
        } else {

            $("#IncludeFiles").prop('checked', false);
        }

        $('.exp').show();
        $('.treeview-search').show();

        $("#mw-panel").html('');
        $("#control-sidebar-published-tab .tab-height").append('<div class="treeviewloaderoverlay" style="display:block"></div>');
        var url = $("#hfdUrlPath").val() + '/document/DocumentListTreeView';

        $.ajax({
            url: url,
            type: 'POST',
            data: { 'IsFileInclude': $("#IncludeFiles").prop('checked') },
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-published-tab .tab-height .treeviewloaderoverlay").remove();
                $("#mw-panel").html(result);
                QDMS.DocumentListing._BindFolderContextMenu();
            }
        });
        AppendContentWindowXY();
    }, _FlagDocumentTreeViewList: function () {
        $("#DraftedTab").removeClass("active");
        $("#PublishedTab").removeClass("active");
        $("#RecommentedTab").removeClass("active");
        $("#control-sidebar-published-tab .tab-height .tilecontainer").remove();
        $("#treeSearchInput").val('');


        $("#control-sidebar-published-tab").addClass("active");
        $("#control-sidebar-drafts-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#control-sidebar-published-tab .treeview-collapse").show();
        $("#control-sidebar-published-tab .treeview-search").show();
        $(".listviewbutton").removeClass("collpsebutton-active");
        $(".treeviewbutton").addClass("collpsebutton-active");
        $(" #IncludeFiles").prop('checked', false);

        $("#mw-panel").html('');
        $("#control-sidebar-published-tab .tab-height").append('<div class="treeviewloaderoverlay" style="display:block"></div>');
        var url = $("#hfdUrlPath").val() + '/FlagManagement/GetFlagTreeListView';
        $("#FlagDocumentTab").addClass("active");
        $('.treeview-search').hide();
        $('.exp').hide();
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            data: { 'isActive': $("#fileMode").val() == "" || $("#fileMode").val() == "active" ? true : false, 'isDeleted': $("#fileMode").val() == "delete" ? true : false },
            success: function (result) {
                $("#control-sidebar-published-tab .tab-height .treeviewloaderoverlay").remove();
                $("#mw-panel").html(result);

                QDMS.DocumentListing._BindFolderContextMenu();
            }
        });
        AppendContentWindowXY();
    },
    _renderHomeDraftList: function () {
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#DraftedTab").addClass("active");

        $("#control-sidebar-published-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-drafts-tab").addClass("active");
        $("#control-sidebar-drafts-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/draft/draftList';
        resetHistoryListView();
        resetBookmarkListView();
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-drafts-tab .tab-height .loaderoverlay").remove();

                var draftList = result.Documents;
                var strVar = "<ul id=\"homeDraftList\" class=\"sidebar-menunew indexartlclelist\">";
                if (draftList.length > 0) {
                    homeDraftSkipCount = draftList.length;
                    $.each(draftList, function () {
                        strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderIsDraftView('" + this.Id + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.CID + "</span></div><div class=\"art-site-list by-name\"><label>Drafted by : </label> <span> " + this.DF + " </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });
                    $("#control-sidebar-drafts-tab #mw-panel").html(strVar + "</ul>");
                } else {
                    $("#control-sidebar-drafts-tab #mw-panel").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Documents Available</h3></center>");
                }
                QDMS.DocumentListing._RenderDraftListOnDemand();
            }
        });
        AppendContentWindowXY();
    },
    _RenderHomeDraftListOnDemand: function () {
        $("#homeDraftList").scroll(function (event) {

            var actualHeight = $(this).height();
            var scrollheight = $(this).prop('scrollHeight');
            var scrollTop = $(this).scrollTop();
            var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                $('#control-sidebar-drafts-tab .tab-height').append(scrollLoader);

                var url = $("#hfdUrlPath").val() + '/draft/DraftListOnDemand';
                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { 'skip': homeDraftSkipCount },
                    crossDomain: true,
                    success: function (result) {

                        $('#control-sidebar-drafts-tab .tab-height .scroll-loader').remove();

                        var draftList = result.Documents;

                        if (draftList.length > 0) {
                            homeDraftSkipCount += draftList.length;

                            $.each(draftList, function () {
                                var strVar = "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderIsDraftView('" + this.Id + "')\"><span class=\"doc-name\">"
                                    + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.CID + "</span></div><div class=\"art-site-list by-name\"><label>Drafted by : </label> <span> " + this.DF + " </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                                $("#control-sidebar-drafts-tab #homeDraftList").append(strVar);
                            });
                        }
                    }
                });
            }
            event.stopImmediatePropagation();
        });
    },
    _RenderHomeDocList: function () {
        $("#control-sidebar-published-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
        $('#DraftedTab').show();

        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $('#PublishedTab').addClass("active");
        $('.exp').show();
        $('.treeview-search').show();

        $('#PublishedTab').show();
        $("#control-sidebar-drafts-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-published-tab").addClass("active");
        $("#control-sidebar-published-tab .treeview-collapse").hide();
        $("#control-sidebar-published-tab .treeview-search").hide();
        $(".listviewbutton").addClass("collpsebutton-active");
        $(".treeviewbutton").removeClass("collpsebutton-active");
        var url = $("#hfdUrlPath").val() + '/document/docList';
        $.ajax({
            url: url,
            type: 'GET',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-published-tab .tab-height .loaderoverlay").remove();
                var documentList = result.Documents;
                if (documentList != null && documentList.length > 0) {
                    homeDocSkipCount = documentList.length;
                    var templateprefix = '<ul id="home-docs-published" class="sidebar-menu">';
                    var dataTag = '';
                    $.each(documentList, function () {
                        dataTag = dataTag +
                            '<li docid="' +
                            this.Id +
                            '" class="doclists ' + dateChecker(this) + '">' +
                            ' <a href="#" title="' +
                            this.TT +
                            '" onclick=\'RenderDocView("' +
                            this.Id + '")\'><span class="doc-title">' +
                            this.DN +
                            '</span></a><span class="doc-title-category" ><label> Category</label> : ' +
                            this.FP +
                            '</span><div class="version-container" >V ' +
                            this.NV +
                            '</div><span class="doc-title-category by-name"><label>Approved by</label> ' + this.ApprovedBy + '     </span><span class="dateformat spnDocTreeListUTCDate" style="font-size:10px; color: #666; margin-top:1px;" data-doc-date="">' +
                            this.D +
                            '</span>' +
                            '<ul class="contextMenu dropdown-menu" role="menu" style="display:none"><li><a tabindex="-1" href="#" docId="' +
                            this.Id +
                            '" class="print-window"><i class="fa fa-file-pdf-o"></i> Download Document</a></li><li><a tabindex="-1" href="#" docId="' +
                            this.Id +
                            '" class="new-window"><i class="fa fa-clone"></i> Open in New window</a></li><li><a tabindex="-1" href="#" docId="' +
                            this.Id +
                            '" class="email-window"><i class="fa fa-envelope-o"></i> Email Document</a></li></ul></li>';
                    });
                   
                    $("#mw-panel").html(templateprefix + dataTag);
                    ConvertUTCDateToLocalDate("spnDocTreeListUTCDate");
                    //if (siteFlag == 1) {
                    //    var siteToggler = '<span class="site-list-toggler"><i class="fa fa-angle-down" aria-hidden="true"></i></span>';
                    //    $("#mw-panel .doclists .site-list").append(siteToggler);
                    //}
                } else {
                    $("#mw-panel").html('<div class="tilecontainer"><center class="nodoc-message"><span class="noRecommendedDoc"></span><img src="' + $("#hdnNodocImg").val() + '"><br><br><h3>No Documents Available</h3></center></div>');
                }
                //$("#mw-panel").html(result);
                QDMS.DocumentListing._DateDisplay();
                QDMS.DocumentListing._BindContextmenu();
                QDMS.DocumentListing._RenderHomeDocListOnDemand();
            }
        });
        AppendContentWindowXY();
    },
    _RenderHomeDocListOnDemand: function () {
        $("#home-docs-published").scroll(function (event) {

            var actualHeight = $(this).height();
            var scrollheight = $(this).prop('scrollHeight');
            var scrollTop = $(this).scrollTop();
            var scrollLoader = '<div class="scroll-loader"><div class="tiny-loader"><div class="loadernew loader--style3" title="Loading"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="30px" height="30px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><path fill="#000" d="M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z" transform="rotate(269.835 25 25)"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 25 25" to="360 25 25" dur="0.6s" repeatCount="indefinite"></animateTransform></path></svg></div></div></div>';
            if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
                var url = $("#hfdUrlPath").val() + '/document/DocListOnDemand';
                $('#control-sidebar-published-tab .tab-height').append(scrollLoader);
                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { 'skip': homeDocSkipCount },
                    crossDomain: true,
                    success: function (result) {
                        $('.loaderoverlay').hide();
                        $('#control-sidebar-published-tab .tab-height').find('.scroll-loader').remove();
                        var documentList = result.Documents;

                        if (documentList != null && documentList.length > 0) {
                            homeDocSkipCount += documentList.length;

                            $.each(documentList, function () {

                                var dataTag = '<li docid="' +
                                    this.Id +
                                    '"  class="doclists ' + dateChecker(this) + '">' +
                                    ' <a href="#" title="' +
                                    this.TT +
                                    '" onclick=\'RenderDocView("' + this.Id + '")\'><span class="doc-title">' +
                                    this.DN +
                                    '</span></a><span class="doc-title-category" ><label> Category</label> : ' +
                                    this.FP +
                                    '</span><div class="version-container" >V ' +
                                    this.NV +
                                    '</div><span class="doc-title-category by-name"><label>Approved by</label> :  ' + this.ApprovedBy + ' </span><span class="dateformat spnDocTreePublishedDate" style="font-size:10px; color: #666; margin-top:1px;" data-doc-date="">' +
                                    this.D +
                                    '</span>' +
                                    '<ul class="contextMenu dropdown-menu" role="menu" style="display:none"><li><a tabindex="-1" href="#" docId="' +
                                    this.Id +
                                    '" class="print-window"><i class="fa fa-file-pdf-o"></i> Download Document</a></li><li><a tabindex="-1" href="#" docId="' +
                                    this.Id +
                                    '" class="new-window"><i class="fa fa-clone"></i> Open in New window</a></li><li><a tabindex="-1" href="#" docId="' +
                                    this.Id +
                                    '" class="email-window"><i class="fa fa-envelope-o"></i> Email Document</a></li></ul></li>';
                                $("#home-docs-published").append(dataTag);
                            });
                            ConvertUTCDateToLocalDate("spnDocTreePublishedDate");
                            $('#control-sidebar-published-tab .tab-height').find('.scroll-loader').remove();
                            $("#docs-published li.doclists").off("contextmenu");
                            $('a.new-window')
                                .click(function () {
                                    var id = $('a.new-window').attr("docId");
                                    OpenDocInNewTab(id);
                                    return false;
                                });
                            $('a.print-window')
                                .click(function () {
                                    var id = $(this).attr("docId");
                                    contextMenu = true;
                                    CommonFunc.DownloadPdf._GetPrintSettings(id);
                                    return false;
                                });
                            $('a.email-window')
                                .click(function () {
                                    var id = $('a.new-window').attr("docId");
                                    $("#container_link").hide();
                                    $('#Acknlwdge').fadeOut();
                                    $("#containerbookmark_link").hide();
                                    $("#containerDcrl_link").hide();
                                    $("#categoryMenu").show();
                                    QDMS.Email.SendMail(id);
                                    return false;
                                });
                            $(".sidebar-menu li").contextMenu({
                                menuSelector: ".contextMenu",
                                menuSelected: function (invokedOn, selectedMenu) {
                                    var msg = "You selected the menu item '" + selectedMenu.text() +
                                        "' on the value '" + invokedOn.text() + "'";
                                    //alert(msg);
                                }
                            });
                            ConvertUTCDateToLocalDate("spnDocTreePublishedDate");
                        }
                        QDMS.DocumentListing._DateDisplay();
                    }
                });
            }
            event.stopImmediatePropagation();
        });
    },
    _DateDisplay: function () {
        $("#home-docs-published .dateDisplay").remove();
        $(".temp-ul").children().unwrap();

        $(".itemToday:eq(0)").before("<li class='dateDisplay' data-childclass='itemToday'><span>Today</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemToday").wrapAll("<ul class=\"temp-ul\"></ul>");

        $(".itemYesterday:eq(0)").before("<li class='dateDisplay' data-childclass='itemYesterday'><span>Yesterday</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemYesterday").wrapAll("<ul class=\"temp-ul\"></ul>")

        $(".itemthisweek:eq(0)").before("<li class='dateDisplay' data-childclass='itemthisweek'><span>This Week</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemthisweek").wrapAll("<ul class=\"temp-ul\"></ul>");

        $(".lastweek:eq(0)").before("<li class='dateDisplay' data-childclass='lastweek'><span>Last Week</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".lastweek").wrapAll("<ul class=\"temp-ul\"></ul>");

        $(".itemthismonth:eq(0)").before("<li class='dateDisplay' data-childclass='itemthismonth'><span>This Month</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemthismonth").wrapAll("<ul class=\"temp-ul\"></ul>");

        $(".itemthisyear:eq(0)").before("<li class='dateDisplay' data-childclass='itemthisyear'><span>This Year</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemthisyear").wrapAll("<ul class=\"temp-ul\"></ul>");

        $(".itemolder:eq(0)").before("<li class='dateDisplay' data-childclass='itemolder'><span>Older</span><i class='fa fa-chevron-right fa-rotate-90' aria-hidden='true'></i></li>");
        $(".itemolder").wrapAll("<ul class=\"temp-ul\"></ul>");


        $('li.dateDisplay').on('click', function (event) {
            $this = $(this);
            $this.find('i').toggleClass('fa-rotate-90');
            $this.next(".temp-ul").slideToggle();
            event.stopImmediatePropagation();
        });
    },
    _BindContextmenu: function () {
        (function ($, window) {

            $.fn.contextMenu = function (settings) {

                return this.each(function () {

                    // Open context menu
                    $(this).on("contextmenu", function (e) {
                        // return native menu if pressing control
                        if (e.ctrlKey) return;
                        $("a.new-window").attr("docid", $(e.currentTarget).attr("docid"));
                        $("a.print-window").attr("docid", $(e.currentTarget).attr("docid"));
                        // $('a.new-window').attr("docid", )
                        //open menu
                        var $menu = $(settings.menuSelector)
                            .data("invokedOn", $(e.target))
                            .show()
                            .css({
                                position: "fixed",
                                left: getMenuPosition(e.clientX, 'width', 'scrollLeft'),
                                top: getMenuPosition(e.clientY, 'height', 'scrollTop')
                            })
                            .off('click')
                            .on('click', 'a', function (e) {
                                $menu.hide();

                                var $invokedOn = $menu.data("invokedOn");
                                var $selectedMenu = $(e.target);

                                settings.menuSelected.call(this, $invokedOn, $selectedMenu);
                            });

                        return false;
                    });

                    //make sure menu closes on any click
                    $('body').click(function () {
                        $(settings.menuSelector).hide();
                    });
                });

                function getMenuPosition(mouse, direction, scrollDir) {
                    var win = $(window)[direction](),
                        scroll = $(window)[scrollDir](),
                        menu = $(settings.menuSelector)[direction](),
                        position = mouse + scroll;

                    // opening menu would pass the side of the page
                    if (mouse + menu > win && menu < mouse)
                        position -= menu;

                    return position;
                }

            };


        })(jQuery, window);

        $(".sidebar-menu li").contextMenu({
            menuSelector: ".contextMenu",
            menuSelected: function (invokedOn, selectedMenu) {
                var msg = "You selected the menu item '" + selectedMenu.text() +
                    "' on the value '" + invokedOn.text() + "'";
                //alert(msg);
            }
        });

        $('a.new-window')
            .click(function () {
                var id = $('a.new-window').attr("docId");
                OpenDocInNewTab(id);
                return false;
            });
        $('a.print-window')
            .click(function () {
                var id = $(this).attr("docId");
                contextMenu = true;
                CommonFunc.DownloadPdf._GetPrintSettings(id);
                return false;
            });
        $('a.email-window')
            .click(function () {
                var id = $('a.new-window').attr("docId");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                QDMS.Email.SendMail(id);
                return false;
            });

        //prevent right click on context menu
        $(".print-window").on("contextmenu", function (e) {
            return false;
        });
        $(".new-window").on("contextmenu", function (e) {
            return false;
        });
        $(".email-window").on("contextmenu", function (e) {
            return false;
        });
    },
    _BindFolderContextMenu: function () {
        var Docs = [];
        var Files = [];
        var control = '';
        (function ($, window) {
            $.fn.contextMenu = function (settings) {
                return this.each(function () {
                    // Open context menu
                    $(this).on("contextmenu", function (e) {
                        // return native menu if pressing control
                        if (e.ctrlKey) return;

                        control = $(e.target);
                        if (!control.is("li"))
                            control = $(e.target).closest("li");

                        if (!control.hasClass("doc-folder"))
                            return;
                        //disable download menu if selected category having any sub categorires, Download only enabled for leaf nodes.
                        var node = $('#jstree').jstree('get_node', control.attr("id"));
                        var haveChildrens = node.children.filter((country) => country.startsWith("cat"));
                        $("#jstree").jstree("open_node", control.attr("id"));
                        var count = 0;
                        var emptySubnodes = haveChildrens.filter(function (i) { if ($("#" + i).hasClass("jstree-leaf")) count++; });

                        if ((haveChildrens.length > 0 && haveChildrens.length != count) || node.children.length == 0)
                            return;

                        $("a.download-folder").attr("data-categoryId", $(e.target).attr("data-categoryId") || $(e.target).closest("li").attr("data-categoryId"));
                        //open menu
                        var $menu = $(settings.menuSelector)
                            .data("invokedOn", $(e.target))
                            .show()
                            .css({
                                position: "fixed",
                                left: getMenuPosition(e.clientX, 'width', 'scrollLeft'),
                                top: getMenuPosition(e.clientY, 'height', 'scrollTop')
                            })
                            .off('click')
                            .on('click', '.download-folder', function (e) {
                                $menu.hide();
                                CommonFunc.DownloadPdf._downloadByFolder($(this).attr("data-categoryId"));
                                e.stopImmediatePropagation();
                            });

                        return false;
                    });

                    //make sure menu closes on any click
                    $('body').click(function () {
                        $(settings.menuSelector).hide();
                    });
                });

                function getMenuPosition(mouse, direction, scrollDir) {
                    var win = $(window)[direction](),
                        scroll = $(window)[scrollDir](),
                        menu = $(settings.menuSelector)[direction](),
                        position = mouse + scroll;

                    // opening menu would pass the side of the page
                    if (mouse + menu > win && menu < mouse)
                        position -= menu;

                    return position;
                }

            };


        })(jQuery, window);

        $("li.doc-folder:not('li.doctypedoc')").contextMenu({
            menuSelector: ".folder-contextMenu",
            menuSelected: function (invokedOn, selectedMenu) {
                var msg = "You selected the menu item '" + selectedMenu.text() +
                    "' on the value '" + invokedOn.text() + "'";
                //alert(msg);
            }
        });
    },
    _bindDocSerach: function () {
        $(".home-doc-search #searchDocsKey").on("keypress", function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                var searchKey = $(this).val().trim();
                e.stopImmediatePropagation();
                QDMS.DocumentListing._SerachDocFilter(searchKey);
            }
        });

        $("#refreshDocuments").on("click", function (event) {
            event.stopImmediatePropagation();
            event.preventDefault();
            $(".doc-tab-switch").removeClass("is-active");

            if (documentTab == "drafted") {
                $("#hdntxtdraft-doc").val('');
                $("#docDraftTab").addClass("is-active");
                QDMS.DocumentListing._renderDraftList();
                $("#docDraftListView").show();
                $("#docListView").hide();
                $("#searchDocsKey").val('');

            } else if (documentTab == "publised") {
                $("#hdntxtpub-doc").val('');
                $("#docPublishTab").addClass("is-active");
                QDMS.DocumentListing._RenderDocList();
                $("#docDraftListView").hide();
                $("#docListView").show();
                $("#searchDocsKey").val('');
            }
        });
    },
    _SerachDocFilter: function (searchKey) {
        if (documentTab == "publised") {
            $("#hdntxtpub-doc").val($("#searchDocsKey").val());
            if (searchKey == "") {
                QDMS.DocumentListing._RenderDocList();
            }
            else {
                $("#docListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');
                $.ajax({
                    url: $("#hfdUrlPath").val() + '/Document/PublishedDocumentsByFilter',
                    type: 'POST',
                    data: { 'serachKey': searchKey },
                    crossDomain: true,
                    success: function (result) {
                        $("#docs-published").off("scroll");
                        $("#docListView .tab-height .loaderoverlay").remove();
                        var documentList = result.Documents;
                        docSkipCount = 0;
                        if (documentList != null && documentList.length > 0) {
                            var dataTag = '<div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="docs-published">';
                            $.each(documentList, function () {
                                dataTag = dataTag +
                                    "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderDocView('" + this.Id + "')\"><span class=\"doc-name\">"
                                    + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div><div class=\"version-container\">V "
                                    + this.NV + "<\/div><div class=\"art-site-list by-name\"><label>Approved By : </label> <span>  " + this.ApprovedBy + "  </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                            });

                            $("#docListView .tab-height").html(dataTag + "</ul></div>");
                        } else {
                            $("#docListView .tab-height").html('<div class="tilecontainer"><center class="nodoc-message"><span class="noRecommendedDoc"></span><img src="' + $("#hdnNodocImg").val() + '"><br><br><h3>No Documents Available</h3></center></div>');
                        }
                    }
                });
            }
        }
        else if (documentTab == "drafted") {
            $("#hdntxtdraft-doc").val($("#searchDocsKey").val());
            if (searchKey == "")
                QDMS.DocumentListing._renderDraftList();
            else {
                $("#docDraftListView .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

                $.ajax({
                    url: $("#hfdUrlPath").val() + '/Draft/DraftedDocumentsByFilter',
                    type: 'POST',
                    data: { 'serachKey': searchKey },
                    crossDomain: true,
                    success: function (result) {
                        $("#draftDocs").off("scroll");
                        $("#docDraftListView .tab-height .loaderoverlay").remove();
                        var draftList = result.Documents;
                        draftSkipCount = 0;

                        var strVar = '<div id="mw-panel"><ul class="sidebar-menunew indexartlclelist" id="draftDocs">';
                        if (draftList != null && draftList.length > 0) {
                            $.each(draftList, function () {
                                strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                                    + this.TT + "\" onclick=\"RenderIsDraftView('" + this.Id + "')\"><span class=\"doc-name\">"
                                    + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.CID + "</span></div><div class=\"art-site-list by-name\"><label>Drafted by : </label> <span> " + this.DF + " </span></div><div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:1px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div><\/li>";
                            });
                            $("#docDraftListView .tab-height").html(strVar + "</ul></div>");
                        } else {
                            $("#docDraftListView .tab-height").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Documents Available</h3></center>");
                        }
                    }
                });
            }
        }
    },
    _PendingForAction: function () {
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#PendingTab").addClass("active");

        $("#control-sidebar-published-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-drafts-tab").addClass("active");
        $("#control-sidebar-drafts-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/Document/PendingForAction';
        resetHistoryListView();
        resetBookmarkListView();
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-drafts-tab .tab-height .loaderoverlay").remove();

                var draftList = result;

                var strVar = "<ul id=\"homeDraftList\" class=\"sidebar-menunew indexartlclelist\">";
                if (draftList.length > 0) {
                    $.each(draftList, function () {
                        strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderFromEditView('" + this.Id + "','view','" + viewMode + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div>"
                            + "<div class=\"art-site-list by-name displayBlock\"><label>Drafted by : </label> <span> " + this.DF + " </span></div>";
                        if (this.RF != "")
                            strVar += "<div class=\"art-site-list by-name displayBlock\"><label>Reviewed by : </label> <span> " + this.RF + " </span></div>";

                        if (this.PM == "reviewsubmit")
                            strVar += "<div class=\"approval-tag\">Pending for Review</div>";

                        if (this.PM == "approvesubmit")
                            strVar += "<div class=\"approval-tag\">Pending for Approve</div>";


                        strVar += "<div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:-19px;\" data-doc-date=\"\">"
                            + this.D + " <\/div><\/li>";
                    });
                    $("#control-sidebar-drafts-tab #mw-panel").html(strVar + "</ul>");
                } else {
                    $("#control-sidebar-drafts-tab #mw-panel").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Documents Available</h3></center>");
                }
            }
        });
        AppendContentWindowXY();
    },
    _RejectedDocs: function () {
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#RejectedTab").addClass("active");

        $("#control-sidebar-published-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-drafts-tab").addClass("active");
        $("#control-sidebar-drafts-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/Document/RejectedDocuments';
        resetHistoryListView();
        resetBookmarkListView();
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-drafts-tab .tab-height .loaderoverlay").remove();

                var draftList = result;

                var strVar = "<ul id=\"homeDraftList\" class=\"sidebar-menunew indexartlclelist\">";
                if (draftList.length > 0) {
                    $.each(draftList, function () {
                        strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderFromEditView('" + this.Id + "','edit','" + viewMode + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div>"
                            + "<div class=\"art-site-list by-name displayBlock\"><label>Drafted by : </label> <span> " + this.DF + " </span></div>";
                        if (this.RF != "")
                            strVar += "<div class=\"art-site-list by-name displayBlock\"><label>Reviewed by : </label> <span> " + this.RF + " </span></div>";
                        if (this.RVR != "")
                            strVar += "<div class=\"art-site-list by-name displayBlock\"><label>Review Rejected by : </label> <span> " + this.RVR + " </span></div>";
                        if (this.AVR != "")
                            strVar += "<div class=\"art-site-list by-name displayBlock\"><label>Approve Rejected by : </label> <span> " + this.AVR + " </span></div>";

                        strVar += "<div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:-19px;\" data-doc-date=\"\">"
                            + this.D + " </div>";
                        if (this.RVRR.length > 140 || this.AVRR > 140) {
                            strVar += "<div class=\"art-site-list by-name\"><label class='reason-label'>Reason : </label>"
                                + "<span class='reason-span'> " + (this.RVRR.substring(0, 140) || this.AVRR.substring(0, 140))
                                + "<span class=\"extra-item\">" + (this.RVRR.substring(141) || this.AVRR.substring(141)) + "</span>"
                                + "<span class=\"extend\">...</span>"
                                + "<span class=\"dropOpen\">"
                                + "<div class=\"site-list-toggler\" onclick=\"QDMS.DocumentListing._SliderToggle(this)\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>"
                                + "</span></span>"
                                + "</div>";
                        }
                        else strVar += "<div class=\"art-site-list by-name\"><label class='reason-label'>Reason : </label> <span class='reason-span'> " + (this.RVRR || this.AVRR) + " </span></div>";

                    });
                    $("#control-sidebar-drafts-tab #mw-panel").html(strVar + "</li></ul>");
                } else {
                    $("#control-sidebar-drafts-tab #mw-panel").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Documents Available</h3></center>");
                }
            }
        });
        AppendContentWindowXY();
    },
    _EditedDocs: function () {
        $(".control-sidebar-tabs2 li.active").removeClass("active");
        $("#EditedTab").addClass("active");

        $("#control-sidebar-published-tab").removeClass("active");
        $("#control-sidebar-recommended-tab").removeClass("active");
        $("#control-sidebar-drafts-tab").addClass("active");
        $("#control-sidebar-drafts-tab .tab-height").append('<div class="loaderoverlay" style="display:block"></div>');

        var url = $("#hfdUrlPath").val() + '/Document/EditedDocuments';
        resetHistoryListView();
        resetBookmarkListView();
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $("#control-sidebar-drafts-tab .tab-height .loaderoverlay").remove();

                var draftList = result;

                var strVar = "<ul id=\"homeDraftList\" class=\"sidebar-menunew indexartlclelist\">";
                if (draftList.length > 0) {
                    $.each(draftList, function () {
                        strVar += "<li id=\"" + this.Id + "\"><a href=\"#\" title=\""
                            + this.TT + "\" onclick=\"RenderFromEditView('" + this.Id + "','edit','" + viewMode + "')\"><span class=\"doc-name\">"
                            + this.DN + "</span></a><div class=\"art-site-list doc-category\"><label>Category : </label> <span>" + this.FP + "</span></div>"
                            + "<div class=\"art-site-list by-name displayBlock\"><label>Drafted by : </label> <span> " + this.DF + " </span></div>";
                        if (this.RF != "")
                            strVar += "<div class=\"art-site-list by-name displayBlock\"><label>Reviewed by : </label> <span> " + this.RF + " </span></div>";

                        if (this.PM == "onapprove")
                            strVar += "<div class=\"approval-tag\"> On Approve</div>";

                        if (this.PM == "onreview" && this.AVRR == "")
                            strVar += "<div class=\"approval-tag\">On Review</div>";

                        if ((this.PM == "editordraft" || this.PM == "reviewerdraft" || this.PM == "onreview") && (this.RVRR != "" || this.AVRR != "")) {
                            if (this.PM == "editordraft")
                                strVar += "<div class=\"approval-tag approval-tag-long\">Review Request Rejected</div>";

                            if (this.PM == "reviewerdraft" || this.PM == "onreview")
                                strVar += "<div class=\"approval-tag approval-tag-long\">Approve Request Rejected</div>";

                            if (this.RVRR.length > 140 || this.AVRR > 140) {
                                strVar += "<div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:-19px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div>";

                                strVar += "<div class=\"art-site-list by-name\"><label class='reason-label'>Reason : </label>"
                                    + "<span class='reason-span'> " + (this.RVRR.substring(0, 140) || this.AVRR.substring(0, 140))
                                    + "<span class=\"extra-item\">" + (this.RVRR.substring(141) || this.AVRR.substring(141)) + "</span>"
                                    + "<span class=\"extend\">...</span>"
                                    + "<span class=\"dropOpen\">"
                                    + "<div class=\"site-list-toggler\" onclick=\"QDMS.DocumentListing._SliderToggle(this)\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>"
                                    + "</span></span>"
                                    + "</div>";
                            }
                            else {
                                strVar += "<div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:-19px;\" data-doc-date=\"\">"
                                    + this.D + " <\/div>";
                                strVar += "<div class=\"art-site-list by-name\"><label class='reason-label'>Reason : </label> <span class='reason-span'> " + (this.RVRR || this.AVRR) + " </span></div></li>";
                            }
                        }
                        else {
                            strVar += "<div class=\"dateformat\" style=\"font-size:10px; color: #666; margin-top:-19px;\" data-doc-date=\"\">"
                                + this.D + " <\/div></li>";
                        }

                    });
                    $("#control-sidebar-drafts-tab #mw-panel").html(strVar + "</ul>");
                } else {
                    $("#control-sidebar-drafts-tab #mw-panel").html("<center class=\"nodoc-message\"><span class=\"noRecommendedDoc\"></span><img src=\"" + $("#hdnNodocImg").val() + "\"><br><br><h3>No Documents Available</h3></center>");
                }
            }
        });
        AppendContentWindowXY();
    },
    _SliderToggle: function (control) {
        var control = $(control).parent().closest(".reason-span");
        control.find(".extra-item").toggleClass("openMessage");
        if (control.find(".extra-item").hasClass("openMessage")) {
            control.text(control.contents().first().text() + control.find(".extra-item").text());
            control.append("<span class=\"extend\" style='display:none'>...</span>");
            var toggleButton = "<span class=\"dropOpen\">"
                + "<div class=\"site-list-toggler\" onclick=\"QDMS.DocumentListing._SliderToggle(this)\"> <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i></div>"
                + "</span>";
            control.append(toggleButton);
        }
        else {

            if (control.contents().first().text().length > 140) {
                var extraText = control.contents().first().text().substring(141);
                control.text(control.contents().first().text().substring(0, 140));
                control.append("<span class=\"extra-item\">" + extraText + "</span>");
                control.append("<span class=\"extend\">...</span>");
                var toggleButton = "<span class=\"dropOpen\">"
                    + "<div class=\"site-list-toggler\" onclick=\"QDMS.DocumentListing._SliderToggle(this)\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></div>"
                    + "</span>";
                control.append(toggleButton);
            }
        }
    }
}

function HighlighAreaSection() {

    $(".remove-template,.copy-template,.drag-template,.edit-template,.add-toc").hover(function () {
        $(this).closest('tr').css("outline", "#bc4078 auto 1px");
    }, function () {
        $(this).closest('tr').css("outline", "none");
    });
}

var fileuploadHeightSpec = function () {
    var uploadcontainer = $('.file-body').height(),
        searcharea = $('#Sercharea').height() + $('#fileDataUpload').height(),
        uploadfileareaHeight = uploadcontainer - searcharea;

    $('#fileLoaded').css('height', uploadfileareaHeight - 150);
}

function percentageLoaderPostFunction() {
    var width = 100,
        perfData = window.performance.timing,
        EstimatedTime = perfData.responseEnd - perfData.requestStart, //-(perfData.loadEventEnd - perfData.navigationStart),
        time = Math.abs(parseInt((EstimatedTime / 1000) % 60) * 100) + 1500;

    $(".loadbar").animate({
        width: width + "%"
    }, time);

    var PercentageID = $("#precent"),
        start = 0,
        end = 100,
        duration = time + 20;
    animateValue(PercentageID, start, end, duration);

    function animateValue(id, start, end, duration) {

        var range = end - start,
            current = start,
            increment = end > start ? 1 : -1,
            stepTime = Math.abs(Math.floor(duration / range)),
            obj = $(id);

        var timer = setInterval(function () {
            current += increment;
            $(obj).text(current + "%");
            if (current == end) {
                clearInterval(timer);
            }
        }, stepTime);
    }

    setTimeout(function () {
        $('.preloader-wrap').delay(1500).fadeOut(300);
        $(".loader10").hide();
    }, time);
}


function completloader() {
    $('.preloader-wrap').fadeOut(300);
    $(".loader10").hide();
}


function percentageLoader() {
    // window.performance.clearMarks();
    var width = 100,
        perfData = window.performance.timing,
        EstimatedTime = (perfData.domComplete) - (perfData.domLoading) //-(perfData.loadEventEnd - perfData.navigationStart),
    var time = Math.abs(parseInt(((EstimatedTime) / 1000) % 60) * 100) + 4500


    $(".loadbar").animate({
        width: width + "%"
    }, time);

    var PercentageID = $("#precent"),
        start = 0,
        end = 100,
        duration = time + 20;
    animateValue(PercentageID, start, end, duration);

    function animateValue(id, start, end, duration) {

        var range = end - start,
            current = start,
            increment = end > start ? 1 : -1,
            stepTime = Math.abs(Math.floor(duration / range)),
            obj = $(id);

        var timer = setInterval(function () {
            current += increment;
            $(obj).text(current + "%");
            if (current == end) {
                clearInterval(timer);
            }
        }, stepTime);
    }

    setTimeout(function () {
        $('.preloader-wrap').delay(600).fadeOut(300);
        $(".loader10").hide();
    }, time);
}

function percentageLoaderForViewDoc(timer) {
    var perfData = window.performance.timing,
        EstimatedTime = -(perfData.loadEventEnd - perfData.navigationStart),
        time = Math.abs(parseInt((EstimatedTime / 1000) % 60) * 100) + 2500;

    var PercentageID = $("#precent"),
        start = 0,
        end = 100,
        duration = time //+ 5000;


    var range = end - start,
        current = start,
        increment = 1,
        stepTime = Math.abs(Math.floor(duration / range));

    timer = setInterval(function () {

        //if ($("#precent").text() == "100%") {
        //    clearInterval(timer);
        //    current = 100; $(".loadbar").css("width", "100%");
        //    $("#precent").text("100%");
        //    $('.preloader-wrap').hide();
        //    $(".loader10").hide();
        //}

        if (current >= 100) {
            clearInterval(timer);
            current = 100;
            $(".loadbar").css("width", "100%");
            $("#precent").text("100%");
            $('.preloader-wrap').delay(1500).fadeOut(300);
            $(".loader10").hide();
        }
        else if (current < 99) {
            current += increment;
            $(".loadbar").css("width", current + "%");
            $("#precent").text(current + "%");
        }
        else if (current == 99) {
            $(".loadbar").css("width", "99%");
            $("#precent").text("99%");
        }
    }, stepTime);
    return timer;

}
function CloseTimer(timer) {
    clearInterval(timer);
}
function resetPercentageloader() {
    $("#precent").html("0%");
    $(".loadbar").css("width", "0%");
    setTimeout(function () {
        $('.preloader-wrap').show();
        $(".loadbar").delay(1600).animate({
            width: 0 + "%"
        }, 0);
    }, 0);
}

function loadJsonError(e) {
    console.log(e);
}

function showrequestDCRLUsersList(DocID) {

    var LoderHtmlTiny = "<li><div class=\"tiny-loader\"><div class=\"loadernew loader--style3\" title=\"Loading\"><svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\"><path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\" transform=\"rotate(300 25 25)\">";
    LoderHtmlTiny = LoderHtmlTiny + "<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div></div></li>";
    $("#DCRLComments-list ul").html(LoderHtmlTiny);
    $.ajax({
        type: 'POST',
        url: $("#hfdUrlPath").val() + '/RequestChange/GetLedgerDocumentCommentsOnEdit',
        data: { "ID": DocID },
        success: function (result) {
            console.log(result);

            if (result != null) {
                var CustmHtml = "<ul id='CommentUL'>";
                $("#DCRLComments-list ul").html("");
                if (result.length > 0) {
                    for (var i = 0; i < result.length; i++) {

                        var AppentHtml = "<li  id=\"" + result[i].Id + "\"  class=\"dcrlcomment-item\"><div class='exp' style='display:inline-block;vertical-align:middle;margin-top:7px;float:left'><span class='checkbox'><span><input type='checkbox' id='Chk_" + result[i].Id + "' data-commentid='" + result[i].Id + "' class='selectFile checkicon'><label for='Chk_" + result[i].Id + "'><span></span></label></span></span></div><div style=\"margin-left:19%;\"><span  onclick= DCRLeditModel.ProceedComments.LoadDocViewOnEditor('" + result[i].Id + "\') class=\"dcrlcommentTitle\">" + result[i].UserName + "</span><span class=\"dcrl-cmnt-time\">" + result[i].CommentTime + "</span></div></li>";
                        $("#DCRLComments-list ul").append(AppentHtml);


                    }
                }
                else {
                    var AppentHtml = "<li class=\"dcrlcomment-item\"><span style=\"padding-left: 32px;color:red\"> No Request Change Found !</span></li>";
                    $("#DCRLComments-list ul").append(AppentHtml);
                }

            }
        }
    });
}

function ShowDCRLDocument(DocId, CommentId) {

    $(".loader10").show();
    $.ajax({
        type: 'POST',
        url: $("#hfdUrlPath").val() + '/Document/RequestChangeDocView',
        data: { "DocID": DocId, "CommentID": CommentId },
        success: function (result) {
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $("#containerDcrl_link").show();
            $(".dcrl-tab-strip ").show()
            $(".dcrl-tab-strip ").show()
            $("#categoryMenu").show();
            RequestChangeComment.DCRL.LedgerCommentsOnView(CommentId);
            $(".drg-rmv-settings-toc-copy").html('');
            $(".add-bookmark").remove();
            $(".add-comment").remove();
            //$(".bookmark-settings").html("");
            $(".drg-rmv-toc-copy").html('');
            $(".drg-rmv-settings-copy").html('');
            $(".drg-rmv-copy").html('');
            $(".drg-rmv-settings").html('');
            $(".drg-rmv").html('');
            $(".drg-rmv-toc-copy").html('');
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartViewPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }

                });
                if ($("#tableDragger .SubHeader1").length > 0) {
                    $("#tableDragger .SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }



                if ($("#tableDragger").find(".article-table").find(".SubHeader1").length > 0) {
                    debugger
                    $("#tableDragger").find(".article-table").find(".SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }

            }

            $(".toggle-article").click(function () {
                $(this).toggleClass('opentoggle');
                if ($(this).closest("tr.draggable-item").find(".article-table").hasClass("NewDataArt") == false) {
                    ArticleData($(this).closest("tr.draggable-item").find(".article-table"), $("#IsDCRLCycle").val(), false, $("#Id").val());
                }

            });

            // article load based on scroll which are not commented
            $(".viewdoc").scroll(function () {

                var viewRangeStart = $(this).offset().top;
                var viewRangeEnd = viewRangeStart + $(this).height();
                var eleTop = $(this).offset().top;
                var eleBottom = eleTop + $(this).height();

                $(this).find(".article-table[data-visible='false']").filter(function () {
                    var eleTop = $(this).offset().top;
                    var eleBottom = eleTop + $(this).height();
                    if ((eleBottom <= viewRangeEnd) && (eleTop >= viewRangeStart)) {

                        if ($(this).attr("data-visible") == "false") {
                            $(this).attr("data-visible", true);
                            ArticleData($(this), $("#IsDCRLCycle").val(), false, $("#Id").val());
                        }
                    }

                });

            });

            if ($("#tableDragger .SubHeader1").length > 0) {
                $("#tableDragger .SubHeader1").each(function () {
                    if ($(this).find("span").html() === '') {
                        let divcontent = $(this).parent().children('div')[0].outerHTML
                        $(this).parent().children('div')[0].remove();
                        if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                            $(this).parent().children('p')[1].remove();
                        $(this).find("span").append(divcontent);
                    }
                });
            }






            if (clientName !== null && clientName === "MOL") {
                var WikiApproverList = $("#hdnWikiApproverList").val();
                var k = $(".headerTemplate").length;
                for (i = 0; i <= k; i++) {
                    if (WikiApproverList.includes($("#hdnPublishedBy").val())) {
                        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text("Akihiro Yamauchi");
                    }
                    else {
                        $("#tableDragger").find(".headerTemplate").eq(i).find("#approver").text($("#hdnPublishedBy").val());
                    }
                }
            }
        }
    });
}

function ShowDCRLHistoryDocument(CommentId, DocId) {

    $(".loader10").show();
    $.ajax({
        type: 'POST',
        url: $("#hfdUrlPath").val() + '/Document/UserRequestChangeDocView',
        data: { "CommentID": CommentId, "DocID": DocId },
        success: function (result) {
            $(".loader10").hide();
            $("#contentWindow").html(result);
            $("#containerDcrl_link").show();
            $(".dcrl-tab-strip ").show()
            $("#categoryMenu").show();
            RequestChangeComment.DCRL.RenderUserCommentsOnView(CommentId);
            $(".drg-rmv-settings-toc-copy").html('');
            $(".add-bookmark").remove();
            //$(".add-comment").remove();
            $(".drg-rmv-toc-copy").html('');
            $(".drg-rmv-settings-copy").html('');
            $(".drg-rmv-copy").html('');
            $(".drg-rmv-settings").html('');
            $(".drg-rmv").html('');
            $(".drg-rmv-toc-copy").html('');
            $("body").addClass("docInfo-panel-close");
            $("#template-tools-tab").find(".tab-1, .tab-2,.tab-3").removeClass("active");
            if ($("#tableDragger >tr.flowchartDragger").length > 0) // have flow chart control read diagram from json value.
            {
                $("#tableDragger >tr.flowchartDragger").each(function () {
                    var TrID = $(this).find(".flow-chart-editor").attr("id");
                    $(this).find(".flow-chart-editor").removeAttr("onfocusout");
                    if (TrID != "") {
                        // initalize the GoJs Diagram objectas globaly.
                        _FlowchartViewPanel(TrID);
                        window['myDiagram_' + TrID].model = go.Model.fromJson(document.getElementById("mySavedModel_" + TrID).value);

                    }


                });

            }
            // article load based on scroll which are not commented
            $(".viewdoc").scroll(function () {
                var viewRangeStart = $(this).offset().top;
                var viewRangeEnd = viewRangeStart + $(this).height();
                var eleTop = $(this).offset().top;
                var eleBottom = eleTop + $(this).height();

                $(this).find(".article-table[data-visible='false']").filter(function () {
                    var eleTop = $(this).offset().top;
                    var eleBottom = eleTop + $(this).height();
                    if ((eleBottom <= viewRangeEnd) && (eleTop >= viewRangeStart)) {

                        if ($(this).attr("data-visible") == "false") {
                            $(this).attr("data-visible", true);
                            ArticleData($(this), $("#IsDCRLCycle").val(), false, $("#Id").val());
                        }
                    }

                });

                if ($("#tableDragger .SubHeader1").length > 0) {
                    $("#tableDragger .SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }



                if ($("#tableDragger").find(".article-table").find(".SubHeader1").length > 0) {
                    debugger
                    $("#tableDragger").find(".article-table").find(".SubHeader1").each(function () {
                        if ($(this).find("span").html() === '') {
                            let divcontent = $(this).parent().children('div')[0].outerHTML
                            $(this).parent().children('div')[0].remove();
                            if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                                $(this).parent().children('p')[1].remove();
                            $(this).find("span").append(divcontent);
                        }
                    });
                }
            });

        }
    });
}

function docSetBodyFont() {
    if ($("#DocumentType").val() == "1") {
        $("#tableDragger").find(".textDragger").each(function () {
            $(this).find("table.draggable-item").addClass("guidlisce");
            $(this).find("table.draggable-item").removeClass("Procedure");
        });
        $("#tableDragger").find(".singleCol-text").each(function () {
            $(this).closest("tr").closest("table.draggable-item").addClass("guidlisce");
            $(this).closest("tr").closest("table.draggable-item").removeClass("Procedure");
        });
        $("#tableDragger").find(".section-class-one").each(function () {
            $(this).closest("tr").closest("table.draggable-item").addClass("guidlisce");
            $(this).closest("tr").closest("table.draggable-item").removeClass("Procedure");
        });
        $("#tableDragger").find(".ul-box").each(function () {
            $(this).addClass("guidlisce");
            $(this).removeClass("Procedure");
        });
        $("#tableDragger").find(".ol-box").each(function () {
            $(this).addClass("guidlisce");
            $(this).removeClass("Procedure");
        });
        $("#tableDragger").find(".ul-alpha-box").each(function () {
            $(this).addClass("guidlisce");
            $(this).removeClass("Procedure");
        });
        $("#tableDragger").find(".ul-hyp-box").each(function () {
            $(this).addClass("guidlisce");
            $(this).removeClass("Procedure");
        });
        $("#tableDragger").find(".ul-chk-box").each(function () {
            $(this).addClass("guidlisce");
            $(this).removeClass("Procedure");
        });
    } else {
        $("#tableDragger").find(".textDragger").each(function () {
            $(this).find("table.draggable-item").addClass("Procedure");
            $(this).find("table.draggable-item").removeClass("guidlisce");
        });
        $("#tableDragger").find(".singleCol-text").each(function () {
            $(this).closest("tr").closest("table.draggable-item").addClass("Procedure");
            $(this).closest("tr").closest("table.draggable-item").removeClass("guidlisce");
        });
        $("#tableDragger").find(".section-class-one").each(function () {
            $(this).closest("tr").closest("table.draggable-item").addClass("Procedure");
            $(this).closest("tr").closest("table.draggable-item").removeClass("guidlisce");
        });
        $("#tableDragger").find(".ul-box").each(function () {
            $(this).addClass("Procedure");
            $(this).removeClass("guidlisce");
        });
        $("#tableDragger").find(".ol-box").each(function () {
            $(this).addClass("Procedure");
            $(this).removeClass("guidlisce");
        });
        $("#tableDragger").find(".ul-alpha-box").each(function () {
            $(this).addClass("Procedure");
            $(this).removeClass("guidlisce");
        });
        $("#tableDragger").find(".ul-hyp-box").each(function () {
            $(this).addClass("Procedure");
            $(this).removeClass("guidlisce");
        });
        $("#tableDragger").find(".ul-chk-box").each(function () {
            $(this).addClass("Procedure");
            $(this).removeClass("guidlisce");
        });
    }
}

function _FlowchartEditPanel(ID) {

    var GoJs = go.GraphObject.make;  // for conciseness in defining templates
    $(".flow-chart-editor").css("width", "auto");

    var myDiagram_ID = GoJs(go.Diagram, ID,  // must name or refer to the DIV HTML element
        {

            allowDrop: true,  // must be true to accept drops from the Palette
            "grid.visible": true,
            "grid.gridCellSize": new go.Size(20, 20),
            "draggingTool.dragsLink": true,
            "draggingTool.dragsLink": true,
            "draggingTool.isGridSnapEnabled": true,
            "linkingTool.isUnconnectedLinkValid": true,
            "linkingTool.portGravity": 20,
            "relinkingTool.isUnconnectedLinkValid": true,
            "relinkingTool.portGravity": 20,
            "relinkingTool.fromHandleArchetype":
                GoJs(go.Shape, "Diamond", { segmentIndex: 0, cursor: "pointer", desiredSize: new go.Size(8, 8), fill: "tomato", stroke: "darkred" }),
            "relinkingTool.toHandleArchetype":
                GoJs(go.Shape, "Diamond", { segmentIndex: -1, cursor: "pointer", desiredSize: new go.Size(8, 8), fill: "darkred", stroke: "tomato" }),
            "linkReshapingTool.handleArchetype":
                GoJs(go.Shape, "Diamond", { desiredSize: new go.Size(7, 7), fill: "lightblue", stroke: "deepskyblue" }),
            rotatingTool: GoJs(TopRotatingTool),  // defined below
            "rotatingTool.snapAngleMultiple": 15,
            "rotatingTool.snapAngleEpsilon": 15,
            "undoManager.isEnabled": true,
            initialContentAlignment: go.Spot.Center
        });

    // when the document is modified, add a "*" to the title and enable the "Save" button
    myDiagram_ID.addDiagramListener("Modified", function (e) {
        var button = document.getElementById("SaveButton");
        if (button) button.disabled = !myDiagram_ID.isModified;
        var idx = document.title.indexOf("*");
        if (myDiagram_ID.isModified) {
            if (idx < 0) document.title += "*";
        } else {
            if (idx >= 0) document.title = document.title.substr(0, idx);
        }
    });
    myDiagram_ID.addModelChangedListener(function (evt) {
        // ignore unimportant Transaction events
        if (evt.isTransactionFinished) {
            QDMS.FlowChart.SaveSvgImage($("#" + ID));
        };
    });

    // Define a function for creating a "port" that is normally transparent.
    // The "name" is used as the GraphObject.portId, the "spot" is used to control how links connect
    // and where the port is positioned on the node, and the boolean "output" and "input" arguments
    // control whether the user can draw links from or to the port.
    function makePort(name, spot, output, input) {
        // the port is basically just a small transparent square
        return GoJs(go.Shape, "Circle",
            {
                fill: null,  // not seen, by default; set to a translucent gray by showSmallPorts, defined below
                stroke: null,
                desiredSize: new go.Size(7, 7),
                alignment: spot,  // align the port on the main Shape
                alignmentFocus: spot,  // just inside the Shape
                portId: name,  // declare this object to be a "port"
                fromSpot: spot, toSpot: spot,  // declare where links may connect at this port
                fromLinkable: output, toLinkable: input,  // declare whether the user may draw links to/from here
                cursor: "pointer"  // show a different cursor to indicate potential link point
            });
    }
    function nodeStyle() {
        return [
            // The Node.location comes from the "loc" property of the node data,
            // converted by the Point.parse static method.
            // If the Node.location is changed, it updates the "loc" property of the node data,
            // converting back using the Point.stringify static method.
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            {
                // the Node.location is at the center of each node
                locationSpot: go.Spot.Center
            }
        ];
    }
    function textStyle() {
        return {
            font: "bold 11pt Helvetica, Arial, sans-serif",
            stroke: "whitesmoke"
        }
    }
    var nodeSelectionAdornmentTemplate =
        GoJs(go.Adornment, "Auto",
            GoJs(go.Shape, { fill: null, stroke: "#bf374d", strokeWidth: 1.5, strokeDashArray: [4, 2] }),
            GoJs(go.Placeholder)
        );

    var nodeResizeAdornmentTemplate =
        GoJs(go.Adornment, "Spot",
            { locationSpot: go.Spot.Right },
            GoJs(go.Placeholder),
            GoJs(go.Shape, { alignment: go.Spot.TopLeft, cursor: "nw-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { alignment: go.Spot.Top, cursor: "n-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { alignment: go.Spot.TopRight, cursor: "ne-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),

            GoJs(go.Shape, { alignment: go.Spot.Left, cursor: "w-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { alignment: go.Spot.Right, cursor: "e-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),

            GoJs(go.Shape, { alignment: go.Spot.BottomLeft, cursor: "se-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { alignment: go.Spot.Bottom, cursor: "s-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { alignment: go.Spot.BottomRight, cursor: "sw-resize", desiredSize: new go.Size(6, 6), fill: "#bf374d", stroke: "#bf374d" })
        );

    var nodeRotateAdornmentTemplate =
        GoJs(go.Adornment,
            { locationSpot: go.Spot.Center, locationObjectName: "CIRCLE" },
            GoJs(go.Shape, "Circle", { name: "CIRCLE", cursor: "pointer", desiredSize: new go.Size(7, 7), fill: "#bf374d", stroke: "#bf374d" }),
            GoJs(go.Shape, { geometryString: "M3.5 7 L3.5 30", isGeometryPositioned: true, stroke: "deepskyblue", strokeWidth: 1.5, strokeDashArray: [4, 2] })
        );

    myDiagram_ID.nodeTemplate =
        GoJs(go.Node, "Spot",
            { locationSpot: go.Spot.Center },
            //{ movable: true}, 
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            { selectable: true, selectionAdornmentTemplate: nodeSelectionAdornmentTemplate },
            { resizable: true, resizeObjectName: "PANEL", resizeAdornmentTemplate: nodeResizeAdornmentTemplate },
            { rotatable: true, rotateAdornmentTemplate: nodeRotateAdornmentTemplate },
            new go.Binding("angle").makeTwoWay(),
            // the main object is a Panel that surrounds a TextBlock with a Shape
            GoJs(go.Panel, "Auto",
                { name: "PANEL" },
                new go.Binding("desiredSize", "size", go.Size.parse).makeTwoWay(go.Size.stringify),
                GoJs(go.Shape, "Rectangle",  // default figure
                    {
                        portId: "", // the default port: if no spot on link data, use closest side
                        fromLinkable: true, toLinkable: true, cursor: "pointer",
                        fill: "white",  // default color
                        strokeWidth: 1
                    },
                    new go.Binding("figure"),
                    new go.Binding("fill")),
                GoJs(go.TextBlock,
                    {
                        font: "11pt Calibri",
                        margin: 8,
                        alignment: go.Spot.Top,
                        maxSize: new go.Size(NaN, NaN),
                        /*  maxSize: new go.Size(160, NaN),*/
                        wrap: go.TextBlock.WrapFit,
                        editable: true
                    },
                    new go.Binding("text").makeTwoWay())
            ),
            // four small named ports, one on each side:
            makePort("T", go.Spot.Top, false, true),
            makePort("L", go.Spot.Left, true, true),
            makePort("R", go.Spot.Right, true, true),
            makePort("B", go.Spot.Bottom, true, false),
            { // handle mouse enter/leave events to show/hide the ports
                mouseEnter: function (e, node) { showSmallPorts(node, true); },
                mouseLeave: function (e, node) { showSmallPorts(node, false); }
            }
        );

    function showSmallPorts(node, show) {
        node.ports.each(function (port) {
            if (port.portId !== "") {  // don't change the default port, which is the big shape
                port.fill = show ? "rgba(0,0,0,.3)" : null;
            }
        });
    }

    var linkSelectionAdornmentTemplate =
        GoJs(go.Adornment, "Link",
            GoJs(go.Shape,
                // isPanelMain declares that this Shape shares the Link.geometry
                { isPanelMain: true, fill: null, stroke: "deepskyblue", strokeWidth: 0 })  // use selection object's strokeWidth
        );

    myDiagram_ID.linkTemplate =
        GoJs(go.Link,  // the whole link panel
            /*  { selectable: true, selectionAdornmentTemplate: linkSelectionAdornmentTemplate },*/
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding("points").makeTwoWay(),
            GoJs(go.Shape,  // the link path shape
                { isPanelMain: true, strokeWidth: 2 }),
            GoJs(go.Shape,  // the arrowhead
                { toArrow: "Standard", stroke: null }),
            GoJs(go.Panel, "Auto",
                new go.Binding("visible", "isSelected").ofObject(),
                GoJs(go.Shape, "RoundedRectangle",  // the link shape
                    { fill: "#F8F8F8", stroke: null }),
                GoJs(go.TextBlock,
                    {
                        textAlign: "center",
                        font: "10pt helvetica, arial, sans-serif",
                        stroke: "#919191",
                        margin: 2,
                        minSize: new go.Size(10, NaN),
                        editable: true
                    },
                    new go.Binding("text").makeTwoWay())
            )
        );

    myDiagram_ID.linkTemplateMap.add(
        'Oneendarrow',
        GoJs(
            go.Link, // the whole link panel
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding('points').makeTwoWay(),
            GoJs(
                go.Shape, // the link path shape
                { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
            ),
            GoJs(
                go.Shape, // the arrowhead
                { toArrow: "Standard", stroke: null }),
        )
    ),
        myDiagram_ID.linkTemplateMap.add(
            'Twoendarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),
                GoJs(
                    go.Shape, // the arrowhead
                    { toArrow: "Standard", stroke: null }),
                GoJs(
                    go.Shape, // the arrowhead
                    { fromArrow: "Backward", stroke: null }),
            )
        ),

        myDiagram_ID.linkTemplateMap.add(
            'Noarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),

            )
        ),

        myDiagram_ID.nodeTemplateMap.add("Comment",
            GoJs(go.Node, "Auto", nodeStyle(),

                { selectable: true, selectionAdornmentTemplate: nodeSelectionAdornmentTemplate },
                { resizable: true, resizeObjectName: "PANEL", resizeAdornmentTemplate: nodeResizeAdornmentTemplate },
                { rotatable: true, rotateAdornmentTemplate: nodeRotateAdornmentTemplate },

                new go.Binding("angle").makeTwoWay(),
                GoJs(go.Shape, "Rectangle",
                    { fill: "white", strokeWidth: 0 }),
                GoJs(go.TextBlock, textStyle(),
                    {
                        margin: 5,
                        maxSize: new go.Size(200, NaN),
                        wrap: go.TextBlock.WrapFit,
                        textAlign: "center",
                        editable: true,
                        font: "12pt Calibri",
                        stroke: '#454545'
                    },
                    new go.Binding("text").makeTwoWay()),
                // no ports, because no links are allowed to connect with a comment


            ));

    myDiagram_ID.mouseDrop = function (e) {
        //try {

        //    var _drawheigh = $($(e.event.target).closest(".flow-chart-editor").find('canvas').next()).find('div').height();

        //    $("#" + ID).css("height", _drawheigh + "px");
        //}
        //catch
        //{

        //}
        QDMS.FlowChart.SaveSvgImage($(e.event.target).closest(".flow-chart-editor"));
    };

    window['myDiagram_' + ID] = myDiagram_ID;

    $("#" + ID).resizable({
        helper: "ui-resizable-helper",
        handles: 's'
    });

}

function _FlowchartViewPanel(ID) {

    var GoJs = go.GraphObject.make;  // for conciseness in defining templates
    $(".flow-chart-editor").css("width", "auto");

    var myDiagram_ID = GoJs(go.Diagram, ID, {

        allowDrop: false,  // must be true to accept drops from the Palette
        "draggingTool.dragsLink": false,
        "draggingTool.isGridSnapEnabled": false,
        "linkingTool.isUnconnectedLinkValid": false,
        "relinkingTool.isUnconnectedLinkValid": false,
        "undoManager.isEnabled": false,
        initialContentAlignment: go.Spot.Center,
    });
    myDiagram_ID.position = new go.Point(0, 100);
    // Define a function for creating a "port" that is normally transparent.
    // The "name" is used as the GraphObject.portId, the "spot" is used to control how links connect
    // and where the port is positioned on the node, and the boolean "output" and "input" arguments
    // control whether the user can draw links from or to the port.

    function nodeStyle() {
        return [
            // The Node.location comes from the "loc" property of the node data,
            // converted by the Point.parse static method.
            // If the Node.location is changed, it updates the "loc" property of the node data,
            // converting back using the Point.stringify static method.
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            {
                // the Node.location is at the center of each node
                locationSpot: go.Spot.Center
            }
        ];
    }
    function textStyle() {
        return {
            font: "bold 11pt Helvetica, Arial, sans-serif",
            stroke: "whitesmoke"
        }
    }


    myDiagram_ID.nodeTemplate =
        GoJs(go.Node, "Spot",
            { locationSpot: go.Spot.Center },
            //{ movable: true}, 
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            { selectable: false },
            { resizable: false, resizeObjectName: "PANEL" },
            { rotatable: false },
            new go.Binding("angle").makeTwoWay(),
            // the main object is a Panel that surrounds a TextBlock with a Shape
            GoJs(go.Panel, "Auto",
                { name: "PANEL" },
                new go.Binding("desiredSize", "size", go.Size.parse).makeTwoWay(go.Size.stringify),
                GoJs(go.Shape, "Rectangle",  // default figure
                    {
                        portId: "", // the default port: if no spot on link data, use closest side
                        fromLinkable: false, toLinkable: false, cursor: "pointer",
                        fill: "white",  // default color
                        strokeWidth: 1
                    },
                    new go.Binding("figure"),
                    new go.Binding("fill")),
                GoJs(go.TextBlock,
                    {
                        font: "11pt Calibri",
                        margin: 8,
                        maxSize: new go.Size(160, NaN),
                        wrap: go.TextBlock.WrapFit,
                        editable: false
                    },
                    new go.Binding("text").makeTwoWay())
            ),

        );


    myDiagram_ID.linkTemplate =
        GoJs(go.Link,  // the whole link panel
            /*  { selectable: true, selectionAdornmentTemplate: linkSelectionAdornmentTemplate },*/
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding("points").makeTwoWay(),
            GoJs(go.Shape,  // the link path shape
                { isPanelMain: true, strokeWidth: 2 }),
            GoJs(go.Shape,  // the arrowhead
                { toArrow: "Standard", stroke: null }),
            GoJs(go.Panel, "Auto",
                new go.Binding("visible", "isSelected").ofObject(),
                GoJs(go.Shape, "RoundedRectangle",  // the link shape
                    { fill: "#F8F8F8", stroke: null }),
                GoJs(go.TextBlock,
                    {
                        textAlign: "center",
                        font: "10pt helvetica, arial, sans-serif",
                        stroke: "#919191",
                        margin: 2,
                        minSize: new go.Size(10, NaN),
                        editable: true
                    },
                    new go.Binding("text").makeTwoWay())
            )
        );

    myDiagram_ID.linkTemplateMap.add(
        'Oneendarrow',
        GoJs(
            go.Link, // the whole link panel
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding('points').makeTwoWay(),
            GoJs(
                go.Shape, // the link path shape
                { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
            ),
            GoJs(
                go.Shape, // the arrowhead
                { toArrow: "Standard", stroke: null }),
        )
    ),
        myDiagram_ID.linkTemplateMap.add(
            'Twoendarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),
                GoJs(
                    go.Shape, // the arrowhead
                    { toArrow: "Standard", stroke: null }),
                GoJs(
                    go.Shape, // the arrowhead
                    { fromArrow: "Backward", stroke: null }),
            )
        ),
        myDiagram_ID.linkTemplateMap.add(
            'Noarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),

            )
        ),
        myDiagram_ID.nodeTemplateMap.add("Comment",
            GoJs(go.Node, "Auto", nodeStyle(),
                { selectable: false },
                { resizable: false, resizeObjectName: "PANEL" },
                { rotatable: false },

                new go.Binding("angle").makeTwoWay(),
                GoJs(go.Shape, "Rectangle",
                    { fill: "white", strokeWidth: 0 }),
                GoJs(go.TextBlock, textStyle(),
                    {
                        margin: 5,
                        maxSize: new go.Size(200, NaN),
                        wrap: go.TextBlock.WrapFit,
                        textAlign: "center",
                        editable: false,
                        font: "12pt Calibri",
                        stroke: '#454545'
                    },
                    new go.Binding("text").makeTwoWay()),
                // no ports, because no links are allowed to connect with a comment


            ));

    window['myDiagram_' + ID] = myDiagram_ID;
}

function _DCRLFlowchartViewPanel(ID) {

    var GoJs = go.GraphObject.make;  // for conciseness in defining templates

    $(".flow-chart-editor").css("width", "auto");
    var myDiagram_ID = GoJs(go.Diagram, ID, {

        allowDrop: false,  // must be true to accept drops from the Palette
        "draggingTool.dragsLink": false,
        "draggingTool.isGridSnapEnabled": false,
        "linkingTool.isUnconnectedLinkValid": false,
        "relinkingTool.isUnconnectedLinkValid": false,
        "undoManager.isEnabled": false,
        initialContentAlignment: go.Spot.Center,
    });
    // Define a function for creating a "port" that is normally transparent.
    // The "name" is used as the GraphObject.portId, the "spot" is used to control how links connect
    // and where the port is positioned on the node, and the boolean "output" and "input" arguments
    // control whether the user can draw links from or to the port.

    function nodeStyle() {
        return [
            // The Node.location comes from the "loc" property of the node data,
            // converted by the Point.parse static method.
            // If the Node.location is changed, it updates the "loc" property of the node data,
            // converting back using the Point.stringify static method.
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            {
                // the Node.location is at the center of each node
                locationSpot: go.Spot.Center
            }
        ];
    }
    function textStyle() {
        return {
            font: "bold 11pt Helvetica, Arial, sans-serif",
            stroke: "whitesmoke"
        }
    }


    myDiagram_ID.nodeTemplate =
        GoJs(go.Node, "Spot",
            { locationSpot: go.Spot.Center },
            //{ movable: true}, 
            new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
            { selectable: false },
            { resizable: false, resizeObjectName: "PANEL" },
            { rotatable: false },
            new go.Binding("angle").makeTwoWay(),
            // the main object is a Panel that surrounds a TextBlock with a Shape
            GoJs(go.Panel, "Auto",
                { name: "PANEL" },
                new go.Binding("desiredSize", "size", go.Size.parse).makeTwoWay(go.Size.stringify),
                GoJs(go.Shape, "Rectangle",  // default figure
                    {
                        portId: "", // the default port: if no spot on link data, use closest side
                        fromLinkable: false, toLinkable: false, cursor: "pointer",
                        fill: "white",  // default color
                        strokeWidth: 1
                    },
                    new go.Binding("figure"),
                    new go.Binding("fill")),
                GoJs(go.TextBlock,
                    {
                        font: "11pt Calibri",
                        margin: 8,
                        maxSize: new go.Size(160, NaN),
                        wrap: go.TextBlock.WrapFit,
                        editable: false
                    },
                    new go.Binding("text").makeTwoWay())
            ),

        );


    myDiagram_ID.linkTemplate =
        GoJs(go.Link,  // the whole link panel
            /*  { selectable: true, selectionAdornmentTemplate: linkSelectionAdornmentTemplate },*/
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding("points").makeTwoWay(),
            GoJs(go.Shape,  // the link path shape
                { isPanelMain: true, strokeWidth: 2 }),
            GoJs(go.Shape,  // the arrowhead
                { toArrow: "Standard", stroke: null }),
            GoJs(go.Panel, "Auto",
                new go.Binding("visible", "isSelected").ofObject(),
                GoJs(go.Shape, "RoundedRectangle",  // the link shape
                    { fill: "#F8F8F8", stroke: null }),
                GoJs(go.TextBlock,
                    {
                        textAlign: "center",
                        font: "10pt helvetica, arial, sans-serif",
                        stroke: "#919191",
                        margin: 2,
                        minSize: new go.Size(10, NaN),
                        editable: true
                    },
                    new go.Binding("text").makeTwoWay())
            )
        );

    myDiagram_ID.linkTemplateMap.add(
        'Oneendarrow',
        GoJs(
            go.Link, // the whole link panel
            { relinkableFrom: true, relinkableTo: true, reshapable: true },
            {
                routing: go.Link.AvoidsNodes,
                curve: go.Link.JumpOver,
                corner: 5,
                toShortLength: 4
            },
            new go.Binding('points').makeTwoWay(),
            GoJs(
                go.Shape, // the link path shape
                { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
            ),
            GoJs(
                go.Shape, // the arrowhead
                { toArrow: "Standard", stroke: null }),
        )
    ),
        myDiagram_ID.linkTemplateMap.add(
            'Twoendarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),
                GoJs(
                    go.Shape, // the arrowhead
                    { toArrow: "Standard", stroke: null }),
                GoJs(
                    go.Shape, // the arrowhead
                    { fromArrow: "Backward", stroke: null }),
            )
        ),
        myDiagram_ID.linkTemplateMap.add(
            'Noarrow',
            GoJs(
                go.Link, // the whole link panel
                { relinkableFrom: true, relinkableTo: true, reshapable: true },
                {
                    routing: go.Link.AvoidsNodes,
                    curve: go.Link.JumpOver,
                    corner: 5,
                    toShortLength: 4
                },
                new go.Binding('points').makeTwoWay(),
                GoJs(
                    go.Shape, // the link path shape
                    { isPanelMain: true, strokeWidth: 2, stroke: 'black' }
                ),

            )
        ),
        myDiagram_ID.nodeTemplateMap.add("Comment",
            GoJs(go.Node, "Auto", nodeStyle(),
                { selectable: false },
                { resizable: false, resizeObjectName: "PANEL" },
                { rotatable: false },

                new go.Binding("angle").makeTwoWay(),
                GoJs(go.Shape, "Rectangle",
                    { fill: "white", strokeWidth: 0 }),
                GoJs(go.TextBlock, textStyle(),
                    {
                        margin: 5,
                        maxSize: new go.Size(200, NaN),
                        wrap: go.TextBlock.WrapFit,
                        textAlign: "center",
                        editable: false,
                        font: "12pt Calibri",
                        stroke: '#454545'
                    },
                    new go.Binding("text").makeTwoWay()),
                // no ports, because no links are allowed to connect with a comment


            ));

    window['LedgerDiagram_' + ID] = myDiagram_ID;
}

function DocumentReplicationStatus() {
    QDMS.QuickTour.resetQuickTour();
    $("#MenuItems").removeClass("open");
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".categoryToolbarTitle").text('');
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr('id', '');
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $(".search-form").removeClass("hidden");
    $(".Searchexactphrase").removeClass("hidden");
    var url = $("#hfdUrlPath").val() + '/Vessel/DocumentReplicationStatus';
    $.ajax({
        url: url,
        contentType: "application/html; charset=utf-8",
        datatype: "html",
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $('#contentWindow').html(result);
        }
    });
}

function ExportDbToJson() {
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $.ajax({
        url: $("#hfdUrlPath").val() + '/ExportDatabase/Index',
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
            alert("DB data succesfully exported");
        }
    });
}

function RemoveFromDraftDoc(id) {
    ConfirmAlert("Are you sure ! Do you want to remove  from draft ?").then(function (answer) {
        if (answer) {
            $.ajax({
                type: 'GET',
                url: $("#hfdUrlPath").val() + '/draft/RemoveFromDraftDoc',
                data: { "DocID": id },
                processData: true,
                success: function (result) {
                    criticalNotify("Document has been successfully remove from draft ! ", "", "Success");
                    //RenderDraftView(id);
                    QDMSDraftDocuments();
                    //   RenderIsDraftView(id);
                },
                error: loadJsonError
            });

        } else {
            return false;
        }
    });
}

function articledata(control, isdcrl = false, isdcrlview = false, docid = "") {

    try {
        var id = control.attr("id");
        $('.tabledetails-wrapper').find("#" + id).find('tr').remove();
        $('.tabledetails-wrapper').find("#" + id).find('tbody').html(_articlesloderhtmltiny);
        $.ajax({
            url: $("#hfdurlpath").val() + '/article/getarticledata',
            type: 'post',
            data: { 'id': id, 'isdcrlcycle': isdcrl, 'isdcrlview': isdcrlview, "docid": docid },
            crossdomain: true,
            success: function (result) {
                if (result != null) {

                    $(".loader10").hide();
                    control.find(">tbody>tr").remove();

                    setarticlebody(result.documentdata, control.find(">tbody"));


                    toggleexpand(control.closest("tr.draggable-item"), result.articlename);
                    articleexpand(control.closest("tr.draggable-item"));
                    control.find(".drg-rmv").html("");
                    control.find(".drg-rmv-settings").html("");
                    control.find(".drg-rmv-toc").html("");
                    control.find(".drg-rmv-settings-toc").html("");
                    control.find(".drg-rmv").hide();
                    control.find(".drg-rmv-settings").hide();
                    control.find(".drg-rmv-toc").hide();
                    control.find(".drg-rmv-settings-toc").hide();
                    control.find(".drg-rmv-copy").hide();
                    control.find(".drg-rmv-settings-copy").hide();
                    control.find(".drg-rmv-toc-copy").hide();
                    control.find(".drg-rmv-settings-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-toc-copy").hide();
                    control.find(".drg-rmv-addrow-deleterow-withsubrow").hide();
                    control.find(".dt-img").hide();
                    control.find(".templatesettings").hide();
                    control.find(".ui-resizable-handle").hide();
                    control.find("#header").hide();
                    control.find("#footertemplate").hide();
                    control.find("*[contenteditable]").attr("contenteditable", false);
                    $(".subheadertext").parent().parent().attr("contenteditable", false)
                    $(".cautiondiv").parent().attr("contenteditable", false);
                    control.find('grammarly-btn').remove() // remove gramamer tab from browser extension

                    // highligh word if user serch keywork with .higlighrange

                    if ($("#view_search_field").val() != "" && $("#view_search_field").val() != "undefined" && $("#view_search_field").val() != undefined) {
                        var _searchterm = $("#view_search_field").val();
                        ////highlight search term inside a specific context
                        //$(control).unmark().mark(_searchterm);
                        if ($('#exactphrase').prop('checked') === true) {
                            $(control).unmark().mark([_searchterm], {
                                accuracy: "exactly",
                                separateWordSearch: false
                            });
                        }
                        else {
                            $(control).unmark().mark(_searchTerm);
                        }

                    }

                    settimeout(function () {

                        control.find(".two-column .imgresource").resizable();
                        control.find(".two-column .imgresource").resizable('destroy');
                        if ($("#pagesize").val() == "a4") {
                            $("#tabledragger").find(".ul-box").removeclass("procedure");
                            $("#tabledragger").find(".ol-box").removeclass("procedure");
                            $("#tabledragger").find(".ul-alpha-box").removeclass("procedure");
                            $("#tabledragger").find(".ul-hyp-box").removeclass("procedure");
                            $("#tabledragger").find(".ul-chk-box").removeclass("procedure");

                            $("#tabledragger").find(".ul-box").addclass("guidlisce");
                            $("#tabledragger").find(".ol-box").addclass("guidlisce");
                            $("#tabledragger").find(".ul-alpha-box").addclass("guidlisce");
                            $("#tabledragger").find(".ul-hyp-box").addclass("guidlisce");
                            $("#tabledragger").find(".ul-chk-box").addclass("guidlisce");
                        }
                        else if ($("#pagesize").val() == "a5") {
                            $("#tabledragger").find(".ul-box").addclass("procedure");
                            $("#tabledragger").find(".ol-box").addclass("procedure");
                            $("#tabledragger").find(".ul-alpha-box").addclass("procedure");
                            $("#tabledragger").find(".ul-hyp-box").addclass("procedure");
                            $("#tabledragger").find(".ul-chk-box").addclass("procedure");

                            $("#tabledragger").find(".ul-box").removeclass("guidlisce");
                            $("#tabledragger").find(".ol-box").removeclass("guidlisce");
                            $("#tabledragger").find(".ul-alpha-box").removeclass("guidlisce");
                            $("#tabledragger").find(".ul-hyp-box").removeclass("guidlisce");
                            $("#tabledragger").find(".ul-chk-box").removeclass("guidlisce");
                        }


                        docsetbodyfont();
                    });
                }
                else {
                    toggleexpand(control.closest("tr.draggable-item"), control.closest("tr.draggable-item").attr("toc-title"));
                }

            },
            error: function () {

            }
        });
    }
    catch (e) {
        console.log("articledata retrivel error " + e);
    }

}

////function articledataallload(control, isdcrl = false, isdcrlview = false, docid = "") {
////    ////debugger
////    try {
////        if (control.length > 0) {
////            var articleids = [];
////            control.each(function (i) {
////                var id = control[i].id;
////                articleids.push(id);
////                $('.tabledetails-wrapper').find("#" + id).find('tr').remove();
////                $('.tabledetails-wrapper').find("#" + id).find('tbody').html(_articlesloderhtmltiny);
////            });
////            $.ajax({
////                url: $("#hfdurlpath").val() + '/article/getallarticledata',
////                type: 'post',
////                async: false,
////                data: { 'articleids': articleids, 'isdcrlcycle': isdcrl, 'isdcrlview': isdcrlview, "docid": docid },
////                crossdomain: true,
////                success: function (result) {
////                    //debugger
////                    if (result != null) {
////                        window.sessionstorage.setitem("allarticledata", json.stringify(result));

////                    }


////                },
////                error: function () {

//                }
//            });
//        }
//    }
//    catch (e) {
//        console.log("articledata retrivel error " + e);
//    }
//}

function GetDocumentNamesForAutoComplete(IDVal) {
    $("#" + IDVal).autocomplete({
        autoFocus: false,
        minLength: 3,
        source: function (request, response) {
            $.ajax({
                url: $("#hfdUrlPath").val() + '/Document/GetDocumentNameListByText',
                data: {
                    searchString: request.term,
                    Id: $("#hfdViewDocId").val()
                },
                success: function (result) {
                    response(result);
                }
            });
        },
        select: function (event, ui) {
            var UIvalue = ui.item.id;
            $(".linkcontent").parent().attr("data-id", UIvalue);
            $(".linkcontent").parent().attr("data-type", ui.item.type);

        }
    });
}

function ValidateEnterdURL() {
    return /^(http(s)?:\/\/)?(www\.)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test($(".linkcontent").val());
}
function OpenExternalLink(inp) {
    var url = $(inp).attr('link');
    url = (url.includes('https://') || url.includes('http://')) ? url : 'https://' + url;
    window.open(url);
}

$(document).on("keyup", ".imageAutoComplete", function (e) {
    if ($(".imageAutoComplete").val().length == 3 && e.keyCode != 39 && e.keyCode != 8) {
        ImageAutoCompleteSerach();
    }
});
$(document).on('paste', ".imageAutoComplete", function (e) {
    $(".imageAutoComplete").val(e.originalEvent.clipboardData.getData('text'));
    if ($(".imageAutoComplete").val().length > 2) {
        ImageAutoCompleteSerach();
    }
});

function ImageAutoCompleteSerach() {
    var enterdName = $('.imageAutoComplete').val();
    $('#imageList').html('');
    $('#logoLoaded').append('<div class="spinner"></div>');
    $.ajax({
        type: 'POST',
        url: $("#hfdUrlPath").val() + '/ImageManagement/DisplayAllImages',
        processData: true,
        data: { "displayName": enterdName },
        success: function (result) {

            imageLoaded == true;
            if (result.errorType == "Error") {
                criticalNotify("An Error has occured", "", "Error");
                return;
            }
            $('#logoLoaded .spinner').hide();
            $('#imageList').html(result);
            initLoadImageButton();
            $('.imageAutoComplete').val(enterdName);
        }

    });
}

function unorderedlist(theParent, html, level, origin) { // for bullet list
    var linkid = "";
    var tabindexId = "";
    var ItemID = "";
    //html = '&nbsp';
    //html = "";    
    if ($(theParent).hasClass("ul-box")) {

        //if (html.length == 0)
        //return '';
        //else {

        linkid = uniqueObjectId();
        tabindexId = uniqueObjectId();
        ItemID = "NaN";
        if (html.startsWith("<li"))
            return '<ul class="ul-box sub-list sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
        else
            return '<ul class="ul-box sub-list sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" ><li>' + html + '</li></ul>';
    }
    else if ($(theParent).hasClass("ul-alpha-box") || $(theParent).hasClass("ul-box2")) {

        //if (html.length == 0)
        //return '';
        //else {

        linkid = uniqueObjectId();
        tabindexId = uniqueObjectId();
        ItemID = "NaN";
        if (html.startsWith("<li"))
            return '<ul class="ul-alpha-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
        else
            return '<ul class="ul-alpha-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" ><li>' + html + '</li></ul>';
    }
    else if ($(theParent).hasClass("ul-hyp-box")) {

        //if (html.length == 0)
        //return '';
        //else {

        linkid = uniqueObjectId();
        tabindexId = uniqueObjectId();
        ItemID = "NaN";
        if (html.startsWith("<li"))
            return '<ul class="ul-hyp-box sub-hypen-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
        else
            return '<ul class="ul-hyp-box sub-hypen-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" ><li>' + html + '</li></ul>';
    }
    else if ($(theParent).hasClass("ol-box") || $(theParent).hasClass("ol-box2")) {

        //if (html.length == 0)
        //return '';
        //else {

        linkid = uniqueObjectId();
        tabindexId = uniqueObjectId();
        ItemID = "NaN";
        if (html.startsWith("<li"))
            return '<ol class="ol-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ol>';
        else
            return '<ol class="ol-box sub-disc-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" ><li>' + html + '</li></ol>';
    }
    else if ($(theParent).hasClass("ul-chk-box")) {

        linkid = uniqueObjectId();
        tabindexId = uniqueObjectId();
        ItemID = "NaN";
        if (html.startsWith("<li"))
            return '<ul class="ul-chk-box sub-hypen-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" >' + html + '</ul>';
        else
            return '<ul class="ul-chk-box sub-hypen-list level' + level + '" id="' + linkid + '" tabindex="' + tabindexId + '" data-id="' + ItemID + '" ><li>' + html + '</li></ul>';
    }
    //}
    else {
        return '';
    }
    //$(".ul-box").contextMenu({
    //    menuSelector: "#formatcontextMenu",
    //});
}

function historyUpdate(isDocument) {

    var _DocContentItemDiv = $("#tableDragger")
    _DocContentItemDiv.find("#header").attr("height", _DocContentItemDiv.find("#header").find(".draggable-item").height());
    _DocContentItemDiv.find("#footer").attr("height", _DocContentItemDiv.find("#footer").find(".draggable-item").height());
    _DocContentItemDiv.find('.insertMeidum').each(function () {
        if ($(this).text() == "") {
            $(this).closest(".draggable-item").closest("tr").remove();
        }
    });
    _DocContentItemDiv.find(".article-table>tbody>tr.temp-tr.hide-article").remove();
    _DocContentItemDiv.find('grammarly-btn').remove()
    var htmlview = _DocContentItemDiv.html();
    var encodedString = window.btoa(unescape(encodeURIComponent(htmlview)));
    var input = {
        'DocumentData': encodedString,
        'Id': $('#historyID').val()
    };
    var url = isDocument ? '/Document/UpdateHistoryData' : '/Article/UpdateHistoryData';
    $.ajax({
        url: $("#hfdUrlPath").val() + url,
        data: JSON.stringify(input),
        type: 'POST',
        contentType: "application/json; charset=utf-8",
        processData: true,
        success: function (result) {
            if (result == "Success") {
                criticalNotify("Successfully updated", "", "Success");
            }
            else {
                criticalNotify("Updation failed", "", "Error");
            }
            $("#historyID").val("");
        }
    });
}

function DownloadLinkedFile(fileId, fileExtension) {
    if ($("#hdnViewFileOnline").val() == 'true') {
        ShowFileOnline(fileId, 'FLS', fileExtension);
        return;
    }

    if (fileExtension && fileExtension.toLowerCase().endsWith("pdf")) {
        if (isPDFPopUp == "True") {
            showPDFEmbeddedBlob($("#hfdUrlPath").val() + "/File/DownloadShowfile/" + fileId, displayName);
            return;
        } else {
            var anchor = document.createElement('a');
            anchor.href = $("#hfdUrlPath").val() + "/File/DownloadShowfile/" + fileId;
            anchor.target = '_blank';
            anchor.click();
            anchor.remove();

            return;
        }
    }
    $(".progressing-loader").show();
    StopIntervel();
    setTimeout(function () {
        gauge.update(0);
    }, 100);
    percentageUpdate();

    var formData = new FormData();
    formData.append('id', fileId || 0);
    var xhttp;
    if (window.XMLHttpRequest) { xhttp = new XMLHttpRequest(); }//code for modern browsers} 
    else { xhttp = new ActiveXObject("Microsoft.XMLHTTP"); }// code for IE6, IE5

    xhttp.open("POST", $("#hfdUrlPath").val() + "/File/DownloadShowfile", true);
    xhttp.onreadystatechange = function () {
        if (xhttp.readyState == 4) {
            if (xhttp.status == 200) {
                StopIntervel();
                var d = $.Deferred();
                setTimeout(function () {
                    gauge.update(100);
                    d.resolve(true);
                }, 1000);

                d.promise();
                d.then(function () {
                    var fileName = decodeURI(xhttp.getResponseHeader('File-Name'));
                    var fileextn = fileName.split(".");
                    var blob = new Blob();
                    if (fileextn[fileextn.length - 1] != null && fileextn[fileextn.length - 1] != "") {
                        if ((fileextn[fileextn.length - 1]).toLowerCase() != "pdf") {
                            blob = new Blob([xhttp.response], { type: "octet/stream" });
                            saveAs(blob, fileName);
                        }
                        else {
                            blob = new Blob([xhttp.response], { type: "application/pdf" });
                            var fileURL = URL.createObjectURL(blob);
                            // window.open(fileURL, fileName, "", "toolbar=0");
                            if (clientName === "BP") {
                                showPDFEmbeddedBlob(fileURL, fileName);
                            } else {
                                window.open(fileURL, fileName);
                            }
                        }
                    }
                    else {
                        blob = new Blob([xhttp.response], { type: "octet/stream" });
                        saveAs(blob, fileName);
                    }
                    setTimeout(function () {
                        $(".progressing-loader").hide();
                        gauge.update(0);
                    }, 1000);
                });
            }
            else {
                StopIntervel();
                $(".progressing-loader").hide();
                var win = window.open($("#hfdUrlPath").val() + "/Error/FileNotFound");
                setTimeout(function () {
                    win.close();
                    gauge.update(0);
                }, 1000);
            }
        }

    };
    xhttp.responseType = "arraybuffer";
    xhttp.send(formData);
}


function showPDFEmbedded(fileId, displayName) {
    console.log("ENtered showPDFEmbedded");
    var pdfUrl = $("#hfdUrlPath").val() + "/File/DownloadShowfile?id=" + fileId + "#toolbar=1";

    $("#divPDFViewer").removeClass('hidden');
    $('#divPDFViewer .pop-overlay').css('display', 'block');
    $('#divPDFViewer .popupheader span:not(.popup-close)').html(displayName);
    var height = $('#divPDFViewer .pdfcontainer').height() - 10;
    var pdfHtml = '<embed src="' + pdfUrl + '" width="100%" height="' + height + '" />';
    $('#divPDFViewer .pdfcontainer').html(pdfHtml);
    //var viewer = $("#divPDFViewerObject");
    //PDFObject.embed(pdfUrl, viewer);
}

function showPDFEmbeddedBlob(pdfUrl, displayName) {
    console.log("ENtered showPDFEmbedded blob");

    $("#divPDFViewer").removeClass('hidden');
    $('#divPDFViewer .pop-overlay').css('display', 'block');
    $('#divPDFViewer .popupheader span:not(.popup-close)').html(displayName);
    var height = $('#divPDFViewer .pdfcontainer').height();
    var pdfHtml = '<iframe src="' + pdfUrl + '" width="100%" height="' + height + '" ></iframe>';
    $('#divPDFViewer .pdfcontainer').html(pdfHtml);
    //var viewer = $("#divPDFViewerObject");
    //PDFObject.embed(pdfUrl, viewer);
}
function SetTabIndex() {
    $("#tableDragger div[tabindex]").each(function () {
        var value = $(this).attr("tabindex");
        if (parseInt(value) > _tabIndex) {
            _tabIndex = parseInt(value);
            invokeTOCGeneration();
        }
    });
}
function DeleteBookmark(bookmarkId,documentId) {
    var url = $("#hfdUrlPath").val() + '/Document/DeleteBookmark';
    $.ajax({
        url: url,
        data: { BookmarkId: bookmarkId, DocumentId: documentId },
        type: 'POST',
        crossDomain: true,
        success: function (result) {
            // criticalNotify('Bookmark removed successfully', '', "Success");
        }
    });
}
function ConfirmYesOrNoAlert(msg) {
    var defer = $.Deferred();
    var img = $("#hdnURLPathVal").val() + "/Content/Images/info-icon.png";
    $(".div-alert-style").removeClass("alertreject");
    $(".div-alert-style").removeClass("alertapprove");
    $(".div-alert-style").addClass("alertinfo");
    $(".alertsymbol").attr('src', img);
    $("#alertTitle").html('<div style="padding-bottom:10px;">' + msg + '</div>' + '<div><button type="button" class="btn btn-default red-buttons" id="confirm_ok">Yes</button><button type="button" id="confirm_cancel" class="btn btn-default default-buttons">No</button></div> ');
    $("#confirm_ok").click(function () {
        defer.resolve(true);
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');
        criticalNotify("Notification will appear once your zip file is ready for downloading", "", "Success");
    });
    $("#confirm_cancel").click(function () {
        defer.resolve(false);
        $(".alertcontent").html("");
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');
    });
    $(".alert-popup-close").click(function () {
        defer.resolve(false);
        $(".alertcontent").html("");
        $(".alert-pop-overlay").hide();
        $(".alert-pop-overlay").css('bottom', 'auto');

    });
    $(".alert-pop-overlay").show();
    $(".alert-pop-overlay").css('bottom', 0);
    return defer.promise();
}
function SetDocHeaderAfterArticleDrag(Id, result) {
    if (result.ApprovedDate !== null)
        $("#tableDragger").find('#' + Id + '').closest('tr').prev().find("#docDate").text(result.ApprovedDate.split(' ')[0].toString("dd/mm/yyyy").split("/").join("-"));
    $("#tableDragger").find('#' + Id + '').closest('tr').prev().find("#approver").text(result.GlobalApprover);
    $("#tableDragger").find('#' + Id + '').closest('tr').prev().find("#docNumb").text(result.ArticleNumber);
    $("#tableDragger").find('#' + Id + '').closest('tr').prev().find(".revision").text(result.Version);
}

function rectifySequence(control) {
    loneLiElements = $(control).find('li').not('.ol-box2').not('.ul-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box');

    if ($(loneLiElements[0]).parent().hasClass('ul-alpha-box')) {
        $.each(loneLiElements, function (i) {
            $(loneLiElements[i]).addClass('ul-box2');
        });
    }
    else if ($(loneLiElements[0]).parent().hasClass('ol-box')) {
        $.each(loneLiElements, function (i) {
            $(loneLiElements[i]).addClass('ol-box2');
        });
    }
    else if ($(loneLiElements[0]).parent().hasClass('ul-box')) {
        $.each(loneLiElements, function (i) {
            $(loneLiElements[i]).addClass('ul-box');
        });
    }
    else if ($(loneLiElements[0]).parent().hasClass('ul-hyp-box')) {
        $.each(loneLiElements, function (i) {
            $(loneLiElements[i]).addClass('ul-hyp-box');
        });
    }
    else if ($(loneLiElements[0]).parent().hasClass('ul-chk-box')) {
        $.each(loneLiElements, function (i) {
            $(loneLiElements[i]).addClass('ul-chk-box');
        });
    }

    liAlphaElements = $(control).find('li.ul-box2');
    liDigElements = $(control).find('li.ol-box2');
    lcount = 1;

    $.each(liAlphaElements, function (i) {
        if ($(liAlphaElements[i]).prevAll('li.ul-box2').length > 0) {
            if ($(liAlphaElements[i]).parent().is('ul-alha-box')) {
                lcount = $(liAlphaElements[i]).prevAll('li').not('.ol-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                lcount = $(liAlphaElements[i]).prevAll('li.ul-box2').length + 1;
            }
        }
        else
            lcount = 1;

        $(liAlphaElements[i]).attr('seq', lcount);
    });
    $.each(liDigElements, function (i) {
        if ($(liDigElements[i]).hasClass('reset'))
            lcount = 0;
        else if ($(liDigElements[i]).prevAll('li.ol-box2').length > 0) {
            if ($(liDigElements[i]).parent().is('ol-box')) {
                lcount = $(liDigElements[i]).prevAll('li').not('.ul-box2').not('.ul-hyp-box').not('.ul-box').not('.ul-chk-box').length + 1;
            }
            else {
                lcount = $(liDigElements[i]).prevAll('li.ol-box2').length + 1;
            }
        }
        else
            lcount = 1;

        $(liDigElements[i]).attr('seq', lcount);
    });
}
function SetTabTitle(name) {
    document.title = name;
}

$(document).on('keydown', '.page-headingBSM', function () {
    var height = $('.page-headingBSM').height();
    if (height > 21.5312)
        $('.page-headingBSM').addClass('text-left')
    else
        $('.page-headingBSM').removeClass('text-left')
});

$(document).on('focusout', '.page-headingBSM', function () {
    var height = $('.page-headingBSM').height();
    if (height > 21.5312)
        $('.page-headingBSM').addClass('text-left')
    else
        $('.page-headingBSM').removeClass('text-left')
});
//merge this
$(document).on('keydown', '#waterMark', function () {
    let textlength = $('#waterMark').val().length
    if (textlength === 20)
        $('#watermarkErrorSpan').removeClass("hidden");
    else
        $('#watermarkErrorSpan').addClass("hidden");
});
function UnmarkExistingSelectionWords() {
    if ($("#tableDragger").length > 0 && $("#template-tools-tab").find(".tab-1").text() !== "Article Details") {
        $("#tableDragger").unmark();
    }
}

function ShowFileOnline(id, type, fileExtension, ishistory = false) {
    fileExtension = (fileExtension === undefined || fileExtension === null) ? "" : fileExtension;
    var onlineDisplayUrl = $("#hfdUrlPath").val() + "/File/ShowFileOnline?Id=" + id + "&Type=" + type + "&FileExtension=" + fileExtension + "&isHistory=" + ishistory;

    var anchor = document.createElement('a');
    anchor.href = onlineDisplayUrl;
    anchor.target = '_blank';
    anchor.click();
    anchor.remove();
    return;
}
function ResetSubHeaderTemplate(DocContentData) {

    if (DocContentData.find(".SubHeader1").length > 0) {
        DocContentData.find(".SubHeader1").each(function () {
            if ($(this).find("span").html() === '') {
                let divcontent = $(this).parent().children('div')[0].outerHTML
                $(this).parent().children('div')[0].remove();
                if ($(this).parent().children('p')[1].outerHTML === "<p></p>")
                    $(this).parent().children('p')[1].remove();
                $(this).find("span").append(divcontent);
            }
        });
    }
}
function DocumentMapping() {
    QDMS.Menu.ShowDraftRecommendedMenu();
    QDMS.Menu.ShowSerachButton();
    $(".categoryToolbarTitle").text("");
    $('.categoryToolbarTitle').attr('title', '');
    $(".categoryToolbarTitle").attr("id", "");
    var url = $("#hfdUrlPath").val() + '/Document/DocumentMapping';
    $(".loader10").show();
    $(".loader10").css('z-index', '999');
    $(".search-form").removeClass("hidden");
    $(".Searchexactphrase").removeClass("hidden");
    $("#header_search_field").val('');
    $.ajax({
        url: url,
        type: 'GET',
        crossDomain: true,
        success: function (result) {
            $("#container_link").hide();
            $('#Acknlwdge').fadeOut();
            $("#containerbookmark_link").hide();
            $("#containerDcrl_link").hide();
            $("#categoryMenu").show();
            $("#contentWindow").html(result);
            $(".loader10").hide();
            $(".loader10").css('z-index', '');
        }
    });

}

function ValidateUploadingFileName(fileName) {
    let crtiticalMsg = "";
    try {
        let maxFileNameLength = parseInt($("#hdnMaxUploadFileNameLength").val());
        let name = fileName.split('.')[0];
        let IsNameLenthNotValid = name.length > maxFileNameLength;
        const regex = /[^A-Za-z0-9()-_() ]/;
        let IsNameNotValid = regex.test(name) || fileName.split('.').length > 2 || fileName.split(',').length > 1;
        if (IsNameLenthNotValid || IsNameNotValid) {
            crtiticalMsg = IsNameNotValid ? "The file name contains special characters kindly remove it." : "The file name length should be less than " + maxFileNameLength + " characters.";
        }
    } catch
    {

    }
    return crtiticalMsg;
}
function ConvertUTCDateToLocalDate(className) {
    className = "." + className;
    var dateFiledCount = $(className).length;
    for (var i = 0; i < dateFiledCount; i++) {
        var date = new Date($(className).eq(i).text().trim());
        var newDate = moment(date).format("DD/MM/YYYY hh:mm A");
        $(className).eq(i).text(newDate);
    }
}
function ConvertUTCDateToLocalDateWithoutTime(className) {
    className = "." + className;
    var dateFiledCount = $(className).length;
    for (var i = 0; i < dateFiledCount; i++) {
        var date = new Date($(className).eq(i).text().trim());
        var newDate = moment(date).format("DD/MM/YYYY");
        $(className).eq(i).text(newDate);
    }
}
function ConvertUTCDateToLocalDateInAttribute(className,attrName) {
    className = "." + className;
    var dateFiledCount = $(className).length;
    for (var i = 0; i < dateFiledCount; i++) {
        var date = new Date($(className).eq(i).parent().attr('title'));
        var newDate = moment(date).format("DD/MM/YYYY hh:mm A");
        $(className).eq(i).parent().attr('title', newDate);
    }
};
 
var TemplateFunction = TemplateFunction || {};
TemplateFunction.ContentTemplate = {
    _preUrlString: "/ContentTemplate/",
    _renderTemplate: function () {
        $(".loader10").show();
        var url =  $("#hfdUrlPath").val()+this._preUrlString + "ManageTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#categoryMenu").show();
                $("#header_search_field").val("");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
            }
        });
    },
    _renderContentTemplate: function () {
        $(".loader10").show();
        var that = this;
        var url = $("#hfdUrlPath").val() + this._preUrlString + "ManageContentTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#createTemplate").html(result);
                that._loadTemplates();
            },
            error: function (result) {
            }
        });
    },
    _loadTemplates: function () {
        $(".loader10").show();
        $.ajax({
            url: $("#hfdUrlPath").val() + this._preUrlString + "LoadContentTemplates",
            type: 'POST',
            crossDomain: true,
            success: TemplateFunction.CommonFuc._bind,
            error: function (result) {
            }
        });
    },
}

TemplateFunction.HeaderTemplate = {
    _preUrlString: "/HeaderTemplate/",
    _renderTemplate: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val() + this._preUrlString + "ManageTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
            }
        });
    },
    _renderHeaderTemplate: function () {
        var that = this;
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageHeaderTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#createTemplate").html(result);
                that._loadTemplates();
            }
        });
    },
    _loadTemplates: function () {
        $(".loader10").show();
        $.ajax({
            url: $("#hfdUrlPath").val() + this._preUrlString + "LoadHeaderTemplates",
            type: 'POST',
            crossDomain: true,
            success: TemplateFunction.CommonFuc._bind,
            error: function (result) {
            }
        });
    }
}

TemplateFunction.FooterTemplate = {
    _preUrlString: "/FooterTemplate/",
    _renderTemplate: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
            }
        });
    },
    _renderFooterTemplate: function () {
        $(".loader10").show();
        var that = this;
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageFooterTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#createTemplate").html(result);
                that._loadTemplates();
            }
        });
    },
    _loadTemplates: function () {
        $(".loader10").show();
        $.ajax({
            url: $("#hfdUrlPath").val() + this._preUrlString + "LoadFooterTemplates",
            type: 'POST',
            crossDomain: true,
            success: TemplateFunction.CommonFuc._bind,
            error: function (result) {
            }
        });
    },

}

TemplateFunction.DocumentTemplate = {
    _preUrlString: "/DocumentTemplate/",
    _renderTemplate: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
            }
        });
    },
    _renderDocumentTemplate: function () {
        var that = this;
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageDocumentTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#createTemplate").html(result);
                that._loadTemplates();
            }
        });
    },
    _loadTemplates: function () {
        $(".loader10").show();
        $.ajax({
            url: $("#hfdUrlPath").val() + this._preUrlString + "LoadDocumentTemplates",
            type: 'POST',
            crossDomain: true,
            success: TemplateFunction.CommonFuc._bind,
            error: function (result) {
            }
        });
    }

}

TemplateFunction.CommonFuc = {
    _bind: function (result) {
        $("#loadTemplates").html(result);
        $(".loader10").hide();
    }
}

TemplateFunction.CategoryTemplate = {

    _preUrlString: "/categories/",
    _renderCategoryMenu: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageCategory";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");
            }
        });
        if (!$('body').hasClass('sidebar-collapse')) {
            $('body').addClass('sidebar-collapse');
        }
    },
    _renderTemplate: function () {
        $(".loader10").show();
        var that = this;
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageCategoryList";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#createCategory").html(result);
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
                that._loadCategories();
            }
        });
    },
    _loadCategories: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "LoadCategories";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#loadcategories").html(result);
            }
        });
    }
}

TemplateFunction.UserTemplateManagement = {
    _preUrlString: "/UserTemplate/",
    _renderTemplate: function () {
        $(".loader10").show();
        var url = $("#hfdUrlPath").val()+ this._preUrlString + "ManageTemplate";
        $.ajax({
            url: url,
            type: 'POST',
            crossDomain: true,
            success: function (result) {
                $(".loader10").hide();
                $("#contentWindow").html(result);
                $("#header_search_field").val("");
                $("#container_link").hide();
                $('#Acknlwdge').fadeOut();
                $("#containerbookmark_link").hide();
                $("#containerDcrl_link").hide();
                $("#categoryMenu").show();
            }
        });
    },
    _loadTemplates: function () {
        $(".loader10").show();
        $.ajax({
            url: $("#hfdUrlPath").val() + this._preUrlString + "LoadUserTemplates",
            type: 'POST',
            crossDomain: true,
            success: TemplateFunction.CommonFuc._bind,
            error: function (result) {
            }
        });
    },
}
 

;
